
========================================================================
disasm
========================================================================

------------------------------------------------------------------------
Region: PM_REGION
------------------------------------------------------------------------

 <$reset>
0x000000        03000000                 Null = Null + Null;
0x000001        DDF0004D                 jump $pre_main;

 <$interrupt.handler>
0x000002        F100001C                 pushm <r0, r1, r2>;
0x000003        0920FE4D                 r0 = Null + M[0xfffe4d];
0x000004        F3200000                 push r0;
0x000005        1900FE4D                 M[0xfffe4d] = Null + Null;
0x000006        0920FE93                 r0 = Null + M[0xfffe93];
0x000007        F3200000                 push r0;
0x000008        1900FE93                 M[0xfffe93] = Null + Null;
0x000009        0920FE71                 r0 = Null + M[0xfffe71];
0x00000A        1920004E                 M[$interrupt.start_time] = r0 + Null;
0x00000B        81EEFFBF                 rFlags = rFlags AND 0xffbf;
0x00000C        1900FE12                 M[0xfffe12] = Null + Null;
0x00000D        0930FE19                 r1 = Null + M[0xfffe19];
0x00000E        0940FE44                 r2 = Null + M[0xfffe44];
0x00000F        F1007FF8                 pushm <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, rLink, rFlags>;
0x000010        F101FFFF                 pushm <I0, I1, I2, I3, I4, I5, I6, I7, M0, M1, M2, M3, L0, L1, L4, L5>;
0x000011        F1023FFF                 pushm <rMAC2, rMAC1, rMAC0, DoLoopStart, DoLoopEnd, DivResult, DivRemainder, rMACB2, rMACB1, rMACB0, B0, B1, B4, B5>;
0x000012        1900FE17                 M[0xfffe17] = Null + Null;
0x000013        51C00000                 L0 = Null + 0;
0x000014        51D00000                 L1 = Null + 0;
0x000015        51E00000                 L4 = Null + 0;
0x000016        51F00000                 L5 = Null + 0;
0x000017        F3000000                 push Null;
0x000018        F1DAFFFF                 B5 = M[SP + -0x1];
0x000019        F1CAFFFF                 B4 = M[SP + -0x1];
0x00001A        F1BAFFFF                 B1 = M[SP + -0x1];
0x00001B        F3A60000                 pop B0;
0x00001C        0940FE18                 r2 = Null + M[0xfffe18];
0x00001D        FD0000FF D1545BDE        r3 = M[r2 + -42018];
0x00001F        01E00080                 rFlags = Null + 128;
0x000020        E420002F                 r0 = Null + 1;
0x000021        09002C95                 Null = Null + M[$interrupt.block_count];
0x000022        00200001                 if NE r0 = Null + Null;
0x000023        1920FE12                 M[0xfffe12] = r0 + Null;
0x000024        E005000F                 call r3;
0x000025        01E00000                 rFlags = Null + 0;
0x000026        F1063FFF                 popm <rMAC2, rMAC12, rMAC0, DoLoopStart, DoLoopEnd, DivResult, DivRemainder, rMACB2, rMACB12, rMACB0, B0, B1, B4, B5>;
0x000027        F105FFFF                 popm <I0, I1, I2, I3, I4, I5, I6, I7, M0, M1, M2, M3, L0, L1, L4, L5>;
0x000028        F1047FF8                 popm <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, rLink, rFlags>;
0x000029        1940FE44                 M[0xfffe44] = r2 + Null;
0x00002A        85334000                 r1 = r1 OR 0x4000;
0x00002B        1930FE16                 M[0xfffe16] = r1 + Null;
0x00002C        FD0000FF 09305C95        r1 = Null + M[$interrupt.total_time];
0x00002E        2933004E                 r1 = r1 - M[$interrupt.start_time];
0x00002F        0933FE71                 r1 = r1 + M[0xfffe71];
0x000030        FD0000FF 19305C95        M[$interrupt.total_time] = r1 + Null;
0x000032        F104000C                 popm <r0, r1>;
0x000033        1930FE93                 M[0xfffe93] = r1 + Null;
0x000034        1920FE4D                 M[0xfffe4d] = r0 + Null;
0x000035        F104001C                 popm <r0, r1, r2>;
0x000036        DC0E000F                 rti;

 <$flash.init_pm>
0x000037        FD0000FF 09205B45        r0 = Null + M[$flash.code.address];
0x000039        1920FE83                 M[0xfffe83] = r0 + Null;
0x00003A        FD000004 85200000        r0 = Null OR 0x40000;
0x00003C        1920FE84                 M[0xfffe84] = r0 + Null;
0x00003D        DC0D000F                 rts;

 <$flash.init_dmconst>
0x00003E        FD0000FF 09205B4D        r0 = Null + M[$flash.data24.address];
0x000040        1920FE5C                 M[0xfffe5c] = r0 + Null;
0x000041        01200002                 r0 = Null + 2;
0x000042        1920FE62                 M[0xfffe62] = r0 + Null;
0x000043        FD0000FF 09205B49        r0 = Null + M[$flash.data16.address];
0x000045        1920FE5B                 M[0xfffe5b] = r0 + Null;
0x000046        1900FE61                 M[0xfffe61] = Null + Null;
0x000047        DC0D000F                 rts;

 <$faststream.sbcenc_post_func>
0x000048        F3D00000                 push rLink;
0x000049        D12B0010                 r0 = M[r9 + 16];
0x00004A        8122000F                 r0 = r0 AND 0xf;
0x00004B        01300000                 r1 = Null + 0;
0x00004C        E1F025A0                 call $sbcenc.putbits;
0x00004D        DDF01620                 jump $pop_rLink_and_rts;

 <$pre_main>
0x00004E        E1F0FFE9                 call $flash.init_pm;
0x00004F        DDF02FC3                 jump cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=;

 <HsYCmBU+schRlaNyHHJepKRzyoMrwjpe5ZRMnyyqFtI=>
0x000050        D1C20000                 r10 = M[r0 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000051        500000CF                 I0 = Null + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000052        D1C20001                 r10 = M[r0 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000053        504000CF                 I4 = Null + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000054        44C000BF                 r10 = Null + M3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000055        DC0D000F                 rts;

 <a9xtrkpsl04nIFyXAFpPDxIaeIr6aHWeUBmPca6XQDA=>
0x000056        D1240000                 r0 = M[r2 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000057        5020002F                 I2 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000058        D1240001                 r0 = M[r2 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000059        5060002F                 I6 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00005A        D1440002                 r2 = M[r2 + 2];

 <ZI0z6hCm785VmTm7AG/EUZDvT/V309di8wIJXgH1WvU=>
0x00005B        D1230000                 r0 = M[r1 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00005C        5010002F                 I1 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00005D        D1230001                 r0 = M[r1 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00005E        5050002F                 I5 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00005F        D1330002                 r1 = M[r1 + 2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000060        DC0D000F                 rts;

 <uR8vzq8DLM1d8BVzor4cq+JVf1tpPkoHDOxG4YS4lzI=>
0x000061        D1C30000                 r10 = M[r1 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000062        505000CF                 I5 = Null + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000063        D1C30001                 r10 = M[r1 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000064        501000CF                 I1 = Null + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000065        DDF0FFEB                 jump HsYCmBU+schRlaNyHHJepKRzyoMrwjpe5ZRMnyyqFtI=;

 <V6FoBiRuWtLPAItHXB+oclaeO9epdUBF1eTN4PFBj9g=>
0x000066        0005000F                 Null = r3 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000067        DD000034                 if EQ jump 1Qn0vfRdxUiUJcH9ljyrDYL3PBpRCpNi8IXNq+k7K5o=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000068        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000069        E1F0FFE7                 call HsYCmBU+schRlaNyHHJepKRzyoMrwjpe5ZRMnyyqFtI=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00006A        E1F0FFF1                 call ZI0z6hCm785VmTm7AG/EUZDvT/V309di8wIJXgH1WvU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00006B        5020004F                 I2 = Null + r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00006C        51A00001                 M2 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00006D        FD00007F 0160FFFF        r4 = Null + 8388607;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00006F        20164A5F                 rMAC = r4 - r3, r2 = M[I2,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000070        AF452500                 rMAC = rMAC + r2 * r3 (SS), r0 = M[I1,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000071        E5F00005                 do sSJQHgAnDkGYs3fGl97+UtiQ21VuP/oTTrJWO8966uw=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000072        97210035                 r0 = r0 * rMAC (frac), r1 = M[I5,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000073        9731A100                 r1 = r1 * rMAC (frac), M[I0,1] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000074        20164A5F                 rMAC = r4 - r3, r2 = M[I2,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000075        AF4525B1                 rMAC = rMAC + r2 * r3 (SS), r0 = M[I1,1], M[I4,1] = r1;

 <sSJQHgAnDkGYs3fGl97+UtiQ21VuP/oTTrJWO8966uw=>
0x000076        DDF015F7                 jump $pop_rLink_and_rts;

 <Ev7dNKPeG2xnOvTSkybjJWfHpb4uvmPIwGjosszK91g=>
0x000077        01B00000                 r9 = Null + 0;

 <kDL1cIMS9YSaMd+xitEIsBnkRAZ8BghCWWC/AZzv41g=>
0x000078        0009000F                 Null = r7 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000079        DD000009                 if EQ jump HefPPe8o3kg77cAECI6aPlM97AjaDpFKqSNbQTqGceg=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00007A        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00007B        E009000F                 call r7;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00007C        F3D40000                 pop rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00007D        0002000F                 Null = r0 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00007E        DD000004                 if EQ jump HefPPe8o3kg77cAECI6aPlM97AjaDpFKqSNbQTqGceg=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00007F        000B000F                 Null = r9 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000080        E00B0001                 if NE call r9;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000081        DDF015EC                 jump $pop_rLink_and_rts;

 <HefPPe8o3kg77cAECI6aPlM97AjaDpFKqSNbQTqGceg=>
0x000082        00BA000F                 r9 = r8 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000083        F3A00000                 push r8;
0x000084        F3E60000                 pop FP;

 <PIMMXSTnNoBEpEAIU9n1bh+BQwInFKil9xLYUUvUi+s=>
0x000085        51800000                 M0 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000086        51900001                 M1 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000087        DC0D000F                 rts;

 <S9wFkBPn43yBkrNvnb1ryBNB29/gcMHFe2/67ce7yCg=>
0x000088        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000089        44C000BF                 r10 = Null + M3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00008A        E410002F                 rMAC = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00008B        912C0001                 r0 = r10 ASHIFT 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00008C        D9020000                 Div = rMAC / r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00008D        FD000080 01300000        r1 = Null + -8388608;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00008F        23112100                 rMAC = rMAC - rMAC, r0 = M[I0,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000090        E5F00002                 do Ia+zSDtcyxWoI62cJQDb38FE6NWzxMoqlB6pAK6H6ow=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000091        BF232100                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I0,1];

 <Ia+zSDtcyxWoI62cJQDb38FE6NWzxMoqlB6pAK6H6ow=>
0x000092        D821000F                 r0 = SIGNDET rMAC;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000093        93E20000                 rMAC = rMAC ASHIFT r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000094        2020002F                 r0 = Null - r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000095        D9300001                 r1 = DivResult;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000096        CC11003F                 rMAC = rMAC * r1 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000097        93E20000                 rMAC = rMAC ASHIFT r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000098        DC0D000F                 rts;

 <SBWM8pAr8u0WvmznDI9f/yY2swIAMxuWyQDsW9b7R/c=>
0x000099        D1430002                 r2 = M[r1 + 2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00009A        D5420002                 M[r0 + 2] = r2;

 <1Qn0vfRdxUiUJcH9ljyrDYL3PBpRCpNi8IXNq+k7K5o=>
0x00009B        2002003F                 Null = r0 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00009C        DC0D0000                 if EQ rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00009D        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00009E        E1F0FFB2                 call HsYCmBU+schRlaNyHHJepKRzyoMrwjpe5ZRMnyyqFtI=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00009F        E1F0FFBC                 call ZI0z6hCm785VmTm7AG/EUZDvT/V309di8wIJXgH1WvU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000A0        E5F00003                 do SxhZGzAxRFPI/tQNM/XeGVIGgSr40TFPpe440fmJnbE=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000A1        03002535                 Null = Null + Null, r0 = M[I1,1], r1 = M[I5,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000A2        0300A1B1                 Null = Null + Null, M[I0,1] = r0, M[I4,1] = r1;

 <SxhZGzAxRFPI/tQNM/XeGVIGgSr40TFPpe440fmJnbE=>
0x0000A3        DDF015CA                 jump $pop_rLink_and_rts;

 <up4yW0z81Lr85b+El9DTBTBbcPTuYCv+vgrTvqoVEJY=>
0x0000A4        5040006F                 I4 = Null + r4;

 <Gv2au7GN3VbYp9uKwS9tw2vW0fOKNDytND+tU79Z24M=>
0x0000A5        5030005F                 I3 = Null + r3;

 <uUFhKt+E8R32mLvjXs69J22Ef9t4e4UmKjFPxbAm5r4=>
0x0000A6        5020004F                 I2 = Null + r2;

 <f+gmc4DqARueyjew8dmRU/uH/FTLGEtdXAgeiaQeXBk=>
0x0000A7        5010003F                 I1 = Null + r1;

 <Sf/8abWT2htAYllviI2fNuCdCnTUgvqAXDRczmwLw6Y=>
0x0000A8        5000002F                 I0 = Null + r0;

 <ZU7ovpxLowNF6vSTzBY9cACX9ECQeKOXhrlCitY2n2M=>
0x0000A9        44C000BF                 r10 = Null + M3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000AA        DC0D000F                 rts;

 <q6DXGPLdBUi/R0YO5oBOUSNMXeUDEzGl1Tuxncx20Ww=>
0x0000AB        5050004F                 I5 = Null + r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000AC        DDF0FFFB                 jump f+gmc4DqARueyjew8dmRU/uH/FTLGEtdXAgeiaQeXBk=;

 <cqh8U6ocVl13maAG4IsPpm7d07mcQM7qVaKJWa/IkTU=>
0x0000AD        5040003F                 I4 = Null + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000AE        DDF0FFFA                 jump Sf/8abWT2htAYllviI2fNuCdCnTUgvqAXDRczmwLw6Y=;

 <rTWvzW5i79OGTbIwGDEc6HJo4NDTPbnUxsAj0sgdY6I=>
0x0000AF        01500000                 r3 = Null + 0;

 <6PLNJKrbW/9FwxQNX1YNBjBLfuzIAESzjMckXDTp+ic=>
0x0000B0        44C000BF                 r10 = Null + M3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000B1        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000B2        5010003F                 I1 = Null + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000B3        51A00001                 M2 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000B4        0015260F                 rMAC = r3 + Null, r0 = M[I1,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000B5        E5F00003                 do OZbmsNXb8nyk8GEQTWdx3fsIEJ0jKpipArislEqyeMQ=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000B6        AC12264F                 rMAC = rMAC + r0 * r2 (SS), r0 = M[I1,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000B7        0015920F                 rMAC = r3 + Null, M[I0,M2] = rMAC;

 <OZbmsNXb8nyk8GEQTWdx3fsIEJ0jKpipArislEqyeMQ=>
0x0000B8        DC0D000F                 rts;

 <QzUSQzbGOX+O5TiZP6ht7pDGw5quRfNZ8xDdrJuTU8A=>
0x0000B9        44C000BF                 r10 = Null + M3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000BA        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000BB        5040003F                 I4 = Null + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000BC        03000041                 Null = Null + Null, r2 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000BD        E5F00002                 do 6VulLGXRm2amqJqyXBKBADt/yNYvkpI7tMXtiEC7o3M=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000BE        0300C141                 Null = Null + Null, M[I0,1] = r2, r2 = M[I4,1];

 <6VulLGXRm2amqJqyXBKBADt/yNYvkpI7tMXtiEC7o3M=>
0x0000BF        DC0D000F                 rts;

 <1cE5AKQs4KjbEMRf5O3ga1ivNmUOwyOcJ8dExg1EJDU=>
0x0000C0        01300000                 r1 = Null + 0;

 <TGGwYCI2GX0yN90BloPz8GKWQ5jVvxinJAT40/dsCjk=>
0x0000C1        44C000BF                 r10 = Null + M3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000C2        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000C3        E5F00002                 do riuRSiJrehBKY3nmU7H1Q3L8vsJjyMx95QH2KRv49hg=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000C4        0300B100                 Null = Null + Null, M[I0,1] = r1;

 <riuRSiJrehBKY3nmU7H1Q3L8vsJjyMx95QH2KRv49hg=>
0x0000C5        DC0D000F                 rts;

 <CNOv/6+9vbArMcrje0ug2WCfjuWsxTB+H1jYacmYSLU=>
0x0000C6        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000C7        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000C8        D12B0046                 r0 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000C9        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000CA        D12B0047                 r0 = M[r9 + 71];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000CB        5040002F                 I4 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000CC        FD000070 01500000        r3 = Null + 7340032;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000CE        FD000010 01600000        r4 = Null + 1048576;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D0        D17A000C                 r5 = M[r8 + 12];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D1        0930149D                 r1 = Null + M[$scratch.s3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D2        D19A000B                 r7 = M[r8 + 11];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D3        D1AA000A                 r8 = M[r8 + 10];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D4        E5F0000B                 do T5wT6iaXPF/CwN0gVkBIcCTROjh8O/lQ+VqHDoX+Mkw=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D5        03002100                 Null = Null + Null, r0 = M[I0,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D6        2042009F                 r2 = r0 - r7;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D7        CC14007F                 rMAC = r2 * r5 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D8        91E10003                 rMAC = rMAC ASHIFT 3 (MI);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000D9        BC16003F                 rMAC = rMAC - r4 * r1 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000DA        200200AF                 Null = r0 - r8;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000DB        00150005                 if POS rMAC = r3 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000DC        2002009F                 Null = r0 - r7;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000DD        00160004                 if NEG rMAC = r4 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000DE        03000091                 Null = Null + Null, M[I4,1] = rMAC;

 <T5wT6iaXPF/CwN0gVkBIcCTROjh8O/lQ+VqHDoX+Mkw=>
0x0000DF        D1AB0000                 r8 = M[r9 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000E0        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000E1        D12B0044                 r0 = M[r9 + 68];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000E2        5040002F                 I4 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000E3        D12B0048                 r0 = M[r9 + 72];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000E4        5050002F                 I5 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000E5        D12B0047                 r0 = M[r9 + 71];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000E6        5030002F                 I3 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000E7        FD000003 01200000        r0 = Null + 196608;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000E9        FD0000FF 1920400D        M[$scratch.t] = r0 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000EB        E5F00007                 do tdE83jxvKXfZyh7sjHraf8i94SmeYTLPCvBvOtuCQdE=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000EC        03001D41                 Null = Null + Null, rMAC = M[I3,1], r2 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000ED        E1F01404                 call $math.log2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000EE        03240000                 r0 = r0 + r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000EF        FD0000FF 0922400D        r0 = r0 + M[$scratch.t];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000F1        030000A5                 Null = Null + Null, M[I5,1] = r0;

 <tdE83jxvKXfZyh7sjHraf8i94SmeYTLPCvBvOtuCQdE=>
0x0000F2        FD00007F 0170FFFF        r5 = Null + 8388607;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000F4        FD000010 01500000        r3 = Null + 1048576;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000F6        FD000078 01600000        r4 = Null + 7864320;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000F8        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000F9        D12A000D                 r0 = M[r8 + 13];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000FA        5020002F                 I2 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000FB        D12B0036                 r0 = M[r9 + 54];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000FC        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000FD        D12B0048                 r0 = M[r9 + 72];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000FE        5040002F                 I4 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0000FF        D12B0041                 r0 = M[r9 + 65];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000100        5030002F                 I3 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000101        5813000F                 I1 = I3 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000102        D10B003A                 Null = M[r9 + 58];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000103        58140001                 if NE I1 = I4 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000104        D10B0005                 Null = M[r9 + 5];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000105        DD000021                 if EQ jump HwZkcoYI1WmxzvSDubzwJnJiGA/L/TkJLjFeQpe3r7o=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000106        D10B0033                 Null = M[r9 + 51];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000107        DD00001F                 if EQ jump HwZkcoYI1WmxzvSDubzwJnJiGA/L/TkJLjFeQpe3r7o=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000108        D1CA0004                 r10 = M[r8 + 4];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000109        D12B0041                 r0 = M[r9 + 65];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00010A        D13B0036                 r1 = M[r9 + 54];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00010B        D14B0048                 r2 = M[r9 + 72];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00010C        D15B0037                 r3 = M[r9 + 55];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00010D        016B0040                 r4 = r9 + 64;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00010E        D10B003A                 Null = M[r9 + 58];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00010F        00240001                 if NE r0 = r2 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000110        E1F001AA                 call +Gb4gbqmj1Yyn9H1HrRreDTPAJFutsUKMPV98PJJ9JA=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000111        D1AB0000                 r8 = M[r9 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000112        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000113        D13A0004                 r1 = M[r8 + 4];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000114        23C30000                 r10 = r10 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000115        D12B0036                 r0 = M[r9 + 54];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000116        5002003F                 I0 = r0 + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000117        D12B0048                 r0 = M[r9 + 72];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000118        5042003F                 I4 = r0 + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000119        D12B0041                 r0 = M[r9 + 65];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00011A        5032003F                 I3 = r0 + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00011B        5813000F                 I1 = I3 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00011C        D10B003A                 Null = M[r9 + 58];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00011D        58140001                 if NE I1 = I4 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00011E        D12A000D                 r0 = M[r8 + 13];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00011F        5022003F                 I2 = r0 + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000120        FD000020 01500000        r3 = Null + 2097152;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000122        FD000078 01600000        r4 = Null + 7864320;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000124        FD00007F 0170FFFF        r5 = Null + 8388607;

 <HwZkcoYI1WmxzvSDubzwJnJiGA/L/TkJLjFeQpe3r7o=>
0x000126        E5F00010                 do kitgycCTqo7qJHI/BOXB1dNw9jGHwZsXSnYtvmhUWP8=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000127        03003121                 Null = Null + Null, r1 = M[I0,1], r0 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000128        23230000                 r0 = r0 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000129        00200005                 if POS r0 = Null + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00012A        E1F01429                 call $math.pow2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00012B        20173C2F                 rMAC = r5 - r0, r1 = M[I3,M0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00012C        D10B003A                 Null = M[r9 + 58];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00012D        DD100008                 if NE jump vU/TNQSP6RWDEVOgoiswMlbBpIzaQRTS8088wVqz5SU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00012E        23311C00                 r1 = r1 - rMAC, rMAC = M[I3,0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00012F        BC13005F                 rMAC = rMAC - r1 * r3 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000130        CF114900                 rMAC = rMAC * rMAC (SS), r2 = M[I2,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000131        9421006F                 r0 = rMAC * r4 (frac);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000132        2002004F                 Null = r0 - r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000133        00241D05                 if POS r0 = r2 + Null, rMAC = M[I3,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000134        BC12003F                 rMAC = rMAC - r0 * r1 (SS);

 <vU/TNQSP6RWDEVOgoiswMlbBpIzaQRTS8088wVqz5SU=>
0x000135        03009500                 Null = Null + Null, M[I1,1] = rMAC;

 <kitgycCTqo7qJHI/BOXB1dNw9jGHwZsXSnYtvmhUWP8=>
0x000136        DDF01537                 jump $pop_rLink_and_rts;

 <nx9dzrXogEkcUB7Mr2A1uOg+HSl7pIbzdEwZ01Poa+Q=>
0x000137        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000138        D18B003B                 r6 = M[r9 + 59];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000139        D1AB0000                 r8 = M[r9 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00013A        01400032                 r2 = Null + 50;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00013B        D1580003                 r3 = M[r6 + 3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00013C        D0050001                 if NE Null = M[r3 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00013D        DD100005                 if NE jump G6oMgIczcD6Aai3LUhOn61A6eKyKKPlnkz5EysgD0xw=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00013E        D1480004                 r2 = M[r6 + 4];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00013F        E444003F                 r2 = r2 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000140        DDA00002                 if GE jump G6oMgIczcD6Aai3LUhOn61A6eKyKKPlnkz5EysgD0xw=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000141        E440003F                 r2 = Null - 1;

 <G6oMgIczcD6Aai3LUhOn61A6eKyKKPlnkz5EysgD0xw=>
0x000142        01200000                 r0 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000143        D5480004                 M[r6 + 4] = r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000144        DD500003                 if POS jump ZRD66kkiRhw3/VW7U3c9JxUrIGVqe5kTViwXgHvPLGE=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000145        D1280002                 r0 = M[r6 + 2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000146        D0220001                 if NE r0 = M[r0 + Null];

 <ZRD66kkiRhw3/VW7U3c9JxUrIGVqe5kTViwXgHvPLGE=>
0x000147        FD0000FF 19204010        M[$scratch.t3] = r0 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000149        D15B0031                 r3 = M[r9 + 49];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00014A        DD000009                 if EQ jump 9wRXZlBJzLCQXaY/1TRrAlTsXemUDTW84aencRm1HAk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00014B        D3500000                 r3 = M[r3 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00014C        D13B0016                 r1 = M[r9 + 22];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00014D        2005003F                 Null = r3 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00014E        DDA00005                 if GE jump 9wRXZlBJzLCQXaY/1TRrAlTsXemUDTW84aencRm1HAk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00014F        FD0000FF 09004010        Null = Null + M[$scratch.t3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000151        DD00002E                 if EQ jump Je4mLjMUN4hVfX51BeQxJyobs98Koous4teGJY+96jc=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000152        DDF00005                 jump deJ4g6w49a32qN81d9Je5ZeOqCCrtU7vi9oE7QnHDis=;

 <9wRXZlBJzLCQXaY/1TRrAlTsXemUDTW84aencRm1HAk=>
0x000153        01200009                 r0 = Null + 9;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000154        FD0000FF 09004010        Null = Null + M[$scratch.t3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000156        DD10002E                 if NE jump PQueZmSunDP0AW8W/Vib6JRHvhtwLL4khlYdm5cd/kw=;

 <deJ4g6w49a32qN81d9Je5ZeOqCCrtU7vi9oE7QnHDis=>
0x000157        D1CA0000                 r10 = M[r8 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000158        01100000                 rMAC = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000159        D16B0008                 r4 = M[r9 + 8];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00015A        5000006F                 I0 = Null + r4;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00015B        D17B0009                 r5 = M[r9 + 9];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00015C        5040007F                 I4 = Null + r5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00015D        E5F00004                 do CKj04+GPmRZn+8ziE63j6kYxD+iZe6FCLDCFKxxMMZk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00015E        03002131                 Null = Null + Null, r0 = M[I0,1], r1 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00015F        AC12002F                 rMAC = rMAC + r0 * r0 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000160        AC13003F                 rMAC = rMAC + r1 * r1 (SS);

 <CKj04+GPmRZn+8ziE63j6kYxD+iZe6FCLDCFKxxMMZk=>
0x000161        FD00007E 0150B852        r3 = Null + 8304722;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000163        9451005F                 r3 = rMAC * r3 (frac);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000164        BD118000                 rMAC = rMAC - rMAC * -1 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000165        BC12002F                 rMAC = rMAC - r0 * r0 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000166        BC13003F                 rMAC = rMAC - r1 * r1 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000167        D026000F                 r0 = M[r4 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000168        D037000F                 r1 = M[r5 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000169        BC12002F                 rMAC = rMAC - r0 * r0 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00016A        BC13003F                 rMAC = rMAC - r1 * r1 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00016B        E1F01386                 call $math.log2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00016C        D18B003B                 r6 = M[r9 + 59];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00016D        D13B000A                 r1 = M[r9 + 10];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00016E        D3300000                 r1 = M[r1 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00016F        91330011                 r1 = r1 ASHIFT 17;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000170        23230000                 r0 = r0 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000171        D5280008                 M[r6 + 8] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000172        D1380007                 r1 = M[r6 + 7];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000173        2002003F                 Null = r0 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000174        DDD0000B                 if LE jump Je4mLjMUN4hVfX51BeQxJyobs98Koous4teGJY+96jc=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000175        D1CA0006                 r10 = M[r8 + 6];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000176        5000006F                 I0 = Null + r4;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000177        5040007F                 I4 = Null + r5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000178        01100000                 rMAC = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000179        E5F00006                 do Je4mLjMUN4hVfX51BeQxJyobs98Koous4teGJY+96jc=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00017A        03002131                 Null = Null + Null, r0 = M[I0,1], r1 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00017B        AC12002F                 rMAC = rMAC + r0 * r0 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00017C        AC13003F                 rMAC = rMAC + r1 * r1 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00017D        2001005F                 Null = rMAC - r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00017E        DDA00005                 if GE jump ztylpUQUsW1hC3QP1Cc4ZhGVn55LF4AmGu80f6YLxDc=;

 <Je4mLjMUN4hVfX51BeQxJyobs98Koous4teGJY+96jc=>
0x00017F        D1380005                 r1 = M[r6 + 5];

 <yzcGDE8i4ULOSjxtLw9PGKyRmgZul8apRBQ4/nqfqh4=>
0x000180        D5380009                 M[r6 + 9] = r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000181        01200000                 r0 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000182        DDF014EB                 jump $pop_rLink_and_rts;

 <ztylpUQUsW1hC3QP1Cc4ZhGVn55LF4AmGu80f6YLxDc=>
0x000183        6824007F                 r0 = I4 - r5;

 <PQueZmSunDP0AW8W/Vib6JRHvhtwLL4khlYdm5cd/kw=>
0x000184        D13A0011                 r1 = M[r8 + 17];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000185        E0030001                 if NE call r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000186        D528000C                 M[r6 + 12] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000187        D1380009                 r1 = M[r6 + 9];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000188        E433003F                 r1 = r1 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000189        DDA0FFF7                 if GE jump yzcGDE8i4ULOSjxtLw9PGKyRmgZul8apRBQ4/nqfqh4=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00018A        D1CA0008                 r10 = M[r8 + 8];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00018B        D13A0007                 r1 = M[r8 + 7];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00018C        E433003F                 r1 = r1 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00018D        23C30000                 r10 = r10 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00018E        D12B0046                 r0 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00018F        5002003F                 I0 = r0 + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000190        FD00007F 0130FFFF        r1 = Null + 8388607;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000192        01400000                 r2 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000193        E5F00006                 do ZDGe+npSBak3TOTrW9+gLOSdlFBPnVo0kojqIkhgiz8=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000194        03005100                 Null = Null + Null, r3 = M[I0,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000195        2005003F                 Null = r3 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000196        0035000B                 if LT r1 = r3 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000197        2005004F                 Null = r3 - r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000198        0045000C                 if GT r2 = r3 + Null;

 <ZDGe+npSBak3TOTrW9+gLOSdlFBPnVo0kojqIkhgiz8=>
0x000199        E420002F                 r0 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00019A        FD000019 2103999A        Null = r1 - 1677722;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00019C        DDA014D1                 if GE jump $pop_rLink_and_rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00019D        FD0000FF 09004010        Null = Null + M[$scratch.t3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00019F        DD1014CE                 if NE jump $pop_rLink_and_rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001A0        01200002                 r0 = Null + 2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001A1        FD000040 21040000        Null = r2 - 4194304;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001A3        4422009A                 if GE r0 = r0 + M1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001A4        DDF014C9                 jump $pop_rLink_and_rts;

 <5qej8zWivTtW+Arz9KL+AcCuwo3yGWKg2w195i0OhMg=>
0x0001A5        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001A6        D1970000                 r7 = M[r5 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001A7        D1570001                 r3 = M[r5 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001A8        51370002                 I3 = r5 + 2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001A9        5002005F                 I0 = r0 + r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001AA        5040003F                 I4 = Null + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001AB        5010004F                 I1 = Null + r2;

 <c/me/TnGiuJQGHWsdwMcJHk4weg8a4VsHM2FBGq3SdY=>
0x0001AC        03006D00                 Null = Null + Null, r4 = M[I3,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001AD        03007D00                 Null = Null + Null, r5 = M[I3,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001AE        E1F00005                 call mf6rZS3AzJ1sj9KuyYQBzktgSQVoved3DS+DFbaI1nU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001AF        01800000                 r6 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001B0        E499003F                 r7 = r7 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001B1        DDC0FFFB                 if GT jump c/me/TnGiuJQGHWsdwMcJHk4weg8a4VsHM2FBGq3SdY=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001B2        DDF014BB                 jump $pop_rLink_and_rts;

 <mf6rZS3AzJ1sj9KuyYQBzktgSQVoved3DS+DFbaI1nU=>
0x0001B3        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001B4        5820000F                 I2 = I0 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001B5        03005500                 Null = Null + Null, r3 = M[I1,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001B6        03002500                 Null = Null + Null, r0 = M[I1,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001B7        2005002F                 Null = r3 - r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001B8        00520005                 if POS r3 = r0 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001B9        64C6219F                 r10 = r4 - M1, r0 = M[I0,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001BA        E1F01410                 call $math.log_add.vector;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001BB        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001BC        FD0000FF 0900400F        Null = Null + M[$scratch.t2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001BE        DD0014AF                 if EQ jump $pop_rLink_and_rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001BF        00C6000F                 r10 = r4 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001C0        2035002F                 r1 = r3 - r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001C1        FD000002 012095C3        r0 = Null + 169411;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001C3        470A0000                 Null = Null + M2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001C4        DD100007                 if NE jump tprIwkt0NW1mpdJxQuFOUk1YpTo8R49okfzTVhIONkc=;

 <x/V3eyj/YQRF10vUNiqLefq8wSpJ1qOT3lpS2RWb/DQ=>
0x0001C5        2003002F                 Null = r1 - r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001C6        DDC00012                 if GT jump 9hNXs6s0UL+0xBAxBarZ5chl1B7SeBilKooxO9KoNvU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001C7        FD000001 21030000        Null = r1 - 65536;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001C9        DDC0000A                 if GT jump jioBUVfZtOCRiaqG14mDzCU29NTdCtPe/w1eotlPCso=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001CA        DDF00004                 jump y7K8+PIR0Bez28nvaiUqSr2yL7+vDiBIREaa+1VYYeI=;

 <tprIwkt0NW1mpdJxQuFOUk1YpTo8R49okfzTVhIONkc=>
0x0001CB        FD000001 21030000        Null = r1 - 65536;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001CD        DDC0000B                 if GT jump 9hNXs6s0UL+0xBAxBarZ5chl1B7SeBilKooxO9KoNvU=;

 <y7K8+PIR0Bez28nvaiUqSr2yL7+vDiBIREaa+1VYYeI=>
0x0001CE        03320000                 r1 = r1 + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001CF        DDA0149E                 if GE jump $pop_rLink_and_rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001D0        03520000                 r3 = r3 + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001D1        0008000F                 Null = r6 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001D2        DD000006                 if EQ jump 9hNXs6s0UL+0xBAxBarZ5chl1B7SeBilKooxO9KoNvU=;

 <jioBUVfZtOCRiaqG14mDzCU29NTdCtPe/w1eotlPCso=>
0x0001D3        E5F00004                 do hMCZ1RmrErrKgsCY14Jhikkg77rRVUP7kYujysqKyps=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001D4        03002800                 Null = Null + Null, r0 = M[I2,0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001D5        03230000                 r0 = r0 + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001D6        0300A900                 Null = Null + Null, M[I2,1] = r0;

 <hMCZ1RmrErrKgsCY14Jhikkg77rRVUP7kYujysqKyps=>
0x0001D7        DDF01496                 jump $pop_rLink_and_rts;

 <9hNXs6s0UL+0xBAxBarZ5chl1B7SeBilKooxO9KoNvU=>
0x0001D8        2025007F                 r0 = r3 - r5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001D9        E5F00002                 do Wd4sVlp7M046QO2rotU91bGw6gECMPecoOuhQM5xDdo=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001DA        0300A900                 Null = Null + Null, M[I2,1] = r0;

 <Wd4sVlp7M046QO2rotU91bGw6gECMPecoOuhQM5xDdo=>
0x0001DB        DDF01492                 jump $pop_rLink_and_rts;

 <LML7XYAegZgjeWF3TbF080F5zM2cGlwAo+rI9YyqDAk=>
0x0001DC        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001DD        D12B000A                 r0 = M[r9 + 10];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001DE        D3200000                 r0 = M[r0 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001DF        91720011                 r5 = r0 ASHIFT 17;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E0        01C0000F                 r10 = Null + 15;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E1        02005A00                 Null = Null + Null, r3 = M[I2,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E2        D12B0008                 r0 = M[r9 + 8];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E3        54125A9F                 I1 = r0 + M1, r3 = M[I2,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E4        D13B0009                 r1 = M[r9 + 9];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E5        5443459F                 I4 = r1 + M1, r2 = M[I1,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E6        97450000                 r2 = r2 * r3 (frac);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E7        E5F00007                 do rDrGJGSj8oo+wiuircnLVK745XSZ0SjtEL1PfGQHSAU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E8        CF440031                 rMAC = r2 * r2 (SS), r1 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001E9        97350000                 r1 = r1 * r3 (frac);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001EA        AF334500                 rMAC = rMAC + r1 * r1 (SS), r2 = M[I1,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001EB        E1F01306                 call $math.log2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001EC        22275A00                 r0 = r0 - r5, r3 = M[I2,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001ED        9745AD00                 r2 = r2 * r3 (frac), M[I3,1] = r0;

 <rDrGJGSj8oo+wiuircnLVK745XSZ0SjtEL1PfGQHSAU=>
0x0001EE        D1CA0000                 r10 = M[r8 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001EF        21CC0011                 r10 = r10 - 17;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F0        70B000CF                 M3 = Null - r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F1        580500CF                 I0 = I5 + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F2        03000031                 Null = Null + Null, r1 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F3        E5F00007                 do ved5jCcUcYcDZNjpK9SicpJDnYuB6Id4XFDTHQpCR4g=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F4        97350000                 r1 = r1 * r3 (frac);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F5        CF444500                 rMAC = r2 * r2 (SS), r2 = M[I1,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F6        AC135A3F                 rMAC = rMAC + r1 * r1 (SS), r3 = M[I2,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F7        D821000F                 r0 = SIGNDET rMAC;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F8        93E2A131                 rMAC = rMAC ASHIFT r0, M[I0,1] = r0, r1 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001F9        97450095                 r2 = r2 * r3 (frac), M[I5,1] = rMAC;

 <ved5jCcUcYcDZNjpK9SicpJDnYuB6Id4XFDTHQpCR4g=>
0x0001FA        D16A0001                 r4 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001FB        2166000F                 r4 = r4 - 15;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001FC        D13A0014                 r1 = M[r8 + 20];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001FD        5020003F                 I2 = Null + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001FE        5E5B2300                 I5 = I5 + M3, r0 = M[I0,M3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0001FF        74A0399F                 M2 = Null - M1, r1 = M[I2,M1];

 <sLWtPTbDNyQRCKf5acNdUreSbAmjinU699gf4tB+vlM=>
0x000200        8DC30078                 r10 = r1 LSHIFT -8;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000201        78BA51CF                 M3 = M2 - r10, r3 = M[I0,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000202        67C94100                 r10 = r10 - M1, r2 = M[I0,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000203        E5F00002                 do xih8nNSsf8cCPrAaFPUZ7/ya9GyuUFL6DDo5+mKr9IM=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000204        E454415F                 r3 = MIN r2, r2 = M[I0,M1];

 <xih8nNSsf8cCPrAaFPUZ7/ya9GyuUFL6DDo5+mKr9IM=>
0x000205        6CCA23BF                 r10 = M2 - M3, r0 = M[I0,M3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000206        23114125                 rMAC = rMAC - rMAC, r2 = M[I0,1], r0 = M[I5,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000207        E5F00004                 do wlNjNHFZzzK5blD7iq6958hu0VktRt1oP5rrKSOVHtE=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000208        2045394F                 r2 = r3 - r2, r1 = M[I2,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000209        93244100                 r0 = r0 ASHIFT r2, r2 = M[I0,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00020A        AF230025                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I5,1];

 <wlNjNHFZzzK5blD7iq6958hu0VktRt1oP5rrKSOVHtE=>
0x00020B        E1F012E6                 call $math.log2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00020C        23270000                 r0 = r0 - r5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00020D        91450010                 r2 = r3 ASHIFT 16;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00020E        23243900                 r0 = r0 - r2, r1 = M[I2,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00020F        814300FF                 r2 = r1 AND 0xff;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000210        75B4FFFF                 M3 = -1 - r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000211        5E5B4300                 I5 = I5 + M3, r2 = M[I0,M3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000212        6769AD00                 r4 = r4 - M1, M[I3,1] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000213        DD10FFED                 if NE jump sLWtPTbDNyQRCKf5acNdUreSbAmjinU699gf4tB+vlM=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000214        DDF01459                 jump $pop_rLink_and_rts;

 <Gzs3qmXAr/B4sD2n7CLw1HATuulAq1Wd63VtU4y84S4=>
0x000215        D18B003B                 r6 = M[r9 + 59];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000216        D1AB0000                 r8 = M[r9 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000217        01480009                 r2 = r6 + 9;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000218        D074002F                 r5 = M[r2 + r0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000219        D148000C                 r2 = M[r6 + 12];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00021A        2047004F                 r2 = r5 - r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00021B        00470000                 if EQ r2 = r5 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00021C        E434003F                 r1 = r2 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00021D        03330000                 r1 = r1 + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00021E        E410002F                 rMAC = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00021F        D9030000                 Div = rMAC / r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000220        D15B0047                 r3 = M[r9 + 71];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000221        5000005F                 I0 = Null + r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000222        20C7004F                 r10 = r5 - r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000223        01100000                 rMAC = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000224        E5F00002                 do 8pBz1Fyu//vrcjjpMF4PpaDQeOEbkcgypmMrP46EJ5g=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000225        03009100                 Null = Null + Null, M[I0,1] = rMAC;

 <8pBz1Fyu//vrcjjpMF4PpaDQeOEbkcgypmMrP46EJ5g=>
0x000226        00C4000F                 r10 = r2 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000227        FD0000C0 01500000        r3 = Null + -4194304;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000229        E402003F                 Null = r0 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00022A        00550051                 if NE r3 = r3 + r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00022B        D9600001                 r4 = DivResult;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00022C        E40C003F                 Null = r10 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00022D        BC160050                 if EQ rMAC = rMAC - r4 * r3 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00022E        E5F00002                 do bu2XPuHbzSRo4PdSVYJQ8+Kw5TiMrc50fFSZywWNxEU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00022F        BF659100                 rMAC = rMAC - r4 * r3 (SS), M[I0,1] = rMAC;

 <bu2XPuHbzSRo4PdSVYJQ8+Kw5TiMrc50fFSZywWNxEU=>
0x000230        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000231        23C70000                 r10 = r10 - r5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000232        91E10017                 rMAC = rMAC ASHIFT 23 (MI);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000233        E5F00002                 do Y2VwgyZbM7zBST/eUhNY+jiHgCkz0TkYbknd3pv631s=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000234        03009100                 Null = Null + Null, M[I0,1] = rMAC;

 <Y2VwgyZbM7zBST/eUhNY+jiHgCkz0TkYbknd3pv631s=>
0x000235        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000236        D1580006                 r3 = M[r6 + 6];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000237        FD00007F 6565FFFF        r4 = 8388607 - r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000239        D12B0048                 r0 = M[r9 + 72];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00023A        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00023B        D12B0047                 r0 = M[r9 + 71];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00023C        5040002F                 I4 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00023D        E5F00006                 do R2B2pX94/bGLXNITDybTiX9QA2AuZ3dcTLGOI+HIT1g=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00023E        03002031                 Null = Null + Null, r0 = M[I0,0], r1 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00023F        9445003F                 r2 = r3 * r1 (frac);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000240        9412006F                 rMAC = r0 * r4 (frac);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000241        AC12004F                 rMAC = rMAC + r0 * r2 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000242        03009100                 Null = Null + Null, M[I0,1] = rMAC;

 <R2B2pX94/bGLXNITDybTiX9QA2AuZ3dcTLGOI+HIT1g=>
0x000243        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000244        D12B0048                 r0 = M[r9 + 72];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000245        5040002F                 I4 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000246        D12B0041                 r0 = M[r9 + 65];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000247        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000248        FD000010 01500000        r3 = Null + 1048576;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00024A        E5F00005                 do Rlki+3Xn9s7Ch2D9rXMCxwxjnuLLBErpq6W4GPzQAHQ=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00024B        03001000                 Null = Null + Null, rMAC = M[I0,0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00024C        BF150021                 rMAC = rMAC - rMAC * r3 (SS), r0 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00024D        AC12005F                 rMAC = rMAC + r0 * r3 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00024E        03009100                 Null = Null + Null, M[I0,1] = rMAC;

 <Rlki+3Xn9s7Ch2D9rXMCxwxjnuLLBErpq6W4GPzQAHQ=>
0x00024F        DC0D000F                 rts;

 <hPnt4tbzQ7/ehb3ImN4eKIiGTK4r/O1F0m8bpsHkYM0=>
0x000250        D10A0003                 Null = M[r8 + 3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000251        DC0D0000                 if EQ rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000252        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000253        D19A0000                 r7 = M[r8 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000254        D1590000                 r3 = M[r7 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000255        D12A0001                 r0 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000256        8D450001                 r2 = r3 LSHIFT 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000257        5002004F                 I0 = r0 + r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000258        D1490001                 r2 = M[r7 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000259        7830004F                 I3 = I0 - r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00025A        514A0005                 I4 = r8 + 5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00025B        D1290002                 r0 = M[r7 + 2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00025C        9932FFFE                 r1 = r0 * -2 (int);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00025D        7083005F                 M0 = r1 - r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00025E        51900001                 M1 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00025F        50A0002F                 M2 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000260        5CB800AF                 M3 = M0 + M2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000261        0160001B                 r4 = Null + 27;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000262        FD000080 01800000        r6 = Null + -8388608;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000264        94483E8F                 r2 = r6 * r6 (frac), r1 = M[I3,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000265        22552200                 r3 = r3 - r3, r0 = M[I0,M2];

 <ixguf6H6eju6LfYhZTH+TacMBP110LM+WDjTk6eCCrA=>
0x000266        01C0001E                 r10 = Null + 30;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000267        23110070                 rMAC = rMAC - rMAC, r5 = M[I4,0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000268        E5F00006                 do 33mWlKKTK+tXmf9zR4piTZV7Uj3IEVqxfloDBmqRhyk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000269        9122007F                 r0 = r0 ASHIFT -1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00026A        9133007F                 r1 = r1 ASHIFT -1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00026B        23230000                 r0 = r0 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00026C        94223E84                 if NEG r0 = r0 * r6 (frac), r1 = M[I3,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00026D        BC18222F                 rMAC = rMAC - r6 * r0 (SS), r0 = M[I0,M2];

 <33mWlKKTK+tXmf9zR4piTZV7Uj3IEVqxfloDBmqRhyk=>
0x00026E        91E1007B                 rMAC = rMAC ASHIFT -5 (MI);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00026F        BE870091                 rMAC = rMAC - r6 * r5 (SS), M[I4,M1] = rMAC;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000270        20042C1F                 Null = r2 - rMAC, r0 = M[I3,M0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000271        0041230C                 if GT r2 = rMAC + Null, r0 = M[I0,M3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000272        2005001F                 Null = r3 - rMAC;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000273        0051220B                 if LT r3 = rMAC + Null, r0 = M[I0,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000274        66693E00                 r4 = r4 - M1, r1 = M[I3,M2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000275        DD10FFF1                 if NE jump ixguf6H6eju6LfYhZTH+TacMBP110LM+WDjTk6eCCrA=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000276        91E4007F                 rMAC = r2 ASHIFT -1 (MI);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000277        D9050000                 Div = rMAC / r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000278        D12A0001                 r0 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000279        5040002F                 I4 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00027A        D1290000                 r0 = M[r7 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00027B        5804002F                 I0 = I4 + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00027C        00C2310F                 r10 = r0 + Null, r1 = M[I0,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00027D        D12A0002                 r0 = M[r8 + 2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00027E        9122007F                 r0 = r0 ASHIFT -1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00027F        200200CF                 Null = r0 - r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000280        DD100003                 if NE jump YQAUmg9zDvResCZ+hYw21prZ+Q+3JLsle6hBOobnLdU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000281        E5F00002                 do YQAUmg9zDvResCZ+hYw21prZ+Q+3JLsle6hBOobnLdU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000282        030031B1                 Null = Null + Null, r1 = M[I0,1], M[I4,1] = r1;

 <YQAUmg9zDvResCZ+hYw21prZ+Q+3JLsle6hBOobnLdU=>
0x000283        FD00007F 0120FFFF        r0 = Null + 8388607;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000285        21050002                 Null = r3 - 2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000286        DD400002                 if NEG jump C3G1UunAfCKUTY2u1Gn2uvTxRyV9kIqnPAciKyugTdU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000287        D9200001                 r0 = DivResult;

 <C3G1UunAfCKUTY2u1Gn2uvTxRyV9kIqnPAciKyugTdU=>
0x000288        D52A0004                 M[r8 + 4] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000289        DDF013E4                 jump $pop_rLink_and_rts;

 <p+Wv4HQEHTVPSekvTITyjWabS8biU/6K2jjM8gEr/ks=>
0x00028A        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00028B        5000005F                 I0 = Null + r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00028C        5030006F                 I3 = Null + r4;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00028D        5010007F                 I1 = Null + r5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00028E        51270010                 I2 = r5 + 16;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00028F        01C0000F                 r10 = Null + 15;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000290        51A0FFF1                 M2 = Null + -15;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000291        0150FFF0                 r3 = Null + -16;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000292        2060415F                 r4 = Null - r3, r2 = M[I0,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000293        9034005F                 r1 = r2 ASHIFT r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000294        E5F00006                 do vaozTRy9/PP/vq255TLu8v41nXquGstf1zQVcCX7Sp0=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000295        E433002F                 r1 = r1 + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000296        9023B96F                 r0 = r1 ASHIFT r4, M[I2,M1] = r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000297        2024412F                 r0 = r2 - r0, r2 = M[I0,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000298        E1F012BB                 call $math.pow2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000299        9034A55F                 r1 = r2 ASHIFT r3, M[I1,M1] = r0;

 <vaozTRy9/PP/vq255TLu8v41nXquGstf1zQVcCX7Sp0=>
0x00029A        01C0000F                 r10 = Null + 15;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00029B        51B0FFFF                 M3 = Null + -1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00029C        FD000020 01700000        r5 = Null + 2097152;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00029E        FD000040 01900000        r7 = Null + 4194304;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A0        0140FFD0                 r2 = Null + -48;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A1        0010CA0F                 rMAC = Null + Null, M[I2,M2] = r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A2        7E099600                 I0 = I0 - M1, M[I1,M2] = rMAC;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A3        0054390F                 r3 = r2 + Null, r1 = M[I2,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A4        E5F00010                 do 2Lq1M+O20+4VPRtw9WeizkA8BDTmkPoKQIXTw5qkIzM=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A5        E4532B6F                 r3 = MAX r1, r0 = M[I2,M3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A6        E452006F                 r3 = MAX r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A7        23450000                 r2 = r2 - r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A8        9047004F                 r2 = r5 ASHIFT r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002A9        CC11004F                 rMAC = rMAC * r2 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002AA        2043355F                 r2 = r1 - r3, r1 = M[I1,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002AB        9049004F                 r2 = r7 ASHIFT r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002AC        AC13004F                 rMAC = rMAC + r1 * r2 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002AD        23253700                 r0 = r0 - r3, r1 = M[I1,-1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002AE        9027002F                 r0 = r5 ASHIFT r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002AF        AF324900                 rMAC = rMAC + r1 * r0 (SS), r2 = M[I2,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002B0        E1F01241                 call $math.log2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002B1        93561500                 r3 = r3 ASHIFT r4, rMAC = M[I1,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002B2        03523900                 r3 = r3 + r0, r1 = M[I2,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002B3        0054DD0F                 r3 = r2 + Null, M[I3,M1] = r3;

 <2Lq1M+O20+4VPRtw9WeizkA8BDTmkPoKQIXTw5qkIzM=>
0x0002B4        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002B5        21CC000F                 r10 = r10 - 15;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002B6        E5F00003                 do U6J/EzRTlPSPbNxkfp2WsCuhOTPr56ZXNFQYD3E74jA=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002B7        03002100                 Null = Null + Null, r0 = M[I0,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002B8        0300AD00                 Null = Null + Null, M[I3,1] = r0;

 <U6J/EzRTlPSPbNxkfp2WsCuhOTPr56ZXNFQYD3E74jA=>
0x0002B9        DDF013B4                 jump $pop_rLink_and_rts;

 <+Gb4gbqmj1Yyn9H1HrRreDTPAJFutsUKMPV98PJJ9JA=>
0x0002BA        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002BB        5010002F                 I1 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002BC        5000003F                 I0 = Null + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002BD        5040004F                 I4 = Null + r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002BE        5070005F                 I7 = Null + r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002BF        5030006F                 I3 = Null + r4;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002C0        51A00000                 M2 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002C1        FD00000C 01A00000        r8 = Null + 786432;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002C3        FD000079 0150999A        r3 = Null + 7969178;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002C5        FD000006 01606666        r4 = Null + 419430;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002C7        FD00007F 0170FFFF        r5 = Null + 8388607;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002C9        03003141                 Null = Null + Null, r1 = M[I0,1], r2 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002CA        E1F00013                 call gaPKtZgyAMlgHubD8OPhvo1pqubz0q9vLwAGwfxqbcU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002CB        CF26AC3D                 rMAC = r0 * r4 (SS), M[I3,0] = r0, r1 = M[I7,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002CC        E5F00010                 do Bq/spuSLAsoOsWiHtHWXMs4KQDG3VV4C+2juViKG1s8=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002CD        E1F00010                 call gaPKtZgyAMlgHubD8OPhvo1pqubz0q9vLwAGwfxqbcU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002CE        AC12005F                 rMAC = rMAC + r0 * r3 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002CF        01210800                 r0 = rMAC + 2048;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D0        00270006                 if V r0 = r5 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D1        91E1007F                 rMAC = rMAC ASHIFT -1 (MI);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D2        D9020000                 Div = rMAC / r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D3        03003141                 Null = Null + Null, r1 = M[I0,1], r2 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D4        E1F00009                 call gaPKtZgyAMlgHubD8OPhvo1pqubz0q9vLwAGwfxqbcU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D5        CF263C00                 rMAC = r0 * r4 (SS), r1 = M[I3,0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D6        D9900001                 r7 = DivResult;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D7        9423AE9F                 r0 = r1 * r7 (frac), M[I3,M2] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D8        E1F0136B                 call $math.exp_int_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002D9        9729003D                 r0 = r0 * r7 (frac), r1 = M[I7,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002DA        91220002                 r0 = r0 ASHIFT 2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002DB        0300A500                 Null = Null + Null, M[I1,1] = r0;

 <Bq/spuSLAsoOsWiHtHWXMs4KQDG3VV4C+2juViKG1s8=>
0x0002DC        DDF01391                 jump $pop_rLink_and_rts;

 <gaPKtZgyAMlgHubD8OPhvo1pqubz0q9vLwAGwfxqbcU=>
0x0002DD        23340000                 r1 = r1 - r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002DE        202300AF                 r0 = r1 - r8;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002DF        DD500002                 if POS jump mGnnBmB9V2UNAANUEEkSP190gLraUX1gtCr/3NeekU8=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002E0        DDF01273                 jump $math.pow2_table;

 <mGnnBmB9V2UNAANUEEkSP190gLraUX1gtCr/3NeekU8=>
0x0002E1        0027000F                 r0 = r5 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002E2        DC0D000F                 rts;

 <XTleAuKSXkJZvrK8G5yGw02OIg/RDXfNjZ9BUNw2798=>
0x0002E3        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002E4        51350002                 I3 = r3 + 2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002E5        D1750000                 r5 = M[r3 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002E6        D1550001                 r3 = M[r3 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002E7        5040002F                 I4 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002E8        5004005F                 I0 = r2 + r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002E9        5010003F                 I1 = Null + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002EA        50100060                 if EQ I1 = Null + r4;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002EB        F3600000                 push r4;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002EC        F3B60000                 pop B1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002ED        03003400                 Null = Null + Null, r1 = M[I1,0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002EE        9838007F                 r1 = r6 * r5 (int);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002EF        50D0003F                 L1 = Null + r1;

 <VruDk+AWroyoMcL8xt+7KYX2hfk1vYmrOHXD6PEP5Eo=>
0x0002F0        03003E00                 Null = Null + Null, r1 = M[I3,2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002F1        E1F00009                 call 6qwNexgq+dg0w5YGyqZoOQGrblGeG1ZbsAyWXcjroXY=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002F2        E477003F                 r5 = r5 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002F3        DDC0FFFD                 if GT jump VruDk+AWroyoMcL8xt+7KYX2hfk1vYmrOHXD6PEP5Eo=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002F4        03002700                 Null = Null + Null, r0 = M[I1,-1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002F5        4420001F                 r0 = Null + I1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002F6        51D00000                 L1 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002F7        F3000000                 push Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002F8        F3B60000                 pop B1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002F9        DDF01374                 jump $pop_rLink_and_rts;

 <6qwNexgq+dg0w5YGyqZoOQGrblGeG1ZbsAyWXcjroXY=>
0x0002FA        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002FB        64C3219F                 r10 = r1 - M1, r0 = M[I0,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002FC        E1F012CE                 call $math.log_add.vector;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002FD        64C8A59F                 r10 = r6 - M1, M[I1,M1] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002FE        02003500                 Null = Null + Null, r1 = M[I1,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0002FF        E5F00003                 do mKh2/aaiwMLH04Tt2hAlyOWzjsY89lWXDEb6+FHRSOQ=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000300        2003002F                 Null = r1 - r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000301        00233504                 if NEG r0 = r1 + Null, r1 = M[I1,M1];

 <mKh2/aaiwMLH04Tt2hAlyOWzjsY89lWXDEb6+FHRSOQ=>
0x000302        030037A2                 Null = Null + Null, r1 = M[I1,-1], M[I4,2] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000303        DDF0136A                 jump $pop_rLink_and_rts;

 <lVviEO+tlDgtspBw/BL/NcM1Rhb+vJq+q9hl3UGPC1w=>
0x000304        D5430000                 M[r1 + 0] = r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000305        D15A0000                 r3 = M[r8 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000306        E455003F                 r3 = r3 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000307        D443005F                 M[r1 + r3] = r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000308        01C00010                 r10 = Null + 16;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000309        5010002F                 I1 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00030A        51030001                 I0 = r1 + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00030B        E5F00003                 do hNZ62lLkf1nE7o2CZmg1VR8Zb3JbZjzPOZ1PWuUtu5c=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00030C        03002500                 Null = Null + Null, r0 = M[I1,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00030D        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <hNZ62lLkf1nE7o2CZmg1VR8Zb3JbZjzPOZ1PWuUtu5c=>
0x00030E        D16A0012                 r4 = M[r8 + 18];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00030F        D13A0015                 r1 = M[r8 + 21];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000310        5020003F                 I2 = Null + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000311        FD000080 01800000        r6 = Null + -8388608;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000313        03004900                 Null = Null + Null, r2 = M[I2,1];

 <O+8IHxhKbw+BHs6tMNgAQqc+mWLglh05aEud3Gx362o=>
0x000314        03C44900                 r10 = r10 + r2, r2 = M[I2,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000315        CF243400                 rMAC = r0 * r2 (SS), r1 = M[I1,0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000316        E5F00004                 do Z9kS1dblz+7VTcT9BDk66NGUkqN4Wubq8SPf9PbGYLU=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000317        0048004F                 r2 = r6 + r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000318        BF344900                 rMAC = rMAC - r1 * r2 (SS), r2 = M[I2,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000319        CF249100                 rMAC = r0 * r2 (SS), M[I0,1] = rMAC;

 <Z9kS1dblz+7VTcT9BDk66NGUkqN4Wubq8SPf9PbGYLU=>
0x00031A        67692500                 r4 = r4 - M1, r0 = M[I1,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00031B        DD10FFF9                 if NE jump O+8IHxhKbw+BHs6tMNgAQqc+mWLglh05aEud3Gx362o=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00031C        D1CA0013                 r10 = M[r8 + 19];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00031D        E5F00002                 do IPnip0O6z8/dOcK8H/qBcZAr0yr97DttnOTDVGd5u28=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00031E        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <IPnip0O6z8/dOcK8H/qBcZAr0yr97DttnOTDVGd5u28=>
0x00031F        DC0D000F                 rts;

 <dPBSBIlxSMM31uA7ipdA/kCh283OTQggPQjUZDvgqM4=>
0x000320        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000321        E1F0FD85                 call uUFhKt+E8R32mLvjXs69J22Ef9t4e4UmKjFPxbAm5r4=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000322        FD000080 01700000        r5 = Null + -8388608;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000324        E5F0000C                 do hlTtDjpn/euwWouKlSz87OhsxF6pf/NzI9XMrHHrCOk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000325        03006900                 Null = Null + Null, r4 = M[I2,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000326        CC16005F                 rMAC = r4 * r3 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000327        E1F011CA                 call $math.log2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000328        0042000F                 r2 = r0 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000329        CC17007F                 rMAC = r5 * r5 (SS);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00032A        BF656000                 rMAC = rMAC - r4 * r3 (SS), r4 = M[I0,0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00032B        E1F011C6                 call $math.log2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00032C        03266500                 r0 = r0 + r4, r4 = M[I1,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00032D        0034006F                 r1 = r2 + r4;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00032E        E1F0129E                 call $math.log_add;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00032F        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <hlTtDjpn/euwWouKlSz87OhsxF6pf/NzI9XMrHHrCOk=>
0x000330        DDF0133D                 jump $pop_rLink_and_rts;

 <yomio76N4tJYSjPbjBc4Mhxl3Y56UmyuEHGXPzfN0Xg=>
0x000331        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000332        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000333        D12B0045                 r0 = M[r9 + 69];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000334        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000335        D12B0036                 r0 = M[r9 + 54];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000336        5040212F                 I4 = Null + r0, r0 = M[I0,M1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000337        D10B0033                 Null = M[r9 + 51];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000338        DD000004                 if EQ jump 7YiMrc5sWzPiXZNVonyzi3CofiRcfWqRwAdydDUonQs=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000339        E5F00002                 do VU9mJKdzv52dyeshyhgtBai8cQlCJk3g3OQT27lX3zo=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00033A        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <VU9mJKdzv52dyeshyhgtBai8cQlCJk3g3OQT27lX3zo=>
0x00033B        DDF00008                 jump kSsGJYtPQj/reH2XhxNoDX1ahGMS/EUNljrlstYFmMA=;

 <7YiMrc5sWzPiXZNVonyzi3CofiRcfWqRwAdydDUonQs=>
0x00033C        D15B0014                 r3 = M[r9 + 20];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00033D        D16B0015                 r4 = M[r9 + 21];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00033E        E5F00005                 do kSsGJYtPQj/reH2XhxNoDX1ahGMS/EUNljrlstYFmMA=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00033F        03250030                 r0 = r0 + r3, r1 = M[I4,0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000340        03360000                 r1 = r1 + r4;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000341        E1F0128B                 call $math.log_add;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000342        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <kSsGJYtPQj/reH2XhxNoDX1ahGMS/EUNljrlstYFmMA=>
0x000343        DDF0132A                 jump $pop_rLink_and_rts;

 <egwmOsCNgxNjkXB+HGwLZthIuOswOg1pFcJabDj7U2A=>
0x000344        0032000F                 r1 = r0 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000345        E403003F                 Null = r1 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000346        DC0D0000                 if EQ rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000347        E422003F                 r0 = r0 - 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000348        21030011                 Null = r1 - 17;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000349        DC0D000B                 if LT rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00034A        01C00009                 r10 = Null + 9;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00034B        D12A0016                 r0 = M[r8 + 22];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00034C        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00034D        01200010                 r0 = Null + 16;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00034E        E5F00005                 do rEJ6SBU4uaNZpw/nX7HwSpLl1Y0wq+D43M09LBh3RXA=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00034F        03004100                 Null = Null + Null, r2 = M[I0,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000350        2003004F                 Null = r1 - r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000351        DC0D000B                 if LT rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000352        E422002F                 r0 = r0 + 1;

 <rEJ6SBU4uaNZpw/nX7HwSpLl1Y0wq+D43M09LBh3RXA=>
0x000353        DC0D000F                 rts;

 <2whzN+a8jHLu1eglHPliVlbF67SpRcxJsKvRoR5u3Ds=>
0x000354        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000355        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000356        5050002F                 I5 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000357        5040003F                 I4 = Null + r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000358        5000004F                 I0 = Null + r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000359        03002161                 Null = Null + Null, r0 = M[I0,1], r4 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00035A        E5F00004                 do XO2QOWTUcqnz+VJ1sO/b+QrVPklMKj7tZNOCKYsfjLE=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00035B        23260061                 r0 = r0 - r4, r4 = M[I4,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00035C        E1F012E0                 call $math.pow2_exp_pow2_table;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00035D        030021B5                 Null = Null + Null, r0 = M[I0,1], M[I5,1] = r1;

 <XO2QOWTUcqnz+VJ1sO/b+QrVPklMKj7tZNOCKYsfjLE=>
0x00035E        DDF0130F                 jump $pop_rLink_and_rts;

 <BGp1oXpMOrJuJjOBXh7uNpQlWEGyeIEIMsGWvL2Yc58=>
0x00035F        D084000F                 r6 = M[r2 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000360        2008003F                 Null = r6 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000361        DC0D0001                 if NE rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000362        1840000F                 M[r2] = Null + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000363        D1350000                 r1 = M[r3 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000364        00C3000F                 r10 = r1 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000365        5000002F                 I0 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000366        E5F00003                 do 6F7iTl3Z3F3C17hjyPB8mVPGJq8tP1kwMxWsLo9oz9E=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000367        03002100                 Null = Null + Null, r0 = M[I0,1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x000368        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <6F7iTl3Z3F3C17hjyPB8mVPGJq8tP1kwMxWsLo9oz9E=>
0x000369        DC0D000F                 rts;
...

 <$sra_tagtimes>
0x0004C4        F3D00000                 push rLink;
0x0004C5        FD0000FF 09205A2D        r0 = Null + M[0xff5a2d];
0x0004C7        E1F01148                 call $cbuffer.calc_amount_data;
0x0004C8        0072000F                 r5 = r0 + Null;
0x0004C9        FD0000FF 09205A2E        r0 = Null + M[0xff5a2e];
0x0004CB        E1F01144                 call $cbuffer.calc_amount_data;
0x0004CC        03720000                 r5 = r5 + r0;
0x0004CD        FD0000FF 09775A43        r5 = r5 + M[0xff5a43];
0x0004CF        FD0000FF 19705A43        M[0xff5a43] = r5 + Null;
0x0004D1        FD0000FF 09605A42        r4 = Null + M[0xff5a42];
0x0004D3        E466002F                 r4 = r4 + 1;
0x0004D4        FD0000FF 19605A42        M[0xff5a42] = r4 + Null;
0x0004D6        FD0000FF 09305A2C        r1 = Null + M[$sra_struct];
0x0004D8        95331000                 r1 = r1 * 0.125 (frac);
0x0004D9        2006003F                 Null = r4 - r1;
0x0004DA        DD40003E                 if NEG jump $M.sra_tagtimes.no_update_on_buf_level;
0x0004DB        FD0000FF 19005A42        M[0xff5a42] = Null + Null;
0x0004DD        FD0000FF 19005A43        M[0xff5a43] = Null + Null;
0x0004DF        FD0000FF 09205A2E        r0 = Null + M[0xff5a2e];
0x0004E1        D3200000                 r0 = M[r0 + Null];
0x0004E2        9B260000                 r0 = r0 * r4 (int);
0x0004E3        91E7007F                 rMAC = r5 ASHIFT -1 (MI);
0x0004E4        D9020000                 Div = rMAC / r0;
0x0004E5        D9300001                 r1 = DivResult;
0x0004E6        FD0000FF 09605A48        r4 = Null + M[0xff5a48];
0x0004E8        FD0000FF 19305A48        M[0xff5a48] = r1 + Null;
0x0004EA        2063006F                 r4 = r1 - r4;
0x0004EB        FD0000FF 09205A32        r0 = Null + M[0xff5a32];
0x0004ED        2043002F                 r2 = r1 - r0;
0x0004EE        FD0000F9 9544999A        r2 = r2 * -0.04999995231628418 (frac);
0x0004F0        FD000000 2134A3D7        r1 = r2 - 41943;
0x0004F2        20440035                 if POS r2 = r2 - r1;
0x0004F3        013451EC                 r1 = r2 + 20972;
0x0004F4        20440034                 if NEG r2 = r2 - r1;
0x0004F5        01901062                 r7 = Null + 4194;
0x0004F6        FD0000FF 09805A44        r6 = Null + M[0xff5a44];
0x0004F8        0024000F                 r0 = r2 + Null;

 <$M.sra_tagtimes.fix_rate>
0x0004F9        0038009F                 r1 = r6 + r7;
0x0004FA        2002003F                 Null = r0 - r1;
0x0004FB        00230005                 if POS r0 = r1 + Null;
0x0004FC        2038009F                 r1 = r6 - r7;
0x0004FD        2002003F                 Null = r0 - r1;
0x0004FE        00230004                 if NEG r0 = r1 + Null;
0x0004FF        FD0000FF 19205A44        M[0xff5a44] = r0 + Null;

 <$M.sra_tagtimes.set_final_rate>
0x000501        FD0000FF 09205A45        r0 = Null + M[0xff5a45];
0x000503        FD0000FF 09225A44        r0 = r0 + M[0xff5a44];
0x000505        FD0000FF 29325A30        r1 = r0 - M[0xff5a30];
0x000507        20220035                 if POS r0 = r0 - r1;
0x000508        FD0000FF 09325A30        r1 = r0 + M[0xff5a30];
0x00050A        20220034                 if NEG r0 = r0 - r1;
0x00050B        FD000001 0132EB85        r1 = r0 + 125829;
0x00050D        20220034                 if NEG r0 = r0 - r1;
0x00050E        FD0000FF 09805A3E        r6 = Null + M[0xff5a3e];
0x000510        0038009F                 r1 = r6 + r7;
0x000511        2002003F                 Null = r0 - r1;
0x000512        00230005                 if POS r0 = r1 + Null;
0x000513        2038009F                 r1 = r6 - r7;
0x000514        2002003F                 Null = r0 - r1;
0x000515        00230004                 if NEG r0 = r1 + Null;
0x000516        FD0000FF 19205A3E        M[0xff5a3e] = r0 + Null;

 <$M.sra_tagtimes.no_update_on_buf_level>
0x000518        FD0000FF 09205A2D        r0 = Null + M[0xff5a2d];
0x00051A        E1F010F5                 call $cbuffer.calc_amount_data;
0x00051B        0052000F                 r3 = r0 + Null;
0x00051C        FD0000FF 09205A34        r0 = Null + M[0xff5a34];
0x00051E        E422002F                 r0 = r0 + 1;
0x00051F        0005000F                 Null = r3 + Null;
0x000520        00200001                 if NE r0 = Null + Null;
0x000521        FD0000FF 19205A34        M[0xff5a34] = r0 + Null;
0x000523        2102001E                 Null = r0 - 30;
0x000524        DD400004                 if NEG jump $M.sra_tagtimes.no_reset_sra;
0x000525        FD0000FF 19005A44        M[0xff5a44] = Null + Null;
0x000527        DDF00030                 jump $reset_sra;

 <$M.sra_tagtimes.no_reset_sra>
0x000528        FD0000FF 09205A35        r0 = Null + M[0xff5a35];
0x00052A        0130006E                 r1 = Null + 110;
0x00052B        E422002F                 r0 = r0 + 1;
0x00052C        2002003F                 Null = r0 - r1;
0x00052D        00230005                 if POS r0 = r1 + Null;
0x00052E        FD0000FF 19205A35        M[0xff5a35] = r0 + Null;
0x000530        FD0000FF 09205A36        r0 = Null + M[0xff5a36];
0x000532        D1222C76                 r0 = M[r0 + 11382];
0x000533        DC02000F                 jump r0;

 <$M.sra_tagtimes.idle>
0x000534        FD0000FF 09205A35        r0 = Null + M[0xff5a35];
0x000536        21020064                 Null = r0 - 100;
0x000537        DD500002                 if POS jump $M.sra_tagtimes.start;
0x000538        DDF0001E                 jump $M.sra_tagtimes.end;

 <$M.sra_tagtimes.start>
0x000539        FD0000FF 09205A2E        r0 = Null + M[0xff5a2e];
0x00053B        E1F01114                 call $cbuffer.get_write_address_and_size;
0x00053C        FD0000FF 19205A37        M[0xff5a37] = r0 + Null;
0x00053E        E420002F                 r0 = Null + 1;
0x00053F        FD0000FF 19205A36        M[0xff5a36] = r0 + Null;
0x000541        FD0000FF 19005A39        M[0xff5a39] = Null + Null;

 <$M.sra_tagtimes.counting>
0x000543        FD0000FF 09205A39        r0 = Null + M[0xff5a39];
0x000545        E422002F                 r0 = r0 + 1;
0x000546        FD0000FF 19205A39        M[0xff5a39] = r0 + Null;
0x000548        E422003F                 r0 = r0 - 1;
0x000549        FD0000FF 29025A2C        Null = r0 - M[$sra_struct];
0x00054B        DD40000B                 if NEG jump $M.sra_tagtimes.end;
0x00054C        FD0000FF 09205A3A        r0 = Null + M[0xff5a3a];
0x00054E        21020002                 Null = r0 - 2;
0x00054F        DD100008                 if NE jump $reset_sra;
0x000550        FD0000FF 09205A2E        r0 = Null + M[0xff5a2e];
0x000552        E1F010FD                 call $cbuffer.get_write_address_and_size;
0x000553        FD0000FF 19205A38        M[0xff5a38] = r0 + Null;
0x000555        DDF0FFDF                 jump $M.sra_tagtimes.idle;

 <$M.sra_tagtimes.end>
0x000556        DDF01117                 jump $pop_rLink_and_rts;

 <$reset_sra>
0x000557        FD0000FF 19005A35        M[0xff5a35] = Null + Null;
0x000559        FD0000FF 19005A3A        M[0xff5a3a] = Null + Null;
0x00055B        FD0000FF 19005A38        M[0xff5a38] = Null + Null;
0x00055D        FD0000FF 19005A37        M[0xff5a37] = Null + Null;
0x00055F        FD0000FF 19005A36        M[0xff5a36] = Null + Null;
0x000561        DDF0110C                 jump $pop_rLink_and_rts;
...

 <$sra_calcrate>
0x000602        F3D00000                 push rLink;
0x000603        09201437                 r0 = Null + M[0x1437];
0x000604        DD00FF53                 if EQ jump $reset_sra;
0x000605        FD0000FF 09205A3A        r0 = Null + M[0xff5a3a];
0x000607        D1222C43                 r0 = M[r0 + 11331];
0x000608        DC02000F                 jump r0;

 <$M.sra_calcrate.idle>
0x000609        FD0000FF 09205A37        r0 = Null + M[0xff5a37];
0x00060B        DD00006B                 if EQ jump $M.sra_calcrate.end;
0x00060C        E420002F                 r0 = Null + 1;
0x00060D        FD0000FF 19205A3A        M[0xff5a3a] = r0 + Null;

 <$M.sra_calcrate.start>
0x00060F        FD0000FF 09205A2E        r0 = Null + M[0xff5a2e];
0x000611        E1F01039                 call $cbuffer.get_read_address_and_size;
0x000612        FD0000FF 09305A3B        r1 = Null + M[0xff5a3b];
0x000614        FD0000FF 09405A37        r2 = Null + M[0xff5a37];
0x000616        E1F0006B                 call $M.sra_calcrate.is_it_within_range;
0x000617        0005000F                 Null = r3 + Null;
0x000618        DD00005E                 if EQ jump $M.sra_calcrate.end;
0x000619        FD0000FF 19005A37        M[0xff5a37] = Null + Null;
0x00061B        FD0000FF 19005A3D        M[0xff5a3d] = Null + Null;
0x00061D        01200002                 r0 = Null + 2;
0x00061E        FD0000FF 19205A3A        M[0xff5a3a] = r0 + Null;
0x000620        DDF00056                 jump $M.sra_calcrate.end;

 <$M.sra_calcrate.addup>
0x000621        FD0000FF 09205A2F        r0 = Null + M[0xff5a2f];
0x000623        E1F0102C                 call $cbuffer.get_write_address_and_size;
0x000624        FD0000FF 29425A3C        r2 = r0 - M[0xff5a3c];
0x000626        00440034                 if NEG r2 = r2 + r1;
0x000627        FD0000FF 09345A3D        r1 = r2 + M[0xff5a3d];
0x000629        FD0000FF 19305A3D        M[0xff5a3d] = r1 + Null;
0x00062B        FD0000FF 09405A38        r2 = Null + M[0xff5a38];
0x00062D        DD000049                 if EQ jump $M.sra_calcrate.end;
0x00062E        FD0000FF 09205A2E        r0 = Null + M[0xff5a2e];
0x000630        E1F0101A                 call $cbuffer.get_read_address_and_size;
0x000631        FD0000FF 09305A3B        r1 = Null + M[0xff5a3b];
0x000633        FD0000FF 09405A38        r2 = Null + M[0xff5a38];
0x000635        E1F0004C                 call $M.sra_calcrate.is_it_within_range;
0x000636        0005000F                 Null = r3 + Null;
0x000637        DD00003F                 if EQ jump $M.sra_calcrate.end;
0x000638        FD0000FF 19005A38        M[0xff5a38] = Null + Null;
0x00063A        01200000                 r0 = Null + 0;
0x00063B        FD0000FF 19205A3A        M[0xff5a3a] = r0 + Null;
0x00063D        FD0000FF 09405A31        r2 = Null + M[0xff5a31];
0x00063F        E450002F                 r3 = Null + 1;
0x000640        FD0000FF 29345A3D        r1 = r2 - M[0xff5a3d];
0x000642        20500054                 if NEG r3 = Null - r3;
0x000643        9B350000                 r1 = r1 * r3 (int);
0x000644        FD0000FF 09905A30        r7 = Null + M[0xff5a30];
0x000646        99990003                 r7 = r7 * 3 (int);
0x000647        97490000                 r2 = r2 * r7 (frac);
0x000648        2043004F                 r2 = r1 - r2;
0x000649        DD50FFC0                 if POS jump $M.sra_calcrate.idle;
0x00064A        9B350000                 r1 = r1 * r3 (int);
0x00064B        FD0000FF 09205A40        r0 = Null + M[0xff5a40];
0x00064D        FD0000FF D5325A49        M[r0 + -42423] = r1;
0x00064F        E422002F                 r0 = r0 + 1;
0x000650        8122001F                 r0 = r0 AND 0x1f;
0x000651        FD0000FF 19205A40        M[0xff5a40] = r0 + Null;
0x000653        DD100004                 if NE jump $M.sra_calcrate.init_phase_passed;
0x000654        E440002F                 r2 = Null + 1;
0x000655        FD0000FF 19405A41        M[0xff5a41] = r2 + Null;

 <$M.sra_calcrate.init_phase_passed>
0x000657        01300020                 r1 = Null + 32;
0x000658        FD0000FF 09005A41        Null = Null + M[0xff5a41];
0x00065A        00230001                 if NE r0 = r1 + Null;

 <$M.sra_calcrate.calc_final_rate>
0x00065B        E4C2003F                 r10 = r0 - 1;
0x00065C        FD00007F 0150FFFF        r3 = Null + 8388607;
0x00065E        FD0000FF 51005A49        I0 = Null + -42423;
0x000660        23334100                 r1 = r1 - r1, r2 = M[I0,1];
0x000661        E5F00002                 do $M.sra_calcrate.acc_loop;
0x000662        03344100                 r1 = r1 + r2, r2 = M[I0,1];

 <$M.sra_calcrate.acc_loop>
0x000663        03340000                 r1 = r1 + r2;
0x000664        20500054                 if NEG r3 = Null - r3;
0x000665        97350000                 r1 = r1 * r3 (frac);
0x000666        01100000                 rMAC = Null + 0;
0x000667        8DE30280                 rMAC0 = r1 LSHIFT 0;
0x000668        D9020000                 Div = rMAC / r0;
0x000669        D9300001                 r1 = DivResult;
0x00066A        91E3007F                 rMAC = r1 ASHIFT -1 (MI);
0x00066B        FD0000FF 09405A31        r2 = Null + M[0xff5a31];
0x00066D        D9040000                 Div = rMAC / r2;
0x00066E        D9300001                 r1 = DivResult;
0x00066F        FD0000FF 29435A30        r2 = r1 - M[0xff5a30];
0x000671        20330045                 if POS r1 = r1 - r2;
0x000672        97350000                 r1 = r1 * r3 (frac);
0x000673        FD0000FF 19305A45        M[0xff5a45] = r1 + Null;
0x000675        DDF0FF94                 jump $M.sra_calcrate.idle;

 <$M.sra_calcrate.end>
0x000676        FD0000FF 09205A2E        r0 = Null + M[0xff5a2e];
0x000678        E1F00FD2                 call $cbuffer.get_read_address_and_size;
0x000679        FD0000FF 19205A3B        M[0xff5a3b] = r0 + Null;
0x00067B        FD0000FF 09205A2F        r0 = Null + M[0xff5a2f];
0x00067D        E1F00FD2                 call $cbuffer.get_write_address_and_size;
0x00067E        FD0000FF 19205A3C        M[0xff5a3c] = r0 + Null;

 <$M.sra_calcrate.exit>
0x000680        DDF00FED                 jump $pop_rLink_and_rts;

 <$M.sra_calcrate.is_it_within_range>
0x000681        E450002F                 r3 = Null + 1;
0x000682        2002003F                 Null = r0 - r1;
0x000683        DD400006                 if NEG jump $M.sra_calcrate.neg_part;

 <$M.sra_calcrate.pos_part>
0x000684        2004002F                 Null = r2 - r0;
0x000685        00500005                 if POS r3 = Null + Null;
0x000686        2004003F                 Null = r2 - r1;
0x000687        00500004                 if NEG r3 = Null + Null;
0x000688        DC0D000F                 rts;

 <$M.sra_calcrate.neg_part>
0x000689        2004003F                 Null = r2 - r1;
0x00068A        DC0D0005                 if POS rts;
0x00068B        2004002F                 Null = r2 - r0;
0x00068C        00500005                 if POS r3 = Null + Null;
0x00068D        DC0D000F                 rts;

 <v80zX2SrBqJGd/jDhj2cTsvkTRKxGQGYeStru/DPWl0=>
0x00068E        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00068F        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000690        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000691        E1F000E3                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000692        00C4000F                 r10 = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000693        DDD00FDA                 if LE jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000694        F3900000                 push r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000695        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000696        E1F000F3                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000697        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000698        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000699        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00069A        E1F000EF                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00069B        5050002F                 I5 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00069C        50F0003F                 L5 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00069D        D12A0003                 r0 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00069E        DD000003                 if EQ jump RSMx5JWrkvWwrX0jSRIYilFIebs9Ar4RitCNyBys9uY=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00069F        D1720009                 r5 = M[r0 + 9];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006A0        DDF00013                 jump yjYV0X8/cFHi3Bo2Tb/nBZUpyQXJqYUa3OstnR0OOes=;

 <RSMx5JWrkvWwrX0jSRIYilFIebs9Ar4RitCNyBys9uY=>
0x0006A1        D12A0007                 r0 = M[r8 + 7];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006A2        D062000F                 r4 = M[r0 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006A3        D17A0009                 r5 = M[r8 + 9];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006A4        E430002F                 r1 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006A5        2027006F                 r0 = r5 - r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006A6        20200024                 if NEG r0 = Null - r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006A7        FD000000 954220C5        r2 = r0 * 0.0010000467300415039 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006A9        21023127                 Null = r0 - 12583;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006AA        00430004                 if NEG r2 = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006AB        21340026                 r1 = r2 - 38;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006AC        20440035                 if POS r2 = r2 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006AD        2037006F                 r1 = r5 - r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006AE        2023004F                 r0 = r1 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006AF        20330025                 if POS r1 = r1 - r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006B0        0023004F                 r0 = r1 + r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006B1        20330024                 if NEG r1 = r1 - r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006B2        23730000                 r5 = r5 - r1;

 <yjYV0X8/cFHi3Bo2Tb/nBZUpyQXJqYUa3OstnR0OOes=>
0x0006B3        D57A0009                 M[r8 + 9] = r5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006B4        D12A0005                 r0 = M[r8 + 5];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006B5        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006B6        51C0000C                 L0 = Null + 12;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006B7        51D0000C                 L1 = Null + 12;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006B8        D1BA0002                 r9 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006B9        01800015                 r6 = Null + 21;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006BA        51B00001                 M3 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006BB        E1F0000C                 call lxk8Vrckmd8GWFBXEAGqAlb0n0PO0pQqznpJ65uJNck=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006BC        4430000F                 r1 = Null + I0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006BD        D53A0005                 M[r8 + 5] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006BE        51F00000                 L5 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006BF        51E00000                 L4 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006C0        51C00000                 L0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006C1        51D00000                 L1 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006C2        F3940000                 pop r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006C3        4430007F                 r1 = Null + I7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006C4        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006C5        E1F000B9                 call $cbops_multirate.SetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006C6        DDF00FA7                 jump $pop_rLink_and_rts;

 <lxk8Vrckmd8GWFBXEAGqAlb0n0PO0pQqznpJ65uJNck=>
0x0006C7        D12A0004                 r0 = M[r8 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006C8        5132007E                 I3 = r0 + 126;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006C9        D16A000A                 r4 = M[r8 + 10];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006CA        512A000D                 I2 = r8 + 13;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006CB        D17A0009                 r5 = M[r8 + 9];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006CC        D16A000A                 r4 = M[r8 + 10];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006CD        70A0008F                 M2 = Null - r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006CE        5080008F                 M0 = Null + r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006CF        CC16008F                 rMAC = r4 * r6 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006D0        51700000                 I7 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006D1        D12A000B                 r0 = M[r8 + 11];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006D2        DD000003                 if EQ jump l9/jkdp0NRjlkXk0WPfHvRGRv0aC7ICMf3YncirHAgw=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006D3        03000031                 Null = Null + Null, r1 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006D4        67CBB100                 r10 = r10 - M3, M[I0,1] = r1;

 <l9/jkdp0NRjlkXk0WPfHvRGRv0aC7ICMf3YncirHAgw=>
0x0006D5        E5F00038                 do LE5sItV6R9d4nNoyDJaZMNF2P2tq6Ku/MqoAPpl+E6c=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006D6        8D510018                 r3 = rMAC LSHIFT 24;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006D7        8D55007F                 r3 = r3 LSHIFT -1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006D8        8D410000                 r2 = rMAC LSHIFT 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006D9        5863004F                 I6 = I3 + r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006DA        6524FFEA                 r0 = -22 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006DB        7092004F                 M1 = r0 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006DC        5810000F                 I1 = I0 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006DD        2211273A                 rMAC = rMAC - rMAC, r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006DE        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006DF        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E0        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E1        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E2        BE232739                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E3        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E4        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E5        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E6        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E7        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E8        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006E9        BF230030                 rMAC = rMAC - r0 * r1 (SS), r1 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006EA        79990002                 M1 = M1 - 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006EB        474B9800                 r2 = r2 + M3, M[I2,0] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006EC        DD400003                 if NEG jump IgCeXzT6r+eIMiVtuFR1ISMxWErQvQIcZDE20O3TO+c=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006ED        71980001                 M1 = r6 - 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006EE        2040B78F                 r2 = Null - r6, M[I1,M3] = r1;

 <IgCeXzT6r+eIMiVtuFR1ISMxWErQvQIcZDE20O3TO+c=>
0x0006EF        5863004F                 I6 = I3 + r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F0        5E7B273A                 I7 = I7 + M3, r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F1        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F2        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F3        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F4        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F5        AE232739                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F6        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F7        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F8        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006F9        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006FA        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006FB        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006FC        AF233800                 rMAC = rMAC + r0 * r1 (SS), r1 = M[I2,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006FD        CF150051                 rMAC = rMAC * r3 (SS), r3 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0006FE        FD00007F BD13FFFF        rMAC = rMAC - r1 * 0.99999988079071045 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000700        903100BF                 r1 = rMAC ASHIFT r9;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000701        226700B7                 r4 = r4 - r5, M[I5,M3] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000702        DD40000A                 if NEG jump UDPqdWDSyZLhsxg7aI5CtuX1yPvbaIoOFEFx5wuwjG4=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000703        FD000080 01660000        r4 = r4 + -8388608;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000705        0007000F                 Null = r5 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000706        DD400004                 if NEG jump Gt3/QHJCvLvoCrWt7q1FhP9MFSmrS0Qmpojyhav53Tk=;

 <xFxLXvnsKn4fEO9NyX5Q7BtXNgCGsl+s0qP13zQPGkQ=>
0x000707        03005353                 Null = Null + Null, r3 = M[I0,-1], r3 = M[I4,-1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000708        47CB5000                 r10 = r10 + M3, r3 = M[I0,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000709        DDF00003                 jump UDPqdWDSyZLhsxg7aI5CtuX1yPvbaIoOFEFx5wuwjG4=;

 <Gt3/QHJCvLvoCrWt7q1FhP9MFSmrS0Qmpojyhav53Tk=>
0x00070A        66CBD353                 r10 = r10 - M3, M[I0,M3] = r3, r3 = M[I4,M3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00070B        DDD00007                 if LE jump QRtxaRqNp6anCrH6DnELT3JIzF/Ph1yfm8418ubofAc=;

 <UDPqdWDSyZLhsxg7aI5CtuX1yPvbaIoOFEFx5wuwjG4=>
0x00070C        CC16D38F                 rMAC = r4 * r6 (SS), M[I0,M3] = r3;

 <LE5sItV6R9d4nNoyDJaZMNF2P2tq6Ku/MqoAPpl+E6c=>
0x00070D        D56A000A                 M[r8 + 10] = r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00070E        509000CF                 M1 = Null + r10;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00070F        6420319F                 r0 = Null - M1, r1 = M[I0,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000710        D52A000B                 M[r8 + 11] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000711        DC0D000F                 rts;

 <QRtxaRqNp6anCrH6DnELT3JIzF/Ph1yfm8418ubofAc=>
0x000712        66CBD300                 r10 = r10 - M3, M[I0,M3] = r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000713        DDF0FFFA                 jump LE5sItV6R9d4nNoyDJaZMNF2P2tq6Ku/MqoAPpl+E6c=;

 <$cbops_multirate.copy>
0x000714        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000715        51900001                 M1 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000716        D19A0000                 r7 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000717        F3A00000                 push r8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000718        F3900000                 push r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000719        5000009F                 I0 = Null + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00071A        514A0003                 I4 = r8 + 3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00071B        02000021                 Null = Null + Null, r0 = M[I4,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00071C        00C2000F                 r10 = r0 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00071D        02000021                 Null = Null + Null, r0 = M[I4,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00071E        E5F00007                 do 3OjZrj6kTHnjyCn+Hhf2XXJrCoW3WtLmI+Mc07+6VVk=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00071F        0300A000                 Null = Null + Null, M[I0,0] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000720        E1F00F2A                 call $cbuffer.get_read_address_and_size;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000721        0032210F                 r1 = r0 + Null, r0 = M[I0,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000722        0200B100                 Null = Null + Null, M[I0,M1] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000723        E1F00EEC                 call $cbuffer.calc_amount_data;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000724        0200A121                 Null = Null + Null, M[I0,M1] = r0, r0 = M[I4,M1];

 <3OjZrj6kTHnjyCn+Hhf2XXJrCoW3WtLmI+Mc07+6VVk=>
0x000725        02C20021                 r10 = r10 + r0, r0 = M[I4,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000726        E5F00007                 do KAlQ38w3PgL6O+wsiiENLWNEunJTqtS3+4cczPAKpPI=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000727        0300A000                 Null = Null + Null, M[I0,0] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000728        E1F00F27                 call $cbuffer.get_write_address_and_size;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000729        0032210F                 r1 = r0 + Null, r0 = M[I0,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00072A        0200B100                 Null = Null + Null, M[I0,M1] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00072B        E1F00ED4                 call $cbuffer.calc_amount_space;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00072C        0200A121                 Null = Null + Null, M[I0,M1] = r0, r0 = M[I4,M1];

 <KAlQ38w3PgL6O+wsiiENLWNEunJTqtS3+4cczPAKpPI=>
0x00072D        02C20021                 r10 = r10 + r0, r0 = M[I4,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00072E        E5F00008                 do NH35Jsq1yo0Zre+1NS3nRBJHNCHST5ogwjOspjThRE0=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00072F        0200A100                 Null = Null + Null, M[I0,M1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000730        D1320002                 r1 = M[r0 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000731        D1520001                 r3 = M[r0 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000732        23530000                 r3 = r3 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000733        0855002D                 if LE r3 = r3 + M[r0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000734        6659B100                 r3 = r3 - M1, M[I0,M1] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000735        0200D121                 Null = Null + Null, M[I0,M1] = r3, r0 = M[I4,M1];

 <NH35Jsq1yo0Zre+1NS3nRBJHNCHST5ogwjOspjThRE0=>
0x000736        D1AA0002                 r8 = M[r8 + 2];

 <4IQxcc2lqeTmRUWHBVbVyJomKw0OgMHnQx3RwvG999k=>
0x000737        D12A0002                 r0 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000738        01AA0003                 r8 = r8 + 3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000739        F198FFFF                 r7 = M[SP + -0x1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00073A        D1220001                 r0 = M[r0 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00073B        E0020001                 if NE call r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00073C        D1AAFFFD                 r8 = M[r8 + -3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00073D        E40A002F                 Null = r8 + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00073E        DD10FFF9                 if NE jump 4IQxcc2lqeTmRUWHBVbVyJomKw0OgMHnQx3RwvG999k=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00073F        F1A8FFFE                 r8 = M[SP + -0x2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000740        F109FFFF                 I0 = M[SP + -0x1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000741        D1CA0003                 r10 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000742        59000002                 I0 = I0 + 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000743        51B00003                 M3 = Null + 3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000744        0070230F                 r5 = Null + Null, r0 = M[I0,M3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000745        E5F00003                 do 0XpvxhX1OOdYd7m/tJR1cHeq6YTqreKEJ2RMk+E3L3s=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000746        2007002F                 Null = r5 - r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000747        00722304                 if NEG r5 = r0 + Null, r0 = M[I0,M3];

 <0XpvxhX1OOdYd7m/tJR1cHeq6YTqreKEJ2RMk+E3L3s=>
0x000748        0007000F                 Null = r5 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000749        DD00001C                 if EQ jump xKhontNy6fRhfz6Du4rHFJ8azMB/pQlCXS8jWfDSACI=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00074A        D1AA0001                 r8 = M[r8 + 1];

 <zqvg0dOfKMtKxrtWFUb2Jg0JHSYnn40KnpfuZRZfWgQ=>
0x00074B        D12A0002                 r0 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00074C        01AA0003                 r8 = r8 + 3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00074D        F198FFFF                 r7 = M[SP + -0x1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00074E        D1220002                 r0 = M[r0 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00074F        E0020001                 if NE call r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000750        D1AAFFFE                 r8 = M[r8 + -2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000751        E40A002F                 Null = r8 + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000752        DD10FFF9                 if NE jump zqvg0dOfKMtKxrtWFUb2Jg0JHSYnn40KnpfuZRZfWgQ=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000753        F1A8FFFE                 r8 = M[SP + -0x2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000754        F198FFFF                 r7 = M[SP + -0x1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000755        51900001                 M1 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000756        511A0003                 I1 = r8 + 3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000757        8ABB2500                 r9 = r9 XOR r9, r0 = M[I1,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000758        00C2250F                 r10 = r0 + Null, r0 = M[I1,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000759        E5F00005                 do AVK1L7q1dMUW+Bk9ull5vyvSTtcG/uMDariPVGfiMe0=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00075A        002B000F                 r0 = r9 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00075B        E1F0000D                 call tjewKVwIoTWUhJNzHpVaOk8IfiiA2Tru8N36XW1h9/s=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00075C        E1F00F02                 call $cbuffer.set_read_address;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00075D        46B92500                 r9 = r9 + M1, r0 = M[I1,M1];

 <AVK1L7q1dMUW+Bk9ull5vyvSTtcG/uMDariPVGfiMe0=>
0x00075E        00C2000F                 r10 = r0 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00075F        E5F00005                 do bGF4n+CPr3c8xEsbW877LOA6GybWUgq17fDwVyc1i6c=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000760        002B000F                 r0 = r9 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000761        E1F00007                 call tjewKVwIoTWUhJNzHpVaOk8IfiiA2Tru8N36XW1h9/s=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000762        E1F00F00                 call $cbuffer.set_write_address;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000763        47B90000                 r9 = r9 + M1;

 <bGF4n+CPr3c8xEsbW877LOA6GybWUgq17fDwVyc1i6c=>
0x000764        51C00000                 L0 = Null + 0;

 <xKhontNy6fRhfz6Du4rHFJ8azMB/pQlCXS8jWfDSACI=>
0x000765        F3940000                 pop r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000766        F3A40000                 pop r8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000767        DDF00F06                 jump $pop_rLink_and_rts;

 <tjewKVwIoTWUhJNzHpVaOk8IfiiA2Tru8N36XW1h9/s=>
0x000768        99420003                 r2 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000769        5024009F                 I2 = r2 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00076A        02002900                 Null = Null + Null, r0 = M[I2,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00076B        D802000F                 Null = SIGNDET r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00076C        DC0D0000                 if EQ rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00076D        D1520000                 r3 = M[r0 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00076E        50C0395F                 L0 = Null + r3, r1 = M[I2,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00076F        5000493F                 I0 = Null + r1, r2 = M[I2,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000770        50A0004F                 M2 = Null + r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000771        02004200                 Null = Null + Null, r2 = M[I0,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000772        4430000F                 r1 = Null + I0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000773        DC0D000F                 rts;

 <$cbops_multirate.GetTransferAndUpdateOutput>
0x000774        01590002                 r3 = r7 + 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000775        99220003                 r0 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000776        99330003                 r1 = r1 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000777        D045002F                 r2 = M[r3 + r0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000778        D445003F                 M[r3 + r1] = r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000779        DC0D000F                 rts;

 <$cbops_multirate.GetTransferAmount>
0x00077A        99220003                 r0 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00077B        03290000                 r0 = r0 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00077C        D1220002                 r0 = M[r0 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00077D        DC0D000F                 rts;

 <$cbops_multirate.SetTransferAmount>
0x00077E        99220003                 r0 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00077F        03290000                 r0 = r0 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000780        D5320002                 M[r0 + 2] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000781        DC0D000F                 rts;

 <$cbops_multirate.SetMinimumTransferAmount>
0x000782        99220003                 r0 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000783        03290000                 r0 = r0 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000784        D1520002                 r3 = M[r0 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000785        2003005F                 Null = r1 - r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000786        00350005                 if POS r1 = r3 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000787        D5320002                 M[r0 + 2] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000788        DC0D000F                 rts;

 <$cbops_multirate.GetBuffer>
0x000789        99420003                 r2 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00078A        03490000                 r2 = r2 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00078B        D1340000                 r1 = M[r2 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00078C        D1240001                 r0 = M[r2 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00078D        D803000F                 Null = SIGNDET r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00078E        DD000003                 if EQ jump MzYbvu5M3xi6rUsBwlDLKlHpNp2JIND7X4roxXKzxfA=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00078F        D1330000                 r1 = M[r1 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000790        DC0D000F                 rts;

 <MzYbvu5M3xi6rUsBwlDLKlHpNp2JIND7X4roxXKzxfA=>
0x000791        E430002F                 r1 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000792        0040000F                 r2 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000793        DC0D000F                 rts;

 </qdpZ9Ty9LKm37xL75sf1a+qjOj3Co/93RwLAftOBOM=>
0x000794        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000795        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000796        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000797        E1F0FFDD                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000798        00C4000F                 r10 = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000799        DDD00ED4                 if LE jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00079A        F3900000                 push r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00079B        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00079C        E1F0FFED                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00079D        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00079E        50C0003F                 L0 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00079F        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A0        E1F0FFE9                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A1        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A2        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A3        D10A000C                 Null = M[r8 + 12];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A4        DD10000C                 if NE jump tNdODJMT9fuIXMEnn8ym0S4dpLY8RDy+3++JCtJ8TQM=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A5        D12A0006                 r0 = M[r8 + 6];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A6        D13A0007                 r1 = M[r8 + 7];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A7        2002003F                 Null = r0 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A8        DD100008                 if NE jump tNdODJMT9fuIXMEnn8ym0S4dpLY8RDy+3++JCtJ8TQM=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007A9        009C000F                 r7 = r10 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007AA        E4CC003F                 r10 = r10 - 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007AB        03002100                 Null = Null + Null, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007AC        E5F00002                 do N2/SUL30HaqaeuI0XmmsNU9XnqhdvjV2V003QdQZJTI=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007AD        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <N2/SUL30HaqaeuI0XmmsNU9XnqhdvjV2V003QdQZJTI=>
0x0007AE        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007AF        DDF00051                 jump OhAQt1Dn1tiudqD+eJ6ieIf6QapdDaGEY011QensJi4=;

 <tNdODJMT9fuIXMEnn8ym0S4dpLY8RDy+3++JCtJ8TQM=>
0x0007B0        51D0000D                 L1 = Null + 13;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007B1        D12A0005                 r0 = M[r8 + 5];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007B2        5010002F                 I1 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007B3        D17A0002                 r5 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007B4        5137007E                 I3 = r5 + 126;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007B5        D17A0009                 r5 = M[r8 + 9];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007B6        D15A0008                 r3 = M[r8 + 8];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007B7        5050005F                 I5 = Null + r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007B8        D16A000A                 r4 = M[r8 + 10];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007B9        D12A000B                 r0 = M[r8 + 11];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007BA        5020002F                 I2 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007BB        51B00001                 M3 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007BC        01800015                 r6 = Null + 21;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007BD        70A0008F                 M2 = Null - r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007BE        5080008F                 M0 = Null + r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007BF        01900000                 r7 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007C0        F3A00000                 push r8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007C1        E5F00039                 do btgJdd/uv9cCIfDl5ON5u0zqVJ4I+uFhMOfT6VI+Mvs=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007C2        03005100                 Null = Null + Null, r3 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007C3        7F2BD500                 I2 = I2 - M3, M[I1,1] = r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007C4        DD500035                 if POS jump SJC1FrMLWu0z681TuwA681609y7mwSG5Revsd5rMyEU=;

 <YzVVvi+3Vxt4GKr/Gu0GxPmUYwBq+6OGyO4nUv+9cEc=>
0x0007C5        CC16008F                 rMAC = r4 * r6 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007C6        8DA10018                 r8 = rMAC LSHIFT 24;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007C7        8DAA007F                 r8 = r8 LSHIFT -1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007C8        8D410000                 r2 = rMAC LSHIFT 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007C9        5863004F                 I6 = I3 + r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007CA        6524FFEA                 r0 = -22 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007CB        7092004F                 M1 = r0 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007CC        5871000F                 I7 = I1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007CD        2211273A                 rMAC = rMAC - rMAC, r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007CE        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007CF        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D0        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D1        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D2        BE232739                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D3        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D4        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D5        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D6        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D7        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D8        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007D9        BC12273F                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007DA        79990002                 M1 = M1 - 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007DB        474B0000                 r2 = r2 + M3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007DC        DD400003                 if NEG jump BQeHD+ts191L2ufzuPllS2VBKnN8XEZ6wHl/TUHz06M=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007DD        71980001                 M1 = r6 - 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007DE        2040378F                 r2 = Null - r6, r1 = M[I1,M3];

 <BQeHD+ts191L2ufzuPllS2VBKnN8XEZ6wHl/TUHz06M=>
0x0007DF        5863004F                 I6 = I3 + r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E0        0041000F                 r2 = rMAC + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E1        469B273A                 r7 = r7 + M3, r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E2        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E3        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E4        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E5        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E6        AE232739                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E7        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E8        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007E9        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007EA        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007EB        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007EC        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007ED        AC12003F                 rMAC = rMAC + r0 * r1 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007EE        5817000F                 I1 = I7 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007EF        CC1100AF                 rMAC = rMAC * r8 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007F0        FD00007F BD14FFFF        rMAC = rMAC - r2 * 0.99999988079071045 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007F2        03670091                 r4 = r4 + r5, M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007F3        DD400004                 if NEG jump /Bra98RXXSlJh/vCPULjrvgtnqcd3arR4RfT7vJgYd8=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007F4        59220001                 I2 = I2 + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007F5        FD00007F 2166FFFF        r4 = r4 - 8388607;

 </Bra98RXXSlJh/vCPULjrvgtnqcd3arR4RfT7vJgYd8=>
0x0007F7        5F250000                 I2 = I2 + I5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007F8        DD40FFCD                 if NEG jump YzVVvi+3Vxt4GKr/Gu0GxPmUYwBq+6OGyO4nUv+9cEc=;

 <SJC1FrMLWu0z681TuwA681609y7mwSG5Revsd5rMyEU=>
0x0007F9        03000000                 Null = Null + Null;

 <btgJdd/uv9cCIfDl5ON5u0zqVJ4I+uFhMOfT6VI+Mvs=>
0x0007FA        F3A40000                 pop r8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007FB        4420001F                 r0 = Null + I1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007FC        D52A0005                 M[r8 + 5] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007FD        4420002F                 r0 = Null + I2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007FE        D52A000B                 M[r8 + 11] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0007FF        D56A000A                 M[r8 + 10] = r4;

 <OhAQt1Dn1tiudqD+eJ6ieIf6QapdDaGEY011QensJi4=>
0x000800        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000801        0039000F                 r1 = r7 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000802        F3940000                 pop r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000803        E1F0FF7B                 call $cbops_multirate.SetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000804        51E00000                 L4 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000805        51D00000                 L1 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000806        51C00000                 L0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000807        DDF00E66                 jump $pop_rLink_and_rts;

 <$MeloD_Expansion.process>
0x000808        D1290005                 r0 = M[r7 + 5];
0x000809        D1890006                 r6 = M[r7 + 6];
0x00080A        D1A90004                 r8 = M[r7 + 4];
0x00080B        D3A00000                 r8 = M[r8 + Null];
0x00080C        01703D5D                 r5 = Null + 15709;
0x00080D        832A0000                 r0 = r0 AND r8;
0x00080E        DD000004                 if EQ jump $M.MeloD_Expansion_process.not_bypassed_in_music_manager;
0x00080F        0008000F                 Null = r6 + Null;
0x000810        DD0009D5                 if EQ jump $M.audio_proc.stereo_copy.Process.func;
0x000811        2070007F                 r5 = Null - r5;

 <$M.MeloD_Expansion_process.not_bypassed_in_music_manager>
0x000812        F3D00000                 push rLink;
0x000813        0920FE93                 r0 = Null + M[0xfffe93];
0x000814        F3200000                 push r0;
0x000815        E420002F                 r0 = Null + 1;
0x000816        1920FE93                 M[0xfffe93] = r0 + Null;
0x000817        D1290000                 r0 = M[r7 + 0];
0x000818        E1F00E41                 call $frmbuffer.get_buffer;
0x000819        5000002F                 I0 = Null + r0;
0x00081A        50C0003F                 L0 = Null + r1;
0x00081B        D1290001                 r0 = M[r7 + 1];
0x00081C        E1F00E3D                 call $frmbuffer.get_buffer;
0x00081D        5040002F                 I4 = Null + r0;
0x00081E        50E0003F                 L4 = Null + r1;
0x00081F        00C5000F                 r10 = r3 + Null;
0x000820        D1290002                 r0 = M[r7 + 2];
0x000821        005C000F                 r3 = r10 + Null;
0x000822        E1F00E49                 call $frmbuffer.set_frame_size;
0x000823        E1F00E36                 call $frmbuffer.get_buffer;
0x000824        5010002F                 I1 = Null + r0;
0x000825        50D0003F                 L1 = Null + r1;
0x000826        D1290003                 r0 = M[r7 + 3];
0x000827        005C000F                 r3 = r10 + Null;
0x000828        E1F00E43                 call $frmbuffer.set_frame_size;
0x000829        E1F00E30                 call $frmbuffer.get_buffer;
0x00082A        5050002F                 I5 = Null + r0;
0x00082B        50F0003F                 L5 = Null + r1;
0x00082C        51900001                 M1 = Null + 1;
0x00082D        51A0FFFE                 M2 = Null + -2;
0x00082E        E5F00040                 do $M.MeloD_Expansion_process.widening_process_loop;
0x00082F        D1290007                 r0 = M[r7 + 7];
0x000830        5020002F                 I2 = Null + r0;
0x000831        D1290008                 r0 = M[r7 + 8];
0x000832        5060002F                 I6 = Null + r0;
0x000833        03002030                 Null = Null + Null, r0 = M[I0,0], r1 = M[I4,0];
0x000834        9122007F                 r0 = r0 ASHIFT -1;
0x000835        9133007F                 r1 = r1 ASHIFT -1;
0x000836        2042003F                 r2 = r0 - r1;
0x000837        03322859                 r1 = r1 + r0, r0 = M[I2,0], r3 = M[I6,1];
0x000838        CF25C959                 rMAC = r0 * r3 (SS), M[I2,1] = r2, r3 = M[I6,1];
0x000839        AF452859                 rMAC = rMAC + r2 * r3 (SS), r0 = M[I2,0], r3 = M[I6,1];
0x00083A        BC12005F                 rMAC = rMAC - r0 * r3 (SS);
0x00083B        91110001                 rMAC = rMAC ASHIFT 1 (56bit);
0x00083C        0041000F                 r2 = rMAC + Null;
0x00083D        0023C94F                 r0 = r1 + r2, M[I2,M1] = r2;
0x00083E        23344959                 r1 = r1 - r2, r2 = M[I2,1], r3 = M[I6,1];
0x00083F        CF454B59                 rMAC = r2 * r3 (SS), r2 = M[I2,-1], r3 = M[I6,1];
0x000840        AF45CA69                 rMAC = rMAC + r2 * r3 (SS), M[I2,2] = r2, r4 = M[I6,1];
0x000841        AF264900                 rMAC = rMAC + r0 * r4 (SS), r2 = M[I2,1];
0x000842        BC144A6F                 rMAC = rMAC - r2 * r4 (SS), r2 = M[I2,M2];
0x000843        BF45A900                 rMAC = rMAC - r2 * r3 (SS), M[I2,1] = r0;
0x000844        91110001                 rMAC = rMAC ASHIFT 1 (56bit);
0x000845        0021000F                 r0 = rMAC + Null;
0x000846        0300C900                 Null = Null + Null, M[I2,1] = r2;
0x000847        0300A900                 Null = Null + Null, M[I2,1] = r0;
0x000848        03004959                 Null = Null + Null, r2 = M[I2,1], r3 = M[I6,1];
0x000849        CF454B59                 rMAC = r2 * r3 (SS), r2 = M[I2,-1], r3 = M[I6,1];
0x00084A        AF45CA69                 rMAC = rMAC + r2 * r3 (SS), M[I2,2] = r2, r4 = M[I6,1];
0x00084B        AF264900                 rMAC = rMAC + r0 * r4 (SS), r2 = M[I2,1];
0x00084C        BC144A6F                 rMAC = rMAC - r2 * r4 (SS), r2 = M[I2,M2];
0x00084D        BF45A900                 rMAC = rMAC - r2 * r3 (SS), M[I2,1] = r0;
0x00084E        91110001                 rMAC = rMAC ASHIFT 1 (56bit);
0x00084F        0021000F                 r0 = rMAC + Null;
0x000850        0300C900                 Null = Null + Null, M[I2,1] = r2;
0x000851        0300A900                 Null = Null + Null, M[I2,1] = r0;
0x000852        03004959                 Null = Null + Null, r2 = M[I2,1], r3 = M[I6,1];
0x000853        CF454B59                 rMAC = r2 * r3 (SS), r2 = M[I2,-1], r3 = M[I6,1];
0x000854        AF45CA69                 rMAC = rMAC + r2 * r3 (SS), M[I2,2] = r2, r4 = M[I6,1];
0x000855        AF364900                 rMAC = rMAC + r1 * r4 (SS), r2 = M[I2,1];
0x000856        BC144A6F                 rMAC = rMAC - r2 * r4 (SS), r2 = M[I2,M2];
0x000857        BF45B900                 rMAC = rMAC - r2 * r3 (SS), M[I2,1] = r1;
0x000858        91110001                 rMAC = rMAC ASHIFT 1 (56bit);
0x000859        0031000F                 r1 = rMAC + Null;
0x00085A        0300C900                 Null = Null + Null, M[I2,1] = r2;
0x00085B        0300B900                 Null = Null + Null, M[I2,1] = r1;
0x00085C        03004959                 Null = Null + Null, r2 = M[I2,1], r3 = M[I6,1];
0x00085D        CF454B59                 rMAC = r2 * r3 (SS), r2 = M[I2,-1], r3 = M[I6,1];
0x00085E        AF45CA69                 rMAC = rMAC + r2 * r3 (SS), M[I2,2] = r2, r4 = M[I6,1];
0x00085F        AF364900                 rMAC = rMAC + r1 * r4 (SS), r2 = M[I2,1];
0x000860        BC144A6F                 rMAC = rMAC - r2 * r4 (SS), r2 = M[I2,M2];
0x000861        BF45B900                 rMAC = rMAC - r2 * r3 (SS), M[I2,1] = r1;
0x000862        91110001                 rMAC = rMAC ASHIFT 1 (56bit);
0x000863        0031000F                 r1 = rMAC + Null;
0x000864        0287C900                 r6 = r6 + r5, M[I2,M1] = r2;
0x000865        20880074                 if NEG r6 = r6 - r5;
0x000866        FD00007F 0160FFFF        r4 = Null + 8388607;
0x000868        2268B900                 r4 = r4 - r6, M[I2,M1] = r1;
0x000869        CC12418F                 rMAC = r0 * r6 (SS), r2 = M[I0,M1];
0x00086A        AE460051                 rMAC = rMAC + r2 * r4 (SS), r3 = M[I4,M1];
0x00086B        CC13958F                 rMAC = r1 * r6 (SS), M[I1,M1] = rMAC;
0x00086C        AC15006F                 rMAC = rMAC + r3 * r4 (SS);
0x00086D        02000095                 Null = Null + Null, M[I5,M1] = rMAC;

 <$M.MeloD_Expansion_process.widening_process_loop>
0x00086E        D5890006                 M[r7 + 6] = r6;
0x00086F        50C0000F                 L0 = Null + Null;
0x000870        50E0000F                 L4 = Null + Null;
0x000871        50D0000F                 L1 = Null + Null;
0x000872        50F0000F                 L5 = Null + Null;
0x000873        F3240000                 pop r0;
0x000874        1920FE93                 M[0xfffe93] = r0 + Null;
0x000875        DDF00DF8                 jump $pop_rLink_and_rts;

 <$cmpd100.analysis>
0x000876        D12A0000                 r0 = M[r8 + 0];
0x000877        D13A0001                 r1 = M[r8 + 1];
0x000878        83320000                 r1 = r1 AND r0;
0x000879        DC0D0001                 if NE rts;
0x00087A        F3D00000                 push rLink;
0x00087B        D12A0002                 r0 = M[r8 + 2];
0x00087C        E1F00DDD                 call $frmbuffer.get_buffer;
0x00087D        5000002F                 I0 = Null + r0;
0x00087E        50C0003F                 L0 = Null + r1;
0x00087F        D12A0003                 r0 = M[r8 + 3];
0x000880        E1F00DD9                 call $frmbuffer.get_buffer;
0x000881        5040002F                 I4 = Null + r0;
0x000882        50E0003F                 L4 = Null + r1;
0x000883        00C5000F                 r10 = r3 + Null;
0x000884        01400000                 r2 = Null + 0;
0x000885        E5F0000A                 do $M.cmpd100.analysis.loop_find_peak;
0x000886        03002131                 Null = Null + Null, r0 = M[I0,1], r1 = M[I4,1];
0x000887        2002000F                 Null = r0 - Null;
0x000888        20200024                 if NEG r0 = Null - r0;
0x000889        2003000F                 Null = r1 - Null;
0x00088A        20300034                 if NEG r1 = Null - r1;
0x00088B        2002003F                 Null = r0 - r1;
0x00088C        00230004                 if NEG r0 = r1 + Null;
0x00088D        2004002F                 Null = r2 - r0;
0x00088E        00420004                 if NEG r2 = r0 + Null;

 <$M.cmpd100.analysis.loop_find_peak>
0x00088F        19402C9E                 M[$M.cmpd100.analysis.MusicComp_Peak] = r2 + Null;
0x000890        0014000F                 rMAC = r2 + Null;
0x000891        E1F00C60                 call $math.log2_table;
0x000892        FD0000FF 19205C9E        M[$M.cmpd100.analysis.MusicComp_Peak_log] = r0 + Null;
0x000894        D14A001D                 r2 = M[r8 + 29];
0x000895        0042004F                 r2 = r0 + r2;
0x000896        51C00000                 L0 = Null + 0;
0x000897        51E00000                 L4 = Null + 0;
0x000898        513A0008                 I3 = r8 + 8;
0x000899        514A0012                 I4 = r8 + 18;
0x00089A        51900001                 M1 = Null + 1;
0x00089B        D15A000D                 r3 = M[r8 + 13];
0x00089C        D16A000C                 r4 = M[r8 + 12];
0x00089D        D17A000B                 r5 = M[r8 + 11];
0x00089E        D18A000A                 r6 = M[r8 + 10];
0x00089F        2024005F                 r0 = r2 - r3;
0x0008A0        DD40000E                 if NEG jump $M.cmpd100.analysis.CompressComparison;
0x0008A1        D13A0011                 r1 = M[r8 + 17];
0x0008A2        CF236D31                 rMAC = r0 * r1 (SS), r4 = M[I3,1], r1 = M[I4,1];
0x0008A3        BF360031                 rMAC = rMAC - r1 * r4 (SS), r1 = M[I4,1];
0x0008A4        BF360031                 rMAC = rMAC - r1 * r4 (SS), r1 = M[I4,1];
0x0008A5        BF366F00                 rMAC = rMAC - r1 * r4 (SS), r4 = M[I3,-1];
0x0008A6        AC18006F                 rMAC = rMAC + r6 * r4 (SS);
0x0008A7        BC14006F                 rMAC = rMAC - r2 * r4 (SS);
0x0008A8        510A001B                 I0 = r8 + 27;
0x0008A9        FD0000FF 19105C9F        M[$M.cmpd100.analysis.inst_gain] = rMAC + Null;
0x0008AB        01300005                 r1 = Null + 5;
0x0008AC        19302C9F                 M[$M.cmpd100.analysis.region] = r1 + Null;
0x0008AD        DDF0002F                 jump $M.cmpd100.analysis.done_comparison;

 <$M.cmpd100.analysis.CompressComparison>
0x0008AE        2024006F                 r0 = r2 - r4;
0x0008AF        DD40000D                 if NEG jump $M.cmpd100.analysis.LinearComparison;
0x0008B0        D13A0010                 r1 = M[r8 + 16];
0x0008B1        CF236D31                 rMAC = r0 * r1 (SS), r4 = M[I3,1], r1 = M[I4,1];
0x0008B2        BF360031                 rMAC = rMAC - r1 * r4 (SS), r1 = M[I4,1];
0x0008B3        BF366F00                 rMAC = rMAC - r1 * r4 (SS), r4 = M[I3,-1];
0x0008B4        AC18006F                 rMAC = rMAC + r6 * r4 (SS);
0x0008B5        BC14006F                 rMAC = rMAC - r2 * r4 (SS);
0x0008B6        510A0019                 I0 = r8 + 25;
0x0008B7        FD0000FF 19105C9F        M[$M.cmpd100.analysis.inst_gain] = rMAC + Null;
0x0008B9        01300004                 r1 = Null + 4;
0x0008BA        19302C9F                 M[$M.cmpd100.analysis.region] = r1 + Null;
0x0008BB        DDF00021                 jump $M.cmpd100.analysis.done_comparison;

 <$M.cmpd100.analysis.LinearComparison>
0x0008BC        2024007F                 r0 = r2 - r5;
0x0008BD        DD40000C                 if NEG jump $M.cmpd100.analysis.ExpandComparison;
0x0008BE        D13A000F                 r1 = M[r8 + 15];
0x0008BF        CF236D31                 rMAC = r0 * r1 (SS), r4 = M[I3,1], r1 = M[I4,1];
0x0008C0        BF366F00                 rMAC = rMAC - r1 * r4 (SS), r4 = M[I3,-1];
0x0008C1        AC18006F                 rMAC = rMAC + r6 * r4 (SS);
0x0008C2        BC14006F                 rMAC = rMAC - r2 * r4 (SS);
0x0008C3        510A0017                 I0 = r8 + 23;
0x0008C4        FD0000FF 19105C9F        M[$M.cmpd100.analysis.inst_gain] = rMAC + Null;
0x0008C6        01300003                 r1 = Null + 3;
0x0008C7        19302C9F                 M[$M.cmpd100.analysis.region] = r1 + Null;
0x0008C8        DDF00014                 jump $M.cmpd100.analysis.done_comparison;

 <$M.cmpd100.analysis.ExpandComparison>
0x0008C9        2024008F                 r0 = r2 - r6;
0x0008CA        DD40000C                 if NEG jump $M.cmpd100.analysis.gain_one;
0x0008CB        D13A000E                 r1 = M[r8 + 14];
0x0008CC        03006D00                 Null = Null + Null, r4 = M[I3,1];
0x0008CD        CF236F00                 rMAC = r0 * r1 (SS), r4 = M[I3,-1];
0x0008CE        AC18006F                 rMAC = rMAC + r6 * r4 (SS);
0x0008CF        BC14006F                 rMAC = rMAC - r2 * r4 (SS);
0x0008D0        510A0015                 I0 = r8 + 21;
0x0008D1        FD0000FF 19105C9F        M[$M.cmpd100.analysis.inst_gain] = rMAC + Null;
0x0008D3        01300002                 r1 = Null + 2;
0x0008D4        19302C9F                 M[$M.cmpd100.analysis.region] = r1 + Null;
0x0008D5        DDF00007                 jump $M.cmpd100.analysis.done_comparison;

 <$M.cmpd100.analysis.gain_one>
0x0008D6        510A0017                 I0 = r8 + 23;
0x0008D7        01100000                 rMAC = Null + 0;
0x0008D8        FD0000FF 19105C9F        M[$M.cmpd100.analysis.inst_gain] = rMAC + Null;
0x0008DA        E430002F                 r1 = Null + 1;
0x0008DB        19302C9F                 M[$M.cmpd100.analysis.region] = r1 + Null;

 <$M.cmpd100.analysis.done_comparison>
0x0008DC        D16A0007                 r4 = M[r8 + 7];
0x0008DD        5040006F                 I4 = Null + r4;
0x0008DE        03004130                 Null = Null + Null, r2 = M[I0,1], r1 = M[I4,0];
0x0008DF        2021513F                 r0 = rMAC - r1, r3 = M[I0,M1];
0x0008E0        00540004                 if NEG r3 = r2 + Null;
0x0008E1        CF256C00                 rMAC = r0 * r3 (SS), r4 = M[I3,0];
0x0008E2        BC13006F                 rMAC = rMAC - r1 * r4 (SS);
0x0008E3        03000090                 Null = Null + Null, M[I4,0] = rMAC;
0x0008E4        DDF00D89                 jump $pop_rLink_and_rts;

 <$codec_copy_handler>
0x0008E5        F3D00000                 push rLink;
0x0008E6        FD0000FF 09205C64        r0 = Null + M[0xff5c64];
0x0008E8        FD0000FF 19205C90        M[$M.codec_copy_handler.initial_write_pos] = r0 + Null;
0x0008EA        E1F0FBDA                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x0008EB        09302C8A                 r1 = Null + M[$app_config.io];
0x0008EC        21030004                 Null = r1 - 4;
0x0008ED        DD100028                 if NE jump $M.codec_copy_handler.no_need_to_discard;
0x0008EE        FD0000FF 01205C62        r0 = Null + -41886;
0x0008F0        E1F00D1F                 call $cbuffer.calc_amount_data;
0x0008F1        FD0000FF 29C25C8D        r10 = r0 - M[$M.back_end.monitor_level];
0x0008F3        DD400022                 if NEG jump $M.codec_copy_handler.no_need_to_discard;
0x0008F4        FD0000FF 01205C5F        r0 = Null + -41889;
0x0008F6        E1F00D09                 call $cbuffer.calc_amount_space;
0x0008F7        21C20040                 r10 = r0 - 64;
0x0008F8        DD50001D                 if POS jump $M.codec_copy_handler.no_need_to_discard;
0x0008F9        01202C5E                 r0 = Null + 11358;
0x0008FA        E1F00D05                 call $cbuffer.calc_amount_space;
0x0008FB        21C20040                 r10 = r0 - 64;
0x0008FC        DD500019                 if POS jump $M.codec_copy_handler.no_need_to_discard;
0x0008FD        09202C8F                 r0 = Null + M[$M.codec_copy_handler.glob_counter_removeframe];
0x0008FE        E422002F                 r0 = r0 + 1;
0x0008FF        19202C8F                 M[$M.codec_copy_handler.glob_counter_removeframe] = r0 + Null;
0x000900        FD0000FF 01205C5F        r0 = Null + -41889;
0x000902        E1F00D48                 call $cbuffer.get_read_address_and_size;
0x000903        5000002F                 I0 = Null + r0;
0x000904        50C0003F                 L0 = Null + r1;
0x000905        51800080                 M0 = Null + 128;
0x000906        02002000                 Null = Null + Null, r0 = M[I0,M0];
0x000907        FD0000FF 01205C5F        r0 = Null + -41889;
0x000909        4430000F                 r1 = Null + I0;
0x00090A        E1F00D54                 call $cbuffer.set_read_address;
0x00090B        01202C5E                 r0 = Null + 11358;
0x00090C        E1F00D3E                 call $cbuffer.get_read_address_and_size;
0x00090D        5000002F                 I0 = Null + r0;
0x00090E        50C0003F                 L0 = Null + r1;
0x00090F        51800080                 M0 = Null + 128;
0x000910        02002000                 Null = Null + Null, r0 = M[I0,M0];
0x000911        01202C5E                 r0 = Null + 11358;
0x000912        4430000F                 r1 = Null + I0;
0x000913        E1F00D4B                 call $cbuffer.set_read_address;
0x000914        51C00000                 L0 = Null + 0;

 <$M.codec_copy_handler.no_need_to_discard>
0x000915        09302C8A                 r1 = Null + M[$app_config.io];
0x000916        21030007                 Null = r1 - 7;
0x000917        DD100001                 if NE jump $M.codec_copy_handler.skip_aptx_acl_sprint;

 <$M.codec_copy_handler.skip_aptx_acl_sprint>
0x000918        FD0000FF 01A040F8        r8 = Null + -48904;
0x00091A        E1F0FDFA                 call $cbops_multirate.copy;
0x00091B        09302C8A                 r1 = Null + M[$app_config.io];
0x00091C        21030007                 Null = r1 - 7;
0x00091D        DD100001                 if NE jump $M.codec_copy_handler.skip_aptx_acl_sprint1;

 <$M.codec_copy_handler.skip_aptx_acl_sprint1>
0x00091E        FD0000FF 09005C8F        Null = Null + M[$M.codec_copy_handler.packet_size_obtained];
0x000920        DD10001E                 if NE jump $M.codec_copy_handler.packet_length_obtained;
0x000921        FD0000FF 09405C62        r2 = Null + M[$M.A2DP_IN.decoder_in_cbuffer_struc];
0x000923        FD0000FF 09205C64        r0 = Null + M[0xff5c64];
0x000925        FD0000FF 29225C90        r0 = r0 - M[$M.codec_copy_handler.initial_write_pos];
0x000927        DD000017                 if EQ jump $M.codec_copy_handler.packet_length_obtained;
0x000928        00220044                 if NEG r0 = r0 + r2;
0x000929        01300000                 r1 = Null + 0;
0x00092A        01400096                 r2 = Null + 150;
0x00092B        2102012C                 Null = r0 - 300;
0x00092C        00340000                 if EQ r1 = r2 + Null;
0x00092D        21020096                 Null = r0 - 150;
0x00092E        00340000                 if EQ r1 = r2 + Null;
0x00092F        0140008A                 r2 = Null + 138;
0x000930        21020114                 Null = r0 - 276;
0x000931        00340000                 if EQ r1 = r2 + Null;
0x000932        2102008A                 Null = r0 - 138;
0x000933        00340000                 if EQ r1 = r2 + Null;
0x000934        FD0000FF 19305C8F        M[$M.codec_copy_handler.packet_size_obtained] = r1 + Null;
0x000936        DD000008                 if EQ jump $M.codec_copy_handler.packet_length_obtained;
0x000937        19302C90                 M[$M.codec_copy_handler.frame_proc_num_samples] = r1 + Null;
0x000938        19302B57                 M[0x2b57] = r1 + Null;
0x000939        FD0000FF 19305B66        M[0xff5b66] = r1 + Null;
0x00093B        19302B64                 M[0x2b64] = r1 + Null;
0x00093C        FD0000FF 19305B73        M[0xff5b73] = r1 + Null;

 <$M.codec_copy_handler.packet_length_obtained>
0x00093E        01A02BDA                 r8 = Null + 11226;
0x00093F        092014A6                 r0 = Null + M[0x14a6];
0x000940        E1F00CCF                 call $cbuffer.calc_amount_data;
0x000941        21020064                 Null = r0 - 100;
0x000942        E1A0FDD2                 if GE call $cbops_multirate.copy;
0x000943        FD0000FF 01305C32        r1 = Null + -41934;
0x000945        014003E8                 r2 = Null + 1000;
0x000946        015008E5                 r3 = Null + 2277;
0x000947        E1F00D1F                 call $timer.schedule_event_in_period;
0x000948        DDF00D25                 jump $pop_rLink_and_rts;

 <pzXqJZFVBma6sMGOix+lkZ7rgBM8EAoILrcxGtmvs10=>
0x000949        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00094A        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00094B        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00094C        E1F0FE28                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00094D        00C4000F                 r10 = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00094E        DDD00D1F                 if LE jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00094F        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000950        E1F0FE39                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000951        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000952        50C0003F                 L0 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000953        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000954        E1F0FE35                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000955        5050002F                 I5 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000956        50F0003F                 L5 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000957        F3C00000                 push r10;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000958        D12A0003                 r0 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000959        DD000007                 if EQ jump tmLZxikyfNw/WV4FXk7inxJ2umdUskYFZ3FSjy3BWXw=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00095A        E1F00CF0                 call $cbuffer.get_read_address_and_size;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00095B        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00095C        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00095D        D12A0003                 r0 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00095E        D52A000E                 M[r8 + 14] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00095F        E1F00CB0                 call $cbuffer.calc_amount_data;

 <tmLZxikyfNw/WV4FXk7inxJ2umdUskYFZ3FSjy3BWXw=>
0x000960        23C20000                 r10 = r10 - r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000961        DDD00015                 if LE jump NSMkoK7LaOguJNdzsR8HqWVrSCt3EgDZxMGgrQEAGGc=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000962        5080002F                 M0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000963        DD00000D                 if EQ jump 3a9iDRkMfaGtucCs1RlRGovX4Bcn5cdoTNbzJSeSOek=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000964        D12A0002                 r0 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000965        E1F00CEF                 call $cbuffer.is_it_enabled;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000966        DD00000A                 if EQ jump 3a9iDRkMfaGtucCs1RlRGovX4Bcn5cdoTNbzJSeSOek=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000967        4450004F                 r3 = Null + I4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000968        8A330020                 r1 = r1 XOR r1, r0 = M[I4,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000969        E5F00002                 do 7UktM53+XCTFKsu1aX0CDBguGuLvQamTcLXdtCWzeUA=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00096A        030000B1                 Null = Null + Null, M[I4,1] = r1;

 <7UktM53+XCTFKsu1aX0CDBguGuLvQamTcLXdtCWzeUA=>
0x00096B        D12A0003                 r0 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00096C        4430004F                 r1 = Null + I4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00096D        E1F00CF5                 call $cbuffer.set_write_address;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00096E        5040005F                 I4 = Null + r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00096F        DDF00009                 jump o1+f3crWRXtSP46w8KdoSDrqfii3lDpg5/RaC6fR64A=;

 <3a9iDRkMfaGtucCs1RlRGovX4Bcn5cdoTNbzJSeSOek=>
0x000970        D12A0004                 r0 = M[r8 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000971        E422002F                 r0 = r0 + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000972        00200005                 if POS r0 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000973        D52A0004                 M[r8 + 4] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000974        D50A000E                 M[r8 + 14] = Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000975        DDF00003                 jump o1+f3crWRXtSP46w8KdoSDrqfii3lDpg5/RaC6fR64A=;

 <NSMkoK7LaOguJNdzsR8HqWVrSCt3EgDZxMGgrQEAGGc=>
0x000976        D12A0005                 r0 = M[r8 + 5];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000977        D52A0004                 M[r8 + 4] = r0;

 <o1+f3crWRXtSP46w8KdoSDrqfii3lDpg5/RaC6fR64A=>
0x000978        F3C40000                 pop r10;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000979        FD000080 01B00000        r9 = Null + -8388608;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00097B        D19A0008                 r7 = M[r8 + 8];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00097C        51900001                 M1 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00097D        51800000                 M0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00097E        D13A0009                 r1 = M[r8 + 9];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00097F        CC13009F                 rMAC = r1 * r7 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000980        91910008                 r7 = rMAC ASHIFT 8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000981        D13A000A                 r1 = M[r8 + 10];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000982        2009003F                 Null = r7 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000983        00930005                 if POS r7 = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000984        D18A0007                 r6 = M[r8 + 7];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000985        D15A000D                 r3 = M[r8 + 13];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000986        97850000                 r6 = r6 * r3 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000987        FD000008 01500000        r3 = Null + 524288;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000989        D10A0004                 Null = M[r8 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00098A        00850005                 if POS r6 = r3 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00098B        D17A0006                 r5 = M[r8 + 6];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00098C        D10A000E                 Null = M[r8 + 14];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00098D        00700000                 if EQ r5 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00098E        D15A000B                 r3 = M[r8 + 11];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00098F        97850000                 r6 = r6 * r3 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000990        9467005F                 r4 = r5 * r3 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000991        511A000C                 I1 = r8 + 12;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000992        E5F0000F                 do 6gAw09C4k6dyj/tqzk+aLvHgft70B5OL/5w2Qp/MVwQ=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000993        03004131                 Null = Null + Null, r2 = M[I0,1], r1 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000994        CC13006F                 rMAC = r1 * r4 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000995        AC14008F                 rMAC = rMAC + r2 * r6 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000996        97374400                 r1 = r1 * r5 (frac), r2 = M[I1,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000997        943300B4                 if NEG r1 = r1 * r9 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000998        2004003F                 Null = r2 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000999        0043000B                 if LT r2 = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00099A        91310038                 r1 = rMAC ASHIFT 56;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00099B        91510009                 r3 = rMAC ASHIFT 9;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00099C        9653C400                 r3 = r3 * r1 (frac), M[I1,M0] = r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00099D        2005009F                 Null = r3 - r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00099E        00590005                 if POS r3 = r7 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00099F        97530000                 r3 = r3 * r1 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009A0        030000D5                 Null = Null + Null, M[I5,1] = r3;

 <6gAw09C4k6dyj/tqzk+aLvHgft70B5OL/5w2Qp/MVwQ=>
0x0009A1        51C00000                 L0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009A2        51E00000                 L4 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009A3        51F00000                 L5 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009A4        4430004F                 r1 = Null + I4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009A5        D12A000E                 r0 = M[r8 + 14];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009A6        E1100CB8                 if NE call $cbuffer.set_read_address;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009A7        DDF00CC6                 jump $pop_rLink_and_rts;

 <sNIvxj9SFAEGViHTBQKozUKmFmVOXHQpUiflDIh62Xk=>
0x0009A8        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009A9        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009AA        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009AB        E1F0FDC9                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009AC        00C4000F                 r10 = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009AD        DDD00CC0                 if LE jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009AE        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009AF        E1F0FDDA                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009B0        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009B1        50C0003F                 L0 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009B2        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009B3        E1F0FDD6                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009B4        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009B5        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009B6        FD0000FF 09405CA2        r2 = Null + M[8YKUUc+Da6haybqV0Qg2St0QqVTDzri9nt9RiVrAhLU=];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009B8        D15A0003                 r3 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009B9        FD00007F 0170FFFF        r5 = Null + 8388607;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009BB        FD0000FF D1255C68        r0 = M[r3 + -41880];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009BD        D19A0002                 r7 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009BE        6589FFE8                 r6 = -24 - r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009BF        9087008F                 r6 = r5 ASHIFT r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009C0        51900011                 M1 = Null + 17;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009C1        01603555                 r4 = Null + 13653;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009C2        DC02000F                 jump r0;

 <++YjSQ8MROXvmdKCAItjONRuirjM/JPFQj6LN38nIEE=>
0x0009C3        E4CC003F                 r10 = r10 - 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009C4        03002100                 Null = Null + Null, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009C5        93290000                 r0 = r0 ASHIFT r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009C6        E5F00003                 do tTxTv6PpUTaS/L4NcUe50ujH8FQXm62XAfwbFnaU0kk=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009C7        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009C8        93290000                 r0 = r0 ASHIFT r7;

 <tTxTv6PpUTaS/L4NcUe50ujH8FQXm62XAfwbFnaU0kk=>
0x0009C9        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009CA        DDF00030                 jump hxpGsLY8ozjQV6z2fFKtkCwp53KzkECNBjsA4QwbAF0=;

 <Q+O2lD+Tlv3wpJmgoIZATH6LFycfoFh6foORPJR9NZA=>
0x0009CB        FD0000FF 51504030        I5 = Null + -49104;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009CD        03001100                 Null = Null + Null, rMAC = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009CE        AC14008F                 rMAC = rMAC + r2 * r6 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009CF        E5F00009                 do aiZS9OA8e/3c1U6AosVubN1vtN5G+a5TCZ61Yjpg66Q=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009D0        9B460000                 r2 = r2 * r4 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009D1        47490000                 r2 = r2 + M1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009D2        AC14008F                 rMAC = rMAC + r2 * r6 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009D3        AC17008F                 rMAC = rMAC + r5 * r6 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009D4        9B460094                 r2 = r2 * r4 (int), M[I5,0] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009D5        47490034                 r2 = r2 + M1, r1 = M[I5,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009D6        93391100                 r1 = r1 ASHIFT r7, rMAC = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009D7        AF4800B1                 rMAC = rMAC + r2 * r6 (SS), M[I4,1] = r1;

 <aiZS9OA8e/3c1U6AosVubN1vtN5G+a5TCZ61Yjpg66Q=>
0x0009D8        03001300                 Null = Null + Null, rMAC = M[I0,-1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009D9        DDF00021                 jump hxpGsLY8ozjQV6z2fFKtkCwp53KzkECNBjsA4QwbAF0=;

 <EaHC53htQIRVoPHfF67XGWS3DGbkGO+p4R3OM8e/wv0=>
0x0009DA        51D00005                 L1 = Null + 5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009DB        D12A0004                 r0 = M[r8 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009DC        5010002F                 I1 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009DD        FD0000FF 5150402A        I5 = Null + -49110;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009DF        5180FFFA                 M0 = Null + -6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009E0        FD0000FF 19804030        M[0xff4030] = r6 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009E2        95886000                 r6 = r6 * 0.75 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009E3        E450003F                 r3 = Null - 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009E4        2020009F                 r0 = Null - r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009E5        93523400                 r3 = r3 ASHIFT r0, r1 = M[I1,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009E6        E5F00011                 do Do8x0Pu+HfWHFbtEk7JcWWCwNfxxws9KWqSPlOFXbx4=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009E7        9B461125                 r2 = r2 * r4 (int), rMAC = M[I0,1], r0 = M[I5,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009E8        4749B700                 r2 = r2 + M1, M[I1,-1] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009E9        BF323725                 rMAC = rMAC - r1 * r0 (SS), r1 = M[I1,-1], r0 = M[I5,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009EA        BF323725                 rMAC = rMAC - r1 * r0 (SS), r1 = M[I1,-1], r0 = M[I5,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009EB        BF323725                 rMAC = rMAC - r1 * r0 (SS), r1 = M[I1,-1], r0 = M[I5,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009EC        BF323425                 rMAC = rMAC - r1 * r0 (SS), r1 = M[I1,0], r0 = M[I5,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009ED        BC13002F                 rMAC = rMAC - r1 * r0 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009EE        AF480094                 rMAC = rMAC + r2 * r6 (SS), M[I5,0] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009EF        9B460025                 r2 = r2 * r4 (int), r0 = M[I5,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009F0        47490000                 r2 = r2 + M1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009F1        AE480034                 rMAC = rMAC + r2 * r6 (SS), r1 = M[I5,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009F2        AC17003F                 rMAC = rMAC + r5 * r1 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009F3        8031005F                 r1 = rMAC AND r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009F4        90E3009F                 rMAC = r1 ASHIFT r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009F5        23320091                 r1 = r1 - r0, M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009F6        9D330004                 r1 = r1 * 4 (int) (sat);

 <Do8x0Pu+HfWHFbtEk7JcWWCwNfxxws9KWqSPlOFXbx4=>
0x0009F7        7FDDB400                 L1 = L1 - L1, M[I1,0] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009F8        4420001F                 r0 = Null + I1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009F9        D52A0004                 M[r8 + 4] = r0;

 <hxpGsLY8ozjQV6z2fFKtkCwp53KzkECNBjsA4QwbAF0=>
0x0009FA        51C00000                 L0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009FB        51E00000                 L4 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009FC        FD0000FF 19405CA2        M[8YKUUc+Da6haybqV0Qg2St0QqVTDzri9nt9RiVrAhLU=] = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0009FE        DDF00C6F                 jump $pop_rLink_and_rts;

 <$FrontEndStart>
0x0009FF        F3D00000                 push rLink;
0x000A00        013021FC                 r1 = Null + 8700;
0x000A01        014002EE                 r2 = Null + 750;
0x000A02        0150115F                 r3 = Null + 4447;
0x000A03        E1F00C66                 call $timer.schedule_event_in;
0x000A04        DDF00C69                 jump $pop_rLink_and_rts;

 <$ConfigureFrontEnd>
0x000A05        F3D00000                 push rLink;
0x000A06        FD0000FF 19005C80        M[$M.dac_out.dac_sr_flag] = Null + Null;
0x000A08        FD0000FF 19005C8C        M[$M.A2DP_IN.codec_sr_flag] = Null + Null;
0x000A0A        FD000000 0130BB80        r1 = Null + 48000;
0x000A0C        29032C80                 Null = r1 - M[$M.dac_out.current_dac_sampling_rate];
0x000A0D        DD100019                 if NE jump $M.FrontEndConfigure.check_dac_chain_44k;
0x000A0E        FD000000 0150AC44        r3 = Null + 44100;
0x000A10        FD0000FF 29055C8B        Null = r3 - M[$M.set_codec_rate.current_codec_sampling_rate];
0x000A12        DD10000A                 if NE jump $M.FrontEndConfigure.set_dac_chain_48k;
0x000A13        FD0000FF 01204DC0        r0 = Null + -45632;
0x000A15        FD0000FF 01A05956        r8 = Null + -42666;
0x000A17        E1F00BE0                 call $iir_resamplev2.SetFilter;
0x000A18        FD0000FF 01204DC0        r0 = Null + -45632;
0x000A1A        01A02978                 r8 = Null + 10616;
0x000A1B        E1F00BDC                 call $iir_resamplev2.SetFilter;

 <$M.FrontEndConfigure.set_dac_chain_48k>
0x000A1C        FD0000FF 0120592B        r0 = Null + -42709;
0x000A1E        01A0292B                 r8 = Null + 10539;
0x000A1F        E1F00BD8                 call $iir_resamplev2.SetFilter;
0x000A20        FD0000FF 012051D3        r0 = Null + -44589;
0x000A22        FD0000FF 01A059A3        r8 = Null + -42589;
0x000A24        E1F00BD3                 call $iir_resamplev2.SetFilter;
0x000A25        DDF00018                 jump $M.FrontEndConfigure.set_max_advance_fields;

 <$M.FrontEndConfigure.check_dac_chain_44k>
0x000A26        FD000000 0160BB80        r4 = Null + 48000;
0x000A28        FD0000FF 29065C8B        Null = r4 - M[$M.set_codec_rate.current_codec_sampling_rate];
0x000A2A        DD10000A                 if NE jump $M.FrontEndConfigure.set_dac_chain_44k;
0x000A2B        FD0000FF 01204FB8        r0 = Null + -45128;
0x000A2D        FD0000FF 01A05956        r8 = Null + -42666;
0x000A2F        E1F00BC8                 call $iir_resamplev2.SetFilter;
0x000A30        FD0000FF 01204FB8        r0 = Null + -45128;
0x000A32        01A02978                 r8 = Null + 10616;
0x000A33        E1F00BC4                 call $iir_resamplev2.SetFilter;

 <$M.FrontEndConfigure.set_dac_chain_44k>
0x000A34        FD0000FF 012051A9        r0 = Null + -44631;
0x000A36        01A0292B                 r8 = Null + 10539;
0x000A37        E1F00BC0                 call $iir_resamplev2.SetFilter;
0x000A38        FD0000FF 012043C0        r0 = Null + -48192;
0x000A3A        FD0000FF 01A059A3        r8 = Null + -42589;
0x000A3C        E1F00BBB                 call $iir_resamplev2.SetFilter;

 <$M.FrontEndConfigure.set_max_advance_fields>
0x000A3D        09302C80                 r1 = Null + M[$M.dac_out.current_dac_sampling_rate];
0x000A3E        FD000000 95431893        r2 = r1 * 0.00074994564056396484 (frac);
0x000A40        E444002F                 r2 = r2 + 1;
0x000A41        19401FFE                 M[0x1ffe] = r2 + Null;
0x000A42        FD0000FF 19405BFE        M[0xff5bfe] = r2 + Null;
0x000A44        19402BFA                 M[0x2bfa] = r2 + Null;
0x000A45        E1F01AD4                 call $calc_sra_resampling_adjustment;
0x000A46        DDF00C27                 jump $pop_rLink_and_rts;

 <$cmpd100.applygain>
0x000A47        D12A0000                 r0 = M[r8 + 0];
0x000A48        D13A0001                 r1 = M[r8 + 1];
0x000A49        83320000                 r1 = r1 AND r0;
0x000A4A        DC0D0001                 if NE rts;
0x000A4B        F3D00000                 push rLink;
0x000A4C        D12A0002                 r0 = M[r8 + 2];
0x000A4D        E1F00C0C                 call $frmbuffer.get_buffer;
0x000A4E        5000002F                 I0 = Null + r0;
0x000A4F        50C0003F                 L0 = Null + r1;
0x000A50        D12A0003                 r0 = M[r8 + 3];
0x000A51        E1F00C08                 call $frmbuffer.get_buffer;
0x000A52        5040002F                 I4 = Null + r0;
0x000A53        50E0003F                 L4 = Null + r1;
0x000A54        00C5000F                 r10 = r3 + Null;
0x000A55        D12A0004                 r0 = M[r8 + 4];
0x000A56        E1F00C15                 call $frmbuffer.set_frame_size;
0x000A57        E1F00C02                 call $frmbuffer.get_buffer;
0x000A58        5010002F                 I1 = Null + r0;
0x000A59        50D0003F                 L1 = Null + r1;
0x000A5A        D12A0005                 r0 = M[r8 + 5];
0x000A5B        005C000F                 r3 = r10 + Null;
0x000A5C        E1F00C0F                 call $frmbuffer.set_frame_size;
0x000A5D        E1F00BFC                 call $frmbuffer.get_buffer;
0x000A5E        5050002F                 I5 = Null + r0;
0x000A5F        50F0003F                 L5 = Null + r1;
0x000A60        D14A0006                 r2 = M[r8 + 6];
0x000A61        D15A0007                 r3 = M[r8 + 7];
0x000A62        D025000F                 r0 = M[r3 + Null];
0x000A63        91220004                 r0 = r0 ASHIFT 4;
0x000A64        FD000003 21220000        r0 = r0 - 196608;
0x000A66        E1F00AED                 call $math.pow2_table;
0x000A67        19202CA0                 M[$M.cmpd100.applygain.lin_gain] = r0 + Null;
0x000A68        FD0000FF 09505CA0        r3 = Null + M[$M.cmpd100.applygain.old_lin_gain];
0x000A6A        2052005F                 r3 = r0 - r3;
0x000A6B        9155007C                 r3 = r3 ASHIFT -4;
0x000A6C        21CC0010                 r10 = r10 - 16;
0x000A6D        19C02CA1                 M[$M.cmpd100.applygain.remaninder_samples] = r10 + Null;
0x000A6E        01C00010                 r10 = Null + 16;
0x000A6F        00B5000F                 r9 = r3 + Null;
0x000A70        E5F0000C                 do $M.cmpd100.applygain.loop_ramped_gain_copy_data;
0x000A71        FD0000FF 09205CA0        r0 = Null + M[$M.cmpd100.applygain.old_lin_gain];
0x000A73        032B0000                 r0 = r0 + r9;
0x000A74        9462004F                 r4 = r0 * r2 (frac);
0x000A75        03B50000                 r9 = r9 + r3;
0x000A76        03002131                 Null = Null + Null, r0 = M[I0,1], r1 = M[I4,1];
0x000A77        CC12006F                 rMAC = r0 * r4 (SS);
0x000A78        91210007                 r0 = rMAC ASHIFT 7;
0x000A79        9413006F                 rMAC = r1 * r4 (frac);
0x000A7A        91310007                 r1 = rMAC ASHIFT 7;
0x000A7B        0300A5B5                 Null = Null + Null, M[I1,1] = r0, M[I5,1] = r1;

 <$M.cmpd100.applygain.loop_ramped_gain_copy_data>
0x000A7C        09C02CA1                 r10 = Null + M[$M.cmpd100.applygain.remaninder_samples];
0x000A7D        09202CA0                 r0 = Null + M[$M.cmpd100.applygain.lin_gain];
0x000A7E        FD0000FF 19205CA0        M[$M.cmpd100.applygain.old_lin_gain] = r0 + Null;
0x000A80        9462004F                 r4 = r0 * r2 (frac);
0x000A81        E5F00007                 do $M.cmpd100.applygain.loop_copy_data;
0x000A82        03002131                 Null = Null + Null, r0 = M[I0,1], r1 = M[I4,1];
0x000A83        CC12006F                 rMAC = r0 * r4 (SS);
0x000A84        91210007                 r0 = rMAC ASHIFT 7;
0x000A85        9413006F                 rMAC = r1 * r4 (frac);
0x000A86        91310007                 r1 = rMAC ASHIFT 7;
0x000A87        0300A5B5                 Null = Null + Null, M[I1,1] = r0, M[I5,1] = r1;

 <$M.cmpd100.applygain.loop_copy_data>
0x000A88        51C00000                 L0 = Null + 0;
0x000A89        51D00000                 L1 = Null + 0;
0x000A8A        51E00000                 L4 = Null + 0;
0x000A8B        51F00000                 L5 = Null + 0;
0x000A8C        DDF00BE1                 jump $pop_rLink_and_rts;

 <$iir_2ndStage_downsample>
0x000A8D        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A8E        5F380000                 I3 = I3 + M0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A8F        22993C00                 r7 = r7 - r7, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A90        F3E20000                 push FP;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A91        F3A60000                 pop B0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A92        F107000A                 FP = FP + 10;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A93        F3E20000                 push FP;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A94        F3C60000                 pop B4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A95        F007003F                 FP = FP + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A96        50E06C3F                 L4 = Null + r1, r4 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A97        50903C6F                 M1 = Null + r4, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A98        00833C4F                 r6 = r1 + r2, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A99        00A33C7F                 r8 = r1 + r5, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A9A        5060003F                 I6 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A9B        F3210000                 push I2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A9C        70A0386F                 M2 = Null - r4, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A9D        9946000A                 r2 = r4 * 10 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A9E        74B4588F                 M3 = r2 - M0, r3 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000A9F        5FB60000                 M3 = M3 + I6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA0        5EB62800                 M3 = M3 + I6, r0 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA1        5000282F                 I0 = Null + r0, r0 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA2        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA3        51C0000A                 L0 = Null + 10;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA4        20057C6F                 Null = r3 - r4, r5 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA5        2055005A                 if GE r3 = r3 - r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA6        98452C7F                 r2 = r3 * r5 (int), r0 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA7        004400B4                 if NEG r2 = r2 + r9;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA8        20077C4F                 Null = r5 - r2, r5 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AA9        4422008C                 if GT r0 = r0 + M0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AAA        0003000F                 Null = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AAB        00230001                 if NE r0 = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AAC        23C20000                 r10 = r10 - r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AAD        DD40001E                 if NEG jump HTHskKeWPaGdXRzYrq3iIqQf4fPRr0B5yx2rn35dhr4=;

 <ghsNjkRDqzZAjhs6wsBrsDxC1LIE0y8yWVfrrGLvaFU=>
0x000AAE        9434006F                 r1 = r2 * r4 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AAF        5876003F                 I7 = I6 + r1;

 <295WJ5r+HyQKvR4l6WADsM7MI8FJRMTSY3By70vrw6o=>
0x000AB0        5823140F                 I2 = I3 + Null, rMAC = M[I1,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AB1        E007000F                 call r5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AB2        66289090                 r0 = r0 - M0, M[I0,M0] = rMAC, M[I4,M0] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AB3        DD10FFFD                 if NE jump 295WJ5r+HyQKvR4l6WADsM7MI8FJRMTSY3By70vrw6o=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AB4        4658403D                 r3 = r3 + M0, r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AB5        CE34403D                 rMAC = r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AB6        AE34403D                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AB7        AE34403D                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AB8        AE34403D                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AB9        7C7B007F                 I7 = M3 - I7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ABA        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ABB        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ABC        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ABD        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ABE        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ABF        AC13004F                 rMAC = rMAC + r1 * r2 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC0        903100AF                 r1 = rMAC ASHIFT r8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC1        469800B4                 r7 = r7 + M0, M[I5,M0] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC2        79330003                 I3 = I3 - 3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC3        20057C6F                 Null = r3 - r4, r5 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC4        2055005A                 if GE r3 = r3 - r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC5        98452C7F                 r2 = r3 * r5 (int), r0 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC6        004400B4                 if NEG r2 = r2 + r9;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC7        20077C4F                 Null = r5 - r2, r5 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC8        4422008C                 if GT r0 = r0 + M0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AC9        23C20000                 r10 = r10 - r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ACA        DD50FFE4                 if POS jump ghsNjkRDqzZAjhs6wsBrsDxC1LIE0y8yWVfrrGLvaFU=;

 <HTHskKeWPaGdXRzYrq3iIqQf4fPRr0B5yx2rn35dhr4=>
0x000ACB        006200CF                 r4 = r0 + r10;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ACC        DD000007                 if EQ jump hVeIEBIvbzTJWeKILQMzzJUMyqVVXjL3XwKoTNFEW9E=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ACD        0026000F                 r0 = r4 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000ACE        206000CF                 r4 = Null - r10;

 <PcVB6enlM5FEYJVpla4pl2CovyUb3fTmkwhz8JODeYM=>
0x000ACF        5823140F                 I2 = I3 + Null, rMAC = M[I1,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AD0        E007000F                 call r5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AD1        66289090                 r0 = r0 - M0, M[I0,M0] = rMAC, M[I4,M0] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AD2        DD10FFFD                 if NE jump PcVB6enlM5FEYJVpla4pl2CovyUb3fTmkwhz8JODeYM=;

 <hVeIEBIvbzTJWeKILQMzzJUMyqVVXjL3XwKoTNFEW9E=>
0x000AD3        5832000F                 I3 = I2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AD4        F3250000                 pop I2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AD5        50C0E80F                 L0 = Null + Null, M[I2,M0] = r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AD6        4420D80F                 r0 = Null + I0, M[I2,M0] = r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AD7        4420A84F                 r0 = Null + I4, M[I2,M0] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AD8        50E0A80F                 L4 = Null + Null, M[I2,M0] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000AD9        DDF00B94                 jump $pop_rLink_and_rts;
...

 <Wwabr1t1VhM8w+gGtH/9IY2nSybItLZEHnfbFJzpL2k=>
0x000B27        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B28        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B29        E1F0FC51                 call $cbops_multirate.GetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B2A        00C2000F                 r10 = r0 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B2B        DDD00B42                 if LE jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B2C        01500000                 r3 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B2D        D10A0003                 Null = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B2E        DD000003                 if EQ jump UgsAN1Z4dxF34V0S5KddDm84xjHvZzgDBc3mQ9bjgc4=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B2F        01500002                 r3 = Null + 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B30        8DCC007F                 r10 = r10 LSHIFT -1;

 <UgsAN1Z4dxF34V0S5KddDm84xjHvZzgDBc3mQ9bjgc4=>
0x000B31        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B32        E1F0FC57                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B33        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B34        50C0003F                 L0 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B35        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B36        E1F0FC53                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B37        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B38        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B39        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B3A        003C000F                 r1 = r10 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B3B        E1F0FC43                 call $cbops_multirate.SetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B3C        D12A0002                 r0 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B3D        DD400008                 if NEG jump sdLQ2Z3nbeHwt8617hEaRvRf3KnWXU2rMRkNt1XOFxY=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B3E        85550001                 r3 = r3 OR 0x1;

 <vRzGQ0KAFFKDdhXh7ivbHa5u6oudyg3hw/A51SdR/FI=>
0x000B3F        E1F0FC4A                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B40        5050002F                 I5 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B41        50F0003F                 L5 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B42        D12A0002                 r0 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B43        003C000F                 r1 = r10 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B44        E1F0FC3A                 call $cbops_multirate.SetTransferAmount;

 <sdLQ2Z3nbeHwt8617hEaRvRf3KnWXU2rMRkNt1XOFxY=>
0x000B45        FD0000FF D1255C46        r0 = M[r3 + -41914];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B47        E4CC003F                 r10 = r10 - 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B48        DC02000F                 jump r0;

 <5BfUgg4ajyHlRsXQKc5B5aGci5sCyZIcQ8OZUq67H2A=>
0x000B49        03002100                 Null = Null + Null, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B4A        E5F00002                 do x8g1uJvT1lEnu+dUefutLzSMqo+FkgtIFBJpzMdrZKs=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B4B        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <x8g1uJvT1lEnu+dUefutLzSMqo+FkgtIFBJpzMdrZKs=>
0x000B4C        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B4D        DDF00019                 jump iZfRonfMdGGxUqo5+hzggOJTWdDU0QeuftgBgM7Tpg4=;

 <gXF5RdSrrIK84MH9IUZSavrZhj9tVivyIkXGuIutvic=>
0x000B4E        03002100                 Null = Null + Null, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B4F        E5F00003                 do 2uD5XuD3CksFPklfdeUMD0L8QWKrfzLhWmyrBs0iGGI=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B50        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B51        030021A5                 Null = Null + Null, r0 = M[I0,1], M[I5,1] = r0;

 <2uD5XuD3CksFPklfdeUMD0L8QWKrfzLhWmyrBs0iGGI=>
0x000B52        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B53        030000A5                 Null = Null + Null, M[I5,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B54        DDF00012                 jump iZfRonfMdGGxUqo5+hzggOJTWdDU0QeuftgBgM7Tpg4=;

 <810sotORbHy81vHojkP+p3N0kYhZJa8hbQU/nO8IKkM=>
0x000B55        FD000040 01400000        r2 = Null + 4194304;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B57        03002100                 Null = Null + Null, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B58        CC12004F                 rMAC = r0 * r2 (SS);
0x000B59        03003100                 Null = Null + Null, r1 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B5A        E5F00003                 do qM8wbsqwE3ozTt/D11Piy0qCALbvIKVNz9HndN7YgTo=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B5B        AF342100                 rMAC = rMAC + r1 * r2 (SS), r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B5C        CF243191                 rMAC = r0 * r2 (SS), r1 = M[I0,1], M[I4,1] = rMAC;

 <qM8wbsqwE3ozTt/D11Piy0qCALbvIKVNz9HndN7YgTo=>
0x000B5D        AC13004F                 rMAC = rMAC + r1 * r2 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B5E        03000091                 Null = Null + Null, M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B5F        DDF00007                 jump iZfRonfMdGGxUqo5+hzggOJTWdDU0QeuftgBgM7Tpg4=;

 <qRs4YpOxxz1yc8i89VjCDQLba+P6Xe6xL1NY7jPF4xA=>
0x000B60        03002100                 Null = Null + Null, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B61        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B62        E5F00003                 do oYNg4bjcL0U/Hc29rRs8LvGAOudVWORITocYCE+UcOg=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B63        030021A5                 Null = Null + Null, r0 = M[I0,1], M[I5,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B64        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <oYNg4bjcL0U/Hc29rRs8LvGAOudVWORITocYCE+UcOg=>
0x000B65        030000A5                 Null = Null + Null, M[I5,1] = r0;

 <iZfRonfMdGGxUqo5+hzggOJTWdDU0QeuftgBgM7Tpg4=>
0x000B66        51C00000                 L0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B67        51E00000                 L4 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B68        51F00000                 L5 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B69        DDF00B04                 jump $pop_rLink_and_rts;

 <9mRiPKxBq4gppjt2WkqWS9xVQeOVWbUmdic4zsfu0Tw=>
0x000B6A        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B6B        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B6C        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B6D        E1F0FC07                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B6E        00C4000F                 r10 = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B6F        DDD00AFE                 if LE jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B70        F3E20000                 push FP;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B71        51800001                 M0 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B72        FD00007F 01B0FFFF        r9 = Null + 8388607;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B74        500000AF                 I0 = Null + r8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B75        F3900000                 push r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B76        F2A02000                 push r8, r0 = M[I0,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B77        E1F0FC12                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B78        5010202F                 I1 = Null + r0, r0 = M[I0,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B79        50D0603F                 L1 = Null + r1, r4 = M[I0,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B7A        E1F0FC0F                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B7B        5050402F                 I5 = Null + r0, r2 = M[I0,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B7C        50F0703F                 L5 = Null + r1, r5 = M[I0,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B7D        0056000F                 r3 = r4 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B7E        DD000027                 if EQ jump 4yV3uijqc11+jjWeEP0DDB4sxdtKMpYpH/pKJdJtfcY=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B7F        016A0010                 r4 = r8 + 16;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B80        F3600000                 push r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B81        F3E60000                 pop FP;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B82        512A000B                 I2 = r8 + 11;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B83        51350005                 I3 = r3 + 5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B84        D1950004                 r7 = M[r3 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B85        DD00000F                 if EQ jump Xj6ciRFvvpUedZ8dgc3rwhyMyZfeUtfk8UgRJSZDN7g=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B86        D12A0005                 r0 = M[r8 + 5];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B87        F1000084                 pushm <r0, r5>;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B88        F1018020                 pushm <I5, L5>;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B89        5050002F                 I5 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B8A        50F0000F                 L5 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B8B        0070000F                 r5 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B8C        512A0007                 I2 = r8 + 7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B8D        E009000F                 call r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B8E        50D0000F                 L1 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B8F        00C9000F                 r10 = r7 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B90        0040000F                 r2 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B91        F1058020                 popm <I5, L5>;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B92        F1040084                 popm <r0, r5>;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B93        5010002F                 I1 = Null + r0;

 <Xj6ciRFvvpUedZ8dgc3rwhyMyZfeUtfk8UgRJSZDN7g=>
0x000B94        02002C00                 Null = Null + Null, r0 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B95        03000000                 Null = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B96        E002000F                 call r0;

 <NJqz6wL2yWOFPAfeMoY5Nh+hwV+sk5JqZmalf9ahQR0=>
0x000B97        F3A40000                 pop r8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B98        0039000F                 r1 = r7 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B99        F3940000                 pop r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B9A        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B9B        E1F0FBE3                 call $cbops_multirate.SetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B9C        50D0000F                 L1 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B9D        50F0000F                 L5 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B9E        F3000000                 push Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000B9F        F1AAFFFF                 B0 = M[SP + -0x1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BA0        F1BAFFFF                 B1 = M[SP + -0x1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BA1        F1CAFFFF                 B4 = M[SP + -0x1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BA2        F3D60000                 pop B5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BA3        F3E60000                 pop FP;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BA4        DDF00AC9                 jump $pop_rLink_and_rts;

 <4yV3uijqc11+jjWeEP0DDB4sxdtKMpYpH/pKJdJtfcY=>
0x000BA5        009C000F                 r7 = r10 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BA6        03470000                 r2 = r2 + r5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BA7        66C81400                 r10 = r10 - M0, rMAC = M[I1,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BA8        93E40000                 rMAC = rMAC ASHIFT r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BA9        E5F00003                 do VyGf+0vOPkjDHU/b2Q6RO9g+Q+IeGMgDr/RIYvtWYn8=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BAA        02001494                 Null = Null + Null, rMAC = M[I1,M0], M[I5,M0] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BAB        93E40000                 rMAC = rMAC ASHIFT r2;

 <VyGf+0vOPkjDHU/b2Q6RO9g+Q+IeGMgDr/RIYvtWYn8=>
0x000BAC        02000094                 Null = Null + Null, M[I5,M0] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BAD        DDF0FFEA                 jump NJqz6wL2yWOFPAfeMoY5Nh+hwV+sk5JqZmalf9ahQR0=;

 <I78pLXau1tEZJsNkVu1GiEGf8DCMpHGNLHacplACtNY=>
0x000BAE        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BAF        D10A0005                 Null = M[r8 + 5];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB0        DD00003B                 if EQ jump 5w1KVIvzMbj5OQtOGr5vBj8SNht2PsTR9yi0YJtMp9E=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB1        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB2        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB3        E1F0FBC1                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB4        00C4000F                 r10 = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB5        DDD00AB8                 if LE jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB6        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB7        E1F0FBD2                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB8        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BB9        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BBA        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BBB        E1F0FBCE                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BBC        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BBD        50C0003F                 L0 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BBE        D10A0004                 Null = M[r8 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BBF        DD00000A                 if EQ jump cwR4yklsDDTNvfDiBTFCq9GBe0cIm2W43yjTJKrwNpk=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BC0        F1011001                 pushm <I0, L0>;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BC1        F1003400                 pushm <r8, r10, rLink>;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BC2        019A000B                 r7 = r8 + 11;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BC3        006C000F                 r4 = r10 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BC4        E1F00271                 call $audio_proc.peq.process_op;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BC5        F1043400                 popm <r8, r10, rLink>;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BC6        F1051001                 popm <I0, L0>;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BC7        5840000F                 I4 = I0 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BC8        58EC000F                 L4 = L0 + Null;

 <cwR4yklsDDTNvfDiBTFCq9GBe0cIm2W43yjTJKrwNpk=>
0x000BC9        D19A0003                 r7 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BCA        D1490005                 r2 = M[r7 + 5];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BCB        D1590006                 r3 = M[r7 + 6];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BCC        D12A0008                 r0 = M[r8 + 8];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BCD        D072000F                 r5 = M[r0 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BCE        D1390001                 r1 = M[r7 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BCF        2007003F                 Null = r5 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD0        0073000C                 if GT r5 = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD1        CC15007F                 rMAC = r3 * r5 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD2        0031000F                 r1 = rMAC + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD3        93340000                 r1 = r1 ASHIFT r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD4        D53A0009                 M[r8 + 9] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD5        D831000F                 r1 = SIGNDET rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD6        21730008                 r5 = r1 - 8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD7        9051003F                 r3 = rMAC ASHIFT r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD8        2084007F                 r6 = r2 - r5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BD9        D1790000                 r5 = M[r7 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BDA        511A000A                 I1 = r8 + 10;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BDB        51800000                 M0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BDC        03000021                 Null = Null + Null, r0 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BDD        E5F0000B                 do x01GTo9jX2T49lBJeTekvXuaij0VhsYNVEajNLSHfBc=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BDE        CF250021                 rMAC = r0 * r3 (SS), r0 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BDF        9031008F                 r1 = rMAC ASHIFT r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BE0        91610038                 r4 = rMAC ASHIFT 56;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BE1        96364400                 r1 = r1 * r4 (frac), r2 = M[I1,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BE2        2003007F                 Null = r1 - r5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BE3        00370005                 if POS r1 = r5 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BE4        2004003F                 Null = r2 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BE5        0043000B                 if LT r2 = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BE6        9636C400                 r1 = r1 * r4 (frac), M[I1,M0] = r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BE7        0300B100                 Null = Null + Null, M[I0,1] = r1;

 <x01GTo9jX2T49lBJeTekvXuaij0VhsYNVEajNLSHfBc=>
0x000BE8        51C00000                 L0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BE9        51E00000                 L4 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BEA        DDF00A83                 jump $pop_rLink_and_rts;

 <5w1KVIvzMbj5OQtOGr5vBj8SNht2PsTR9yi0YJtMp9E=>
0x000BEB        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BEC        01300000                 r1 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BED        E1F0FB91                 call $cbops_multirate.SetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000BEE        DDF00A7F                 jump $pop_rLink_and_rts;

 <$audio_proc.hq_peq.process>
0x000BEF        F3D00000                 push rLink;
0x000BF0        D1290000                 r0 = M[r7 + 0];
0x000BF1        E1F00A68                 call $frmbuffer.get_buffer;
0x000BF2        5040002F                 I4 = Null + r0;
0x000BF3        50E0003F                 L4 = Null + r1;
0x000BF4        0065000F                 r4 = r3 + Null;
0x000BF5        D1290001                 r0 = M[r7 + 1];
0x000BF6        E1F00A75                 call $frmbuffer.set_frame_size;
0x000BF7        E1F00A62                 call $frmbuffer.get_buffer;
0x000BF8        5000002F                 I0 = Null + r0;
0x000BF9        50C0003F                 L0 = Null + r1;
0x000BFA        F3D40000                 pop rLink;

 <$audio_proc.hq_peq.process_op>
0x000BFB        51900001                 M1 = Null + 1;
0x000BFC        51390003                 I3 = r7 + 3;
0x000BFD        5180FFFF                 M0 = Null + -1;
0x000BFE        00C02D0F                 r10 = Null + Null, r0 = M[I3,M1];
0x000BFF        54222D9F                 I2 = r0 + M1, r0 = M[I3,M1];
0x000C00        F3200000                 push r0;
0x000C01        F3D60000                 pop B5;
0x000C02        50502D2F                 I5 = Null + r0, r0 = M[I3,M1];
0x000C03        F3200000                 push r0;
0x000C04        F3B60000                 pop B1;
0x000C05        50103D2F                 I1 = Null + r0, r1 = M[I3,M1];
0x000C06        50A03D3F                 M2 = Null + r1, r1 = M[I3,M1];
0x000C07        50F03D3F                 L5 = Null + r1, r1 = M[I3,M1];
0x000C08        50D0393F                 L1 = Null + r1, r1 = M[I2,M1];
0x000C09        02007900                 Null = Null + Null, r5 = M[I2,M1];
0x000C0A        E483003F                 r6 = r1 - 1;
0x000C0B        D1490002                 r2 = M[r7 + 2];
0x000C0C        99440005                 r2 = r2 * 5 (int);
0x000C0D        5B240000                 I2 = I2 + r2;
0x000C0E        5F2A0000                 I2 = I2 + M2;
0x000C0F        74A000AF                 M2 = Null - M2;

 <$M.audio_proc.hq_peq.process.hq_peq_block_loop>
0x000C10        F3600000                 push r4;
0x000C11        66CA0021                 r10 = r10 - M2, r0 = M[I4,M1];
0x000C12        CC122A7F                 rMAC = r0 * r5 (SS), r0 = M[I2,M2];
0x000C13        9021008F                 r0 = rMAC ASHIFT r6;
0x000C14        51B00003                 M3 = Null + 3;
0x000C15        03000045                 Null = Null + Null, r2 = M[I5,1];
0x000C16        03000035                 Null = Null + Null, r1 = M[I5,1];
0x000C17        E5F0000C                 do $M.audio_proc.hq_peq.process.hq_biquad_loop;
0x000C18        23116557                 rMAC = rMAC - rMAC, r4 = M[I1,1], r3 = M[I5,-1];
0x000C19        8DE50280                 rMAC0 = r3 LSHIFT 0;
0x000C1A        AF4665A7                 rMAC = rMAC + r2 * r4 (SS), r4 = M[I1,1], M[I5,-1] = r0;
0x000C1B        AE3665B7                 rMAC = rMAC + r1 * r4 (SS), r4 = M[I1,M1], M[I5,M3] = r1;
0x000C1C        AF266545                 rMAC = rMAC + r0 * r4 (SS), r4 = M[I1,1], r2 = M[I5,1];
0x000C1D        BF466537                 rMAC = rMAC - r2 * r4 (SS), r4 = M[I1,1], r1 = M[I5,-1];
0x000C1E        BF366947                 rMAC = rMAC - r1 * r4 (SS), r4 = M[I2,1], r2 = M[I5,-1];
0x000C1F        8D510018                 r3 = rMAC LSHIFT 24;
0x000C20        8DE00280                 rMAC0 = Null LSHIFT 0;
0x000C21        9021006F                 r0 = rMAC ASHIFT r4;
0x000C22        020000D7                 Null = Null + Null, M[I5,M3] = r3;

 <$M.audio_proc.hq_peq.process.hq_biquad_loop>
0x000C23        03000057                 Null = Null + Null, r3 = M[I5,-1];
0x000C24        03000057                 Null = Null + Null, r3 = M[I5,-1];
0x000C25        030000B5                 Null = Null + Null, M[I5,1] = r1;
0x000C26        030000A5                 Null = Null + Null, M[I5,1] = r0;
0x000C27        91220001                 r0 = r0 ASHIFT 1;
0x000C28        F3640000                 pop r4;
0x000C29        6669A100                 r4 = r4 - M1, M[I0,M1] = r0;
0x000C2A        DD10FFE6                 if NE jump $M.audio_proc.hq_peq.process.hq_peq_block_loop;
0x000C2B        50C0000F                 L0 = Null + Null;
0x000C2C        50E0000F                 L4 = Null + Null;
0x000C2D        50D0000F                 L1 = Null + Null;
0x000C2E        50F0000F                 L5 = Null + Null;
0x000C2F        F3000000                 push Null;
0x000C30        F1BAFFFF                 B1 = M[SP + -0x1];
0x000C31        F3D60000                 pop B5;
0x000C32        DC0D000F                 rts;

 <$cbuffer.configure_port_message_handler>
0x000C33        F3D00000                 push rLink;
0x000C34        2103000C                 Null = r1 - 12;
0x000C35        E1500020                 if POS call $M.cbuffer.configure_port_message_handler.write_port;

 <$M.cbuffer.configure_port_message_handler.read_port>
0x000C36        FD0000FF D5534BE8        M[r1 + -46104] = r3;
0x000C38        D5432AAC                 M[r1 + 10924] = r2;
0x000C39        DD100004                 if NE jump $M.cbuffer.configure_port_message_handler.read_port_connect;
0x000C3A        09202C93                 r0 = Null + M[$cbuffer.read_port_disconnect_address];
0x000C3B        E0020001                 if NE call r0;
0x000C3C        DDF00A31                 jump $pop_rLink_and_rts;

 <$M.cbuffer.configure_port_message_handler.read_port_connect>
0x000C3D        0023000F                 r0 = r1 + Null;
0x000C3E        D144FFFF                 r2 = M[r2 + -1];
0x000C3F        01300040                 r1 = Null + 64;
0x000C40        8D440078                 r2 = r2 LSHIFT -8;
0x000C41        8C43004F                 r2 = r1 LSHIFT r2;
0x000C42        FD0000FF D54247E8        M[r0 + -47128] = r2;
0x000C44        E430002F                 r1 = Null + 1;
0x000C45        0140000D                 r2 = Null + 13;
0x000C46        2105F000                 Null = r3 - -4096;
0x000C47        00340004                 if NEG r1 = r2 + Null;
0x000C48        F3200000                 push r0;
0x000C49        F3400000                 push r2;
0x000C4A        01400062                 r2 = Null + 98;
0x000C4B        65020007                 Null = 7 - r0;
0x000C4C        00220044                 if NEG r0 = r0 + r2;
0x000C4D        D532FE7B                 M[r0 + -389] = r1;
0x000C4E        F3440000                 pop r2;
0x000C4F        F3240000                 pop r0;
0x000C50        0032000F                 r1 = r0 + Null;
0x000C51        FD0000FF 09205C92        r0 = Null + M[$cbuffer.read_port_connect_address];
0x000C53        E0020001                 if NE call r0;
0x000C54        DDF00A19                 jump $pop_rLink_and_rts;

 <$M.cbuffer.configure_port_message_handler.write_port>
0x000C55        FD0000FF D5534BE8        M[r1 + -46104] = r3;
0x000C57        D5432AAC                 M[r1 + 10924] = r2;
0x000C58        DD100004                 if NE jump $M.cbuffer.configure_port_message_handler.write_port_connect;
0x000C59        09202C92                 r0 = Null + M[$cbuffer.write_port_disconnect_address];
0x000C5A        E0020001                 if NE call r0;
0x000C5B        DDF00A12                 jump $pop_rLink_and_rts;

 <$M.cbuffer.configure_port_message_handler.write_port_connect>
0x000C5C        0023000F                 r0 = r1 + Null;
0x000C5D        D144FFFF                 r2 = M[r2 + -1];
0x000C5E        01300040                 r1 = Null + 64;
0x000C5F        8D440078                 r2 = r2 LSHIFT -8;
0x000C60        8C43004F                 r2 = r1 LSHIFT r2;
0x000C61        FD0000FF D54247E8        M[r0 + -47128] = r2;
0x000C63        01300009                 r1 = Null + 9;
0x000C64        01400005                 r2 = Null + 5;
0x000C65        2105F000                 Null = r3 - -4096;
0x000C66        00340004                 if NEG r1 = r2 + Null;
0x000C67        F3200000                 push r0;
0x000C68        F3400000                 push r2;
0x000C69        2122000C                 r0 = r0 - 12;
0x000C6A        01400066                 r2 = Null + 102;
0x000C6B        65020007                 Null = 7 - r0;
0x000C6C        00220044                 if NEG r0 = r0 + r2;
0x000C6D        D532FE73                 M[r0 + -397] = r1;
0x000C6E        F3440000                 pop r2;
0x000C6F        F3240000                 pop r0;
0x000C70        0032000F                 r1 = r0 + Null;
0x000C71        FD0000FF 09205C91        r0 = Null + M[$cbuffer.write_port_connect_address];
0x000C73        E0020001                 if NE call r0;
0x000C74        DDF009F9                 jump $pop_rLink_and_rts;

 <$message.received_service_routine>
0x000C75        F3D00000                 push rLink;
0x000C76        51800000                 M0 = Null + 0;
0x000C77        0920FE1D                 r0 = Null + M[0xfffe1d];
0x000C78        8132FFF0                 r1 = r0 AND 0xfff0;
0x000C79        8903FFF0                 Null = r1 XOR 0xfff0;
0x000C7A        DD10001B                 if NE jump $M.message.received_service_routine.non_long_message;
0x000C7B        81020001                 Null = r0 AND 0x1;
0x000C7C        DD000002                 if EQ jump $M.message.received_service_routine.not_initial_packet;
0x000C7D        19002C98                 M[$message.long_message_size] = Null + Null;

 <$M.message.received_service_routine.not_initial_packet>
0x000C7E        09302C98                 r1 = Null + M[$message.long_message_size];
0x000C7F        21030052                 Null = r1 - 82;
0x000C80        DD400002                 if NEG jump $M.message.received_service_routine.message_not_too_long;
0x000C81        21330004                 r1 = r1 - 4;

 <$M.message.received_service_routine.message_not_too_long>
0x000C82        0940E006                 r2 = Null + M[0xffe006];
0x000C83        D54328D0                 M[r1 + 10448] = r2;
0x000C84        0940E007                 r2 = Null + M[0xffe007];
0x000C85        D54328D1                 M[r1 + 10449] = r2;
0x000C86        0940E008                 r2 = Null + M[0xffe008];
0x000C87        D54328D2                 M[r1 + 10450] = r2;
0x000C88        0940E009                 r2 = Null + M[0xffe009];
0x000C89        D54328D3                 M[r1 + 10451] = r2;
0x000C8A        01330004                 r1 = r1 + 4;
0x000C8B        19302C98                 M[$message.long_message_size] = r1 + Null;
0x000C8C        81020002                 Null = r0 AND 0x2;
0x000C8D        DD100005                 if NE jump $M.message.received_service_routine.final_packet;

 <$M.message.received_service_routine.not_final_packet>
0x000C8E        0970E001                 r5 = Null + M[0xffe001];
0x000C8F        E477002F                 r5 = r5 + 1;
0x000C90        1970E001                 M[0xffe001] = r5 + Null;
0x000C91        DDF009DC                 jump $pop_rLink_and_rts;

 <$M.message.received_service_routine.final_packet>
0x000C92        092028D0                 r0 = Null + M[$message.long_message_data];
0x000C93        8122FFFF                 r0 = r0 AND 0xffff;
0x000C94        51800001                 M0 = Null + 1;

 <$M.message.received_service_routine.non_long_message>
0x000C95        01C00032                 r10 = Null + 50;
0x000C96        09302C96                 r1 = Null + M[$message.last_addr];
0x000C97        E5F00009                 do $M.message.received_service_routine.loop;
0x000C98        E403002F                 Null = r1 + 1;
0x000C99        DD000008                 if EQ jump $M.message.received_service_routine.no_handler;
0x000C9A        D1430003                 r2 = M[r1 + 3];
0x000C9B        8052004F                 r3 = r0 AND r2;
0x000C9C        D1430001                 r2 = M[r1 + 1];
0x000C9D        2005004F                 Null = r3 - r2;
0x000C9E        DD000007                 if EQ jump $M.message.received_service_routine.found;
0x000C9F        D1330000                 r1 = M[r1 + 0];

 <$M.message.received_service_routine.loop>
0x000CA0        E1F02937                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;

 <$M.message.received_service_routine.no_handler>
0x000CA1        0970E001                 r5 = Null + M[0xffe001];
0x000CA2        E477002F                 r5 = r5 + 1;
0x000CA3        1970E001                 M[0xffe001] = r5 + Null;
0x000CA4        DDF009C9                 jump $pop_rLink_and_rts;

 <$M.message.received_service_routine.found>
0x000CA5        D1D30002                 rLink = M[r1 + 2];
0x000CA6        47080000                 Null = Null + M0;
0x000CA7        DD000006                 if EQ jump $M.message.received_service_routine.short_message_mode;
0x000CA8        0032000F                 r1 = r0 + Null;
0x000CA9        094028D1                 r2 = Null + M[0x28d1];
0x000CAA        015028D2                 r3 = Null + 10450;
0x000CAB        0120FFFE                 r0 = Null + -2;
0x000CAC        DDF00005                 jump $M.message.received_service_routine.message_mode_done;

 <$M.message.received_service_routine.short_message_mode>
0x000CAD        0930E006                 r1 = Null + M[0xffe006];
0x000CAE        0940E007                 r2 = Null + M[0xffe007];
0x000CAF        0950E008                 r3 = Null + M[0xffe008];
0x000CB0        0960E009                 r4 = Null + M[0xffe009];

 <$M.message.received_service_routine.message_mode_done>
0x000CB1        0970E001                 r5 = Null + M[0xffe001];
0x000CB2        E477002F                 r5 = r5 + 1;
0x000CB3        1970E001                 M[0xffe001] = r5 + Null;
0x000CB4        E00D000F                 call rLink;
0x000CB5        DDF009B8                 jump $pop_rLink_and_rts;
...

 <5By6fxB9Udraxzjpc6VD3tJJfMJupco2EzBrgAyvBkg=>
0x000DB4        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DB5        D12A0002                 r0 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DB6        E1F0F9C4                 call $cbops_multirate.GetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DB7        00B2000F                 r9 = r0 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DB8        01800000                 r6 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DB9        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DBA        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DBB        E1F0F9B9                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DBC        00C4000F                 r10 = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DBD        DDD00026                 if LE jump e2r5iII4r0HYE7+WtlbIn7ue55eHZssZiyqmjdUyLk8=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DBE        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DBF        E1F0F9CA                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC0        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC1        50C0003F                 L0 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC2        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC3        E1F0F9C6                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC4        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC5        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC6        D12A0002                 r0 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC7        E1F0F9C2                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC8        51900001                 M1 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DC9        5010002F                 I1 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DCA        50D0113F                 L1 = Null + r1, rMAC = M[I0,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DCB        205C00BF                 r3 = r10 - r9;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DCC        00500004                 if NEG r3 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DCD        FD00007F 0170FFFF        r5 = Null + 8388607;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DCF        D12A0004                 r0 = M[r8 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DD0        D0720001                 if NE r5 = M[r0 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DD1        003B000F                 r1 = r9 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DD2        23C50000                 r10 = r10 - r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DD3        008C000F                 r6 = r10 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DD4        23B80000                 r9 = r9 - r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DD5        E5F00004                 do 9MWyfEtJj7maU28cm2MedEoaLzG2sJDmAVZb/whK564=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DD6        03002500                 Null = Null + Null, r0 = M[I1,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DD7        AC12007F                 rMAC = rMAC + r0 * r5 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DD8        03001191                 Null = Null + Null, rMAC = M[I0,1], M[I4,1] = rMAC;

 <9MWyfEtJj7maU28cm2MedEoaLzG2sJDmAVZb/whK564=>
0x000DD9        03002700                 Null = Null + Null, r0 = M[I1,-1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DDA        00C5250F                 r10 = r3 + Null, r0 = M[I1,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DDB        51D00000                 L1 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DDC        0003000F                 Null = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DDD        00200000                 if EQ r0 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DDE        E5F00003                 do OLdVFUOV8AyowCdh54Ym3JH0XykEXkQiN+n5sk3jfCA=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DDF        AC12007F                 rMAC = rMAC + r0 * r5 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DE0        03001191                 Null = Null + Null, rMAC = M[I0,1], M[I4,1] = rMAC;

 <OLdVFUOV8AyowCdh54Ym3JH0XykEXkQiN+n5sk3jfCA=>
0x000DE1        51C00000                 L0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DE2        51E00000                 L4 = Null + 0;

 <e2r5iII4r0HYE7+WtlbIn7ue55eHZssZiyqmjdUyLk8=>
0x000DE3        D13A0003                 r1 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DE4        0043003F                 r2 = r1 + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DE5        200B004F                 Null = r9 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DE6        00B30004                 if NEG r9 = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DE7        D12A0002                 r0 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DE8        205B003F                 r3 = r9 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DE9        0038005F                 r1 = r6 + r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DEA        E1F0F994                 call $cbops_multirate.SetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DEB        DDF00882                 jump $pop_rLink_and_rts;

 <$iir_2ndStage_upsample>
0x000DEC        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DED        5F380000                 I3 = I3 + M0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DEE        22993C00                 r7 = r7 - r7, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DEF        F3E20000                 push FP;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF0        F3A60000                 pop B0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF1        F107000A                 FP = FP + 10;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF2        F3E20000                 push FP;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF3        F3C60000                 pop B4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF4        F007003F                 FP = FP + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF5        50E06C3F                 L4 = Null + r1, r4 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF6        50903C6F                 M1 = Null + r4, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF7        00833C4F                 r6 = r1 + r2, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF8        00A33C7F                 r8 = r1 + r5, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DF9        50607C3F                 I6 = Null + r1, r5 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DFA        70A0286F                 M2 = Null - r4, r0 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DFB        9946000A                 r2 = r4 * 10 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DFC        F3210000                 push I2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DFD        74B4588F                 M3 = r2 - M0, r3 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DFE        5EB63800                 M3 = M3 + I6, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000DFF        5EB64800                 M3 = M3 + I6, r2 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E00        50002C3F                 I0 = Null + r1, r0 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E01        50402C4F                 I4 = Null + r2, r0 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E02        51C0000A                 L0 = Null + 10;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E03        9845007F                 r2 = r3 * r5 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E04        004400B4                 if NEG r2 = r2 + r9;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E05        9434006F                 r1 = r2 * r4 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E06        E5F0001C                 do BHBy+Nm1ooTpUimPRA2sYqwPmQP360012vUbYhTcVqk=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E07        02001400                 Null = Null + Null, rMAC = M[I1,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E08        02009000                 Null = Null + Null, M[I0,M0] = rMAC;

 <+FfaM31wJYd22gdXT+m80uOEHWHwl5gfI3LvYRbNj4k=>
0x000E09        5876003F                 I7 = I6 + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E0A        4658403D                 r3 = r3 + M0, r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E0B        CE34403D                 rMAC = r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E0C        AE34403D                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E0D        AE34403D                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E0E        AE34403D                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E0F        7C7B007F                 I7 = M3 - I7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E10        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E11        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E12        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E13        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E14        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E15        AC13004F                 rMAC = rMAC + r1 * r2 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E16        5823000F                 I2 = I3 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E17        E002000F                 call r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E18        92EA0090                 rMAC = rMAC ASHIFT r8, M[I4,M0] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E19        46980094                 r7 = r7 + M0, M[I5,M0] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E1A        2005006F                 Null = r3 - r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E1B        2055005A                 if GE r3 = r3 - r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E1C        9845007F                 r2 = r3 * r5 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E1D        004400B4                 if NEG r2 = r2 + r9;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E1E        9434006F                 r1 = r2 * r4 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E1F        2007004F                 Null = r5 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E20        DDD0FFE9                 if LE jump +FfaM31wJYd22gdXT+m80uOEHWHwl5gfI3LvYRbNj4k=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E21        03000000                 Null = Null + Null;

 <BHBy+Nm1ooTpUimPRA2sYqwPmQP360012vUbYhTcVqk=>
0x000E22        5832000F                 I3 = I2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E23        F3250000                 pop I2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E24        4420D80F                 r0 = Null + I0, M[I2,M0] = r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E25        4420A84F                 r0 = Null + I4, M[I2,M0] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E26        50C0A80F                 L0 = Null + Null, M[I2,M0] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E27        50E0000F                 L4 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000E28        DDF00845                 jump $pop_rLink_and_rts;

 <$audio_proc.peq.process>
0x000E29        F3D00000                 push rLink;
0x000E2A        D1290000                 r0 = M[r7 + 0];
0x000E2B        E1F0082E                 call $frmbuffer.get_buffer;
0x000E2C        5040002F                 I4 = Null + r0;
0x000E2D        50E0003F                 L4 = Null + r1;
0x000E2E        0065000F                 r4 = r3 + Null;
0x000E2F        D1290001                 r0 = M[r7 + 1];
0x000E30        E1F0083B                 call $frmbuffer.set_frame_size;
0x000E31        E1F00828                 call $frmbuffer.get_buffer;
0x000E32        5000002F                 I0 = Null + r0;
0x000E33        50C0003F                 L0 = Null + r1;
0x000E34        F3D40000                 pop rLink;

 <$audio_proc.peq.process_op>
0x000E35        51900001                 M1 = Null + 1;
0x000E36        51390003                 I3 = r7 + 3;
0x000E37        5180FFFF                 M0 = Null + -1;
0x000E38        00C02D0F                 r10 = Null + Null, r0 = M[I3,M1];
0x000E39        54222D9F                 I2 = r0 + M1, r0 = M[I3,M1];
0x000E3A        F3200000                 push r0;
0x000E3B        F3D60000                 pop B5;
0x000E3C        50502D2F                 I5 = Null + r0, r0 = M[I3,M1];
0x000E3D        F3200000                 push r0;
0x000E3E        F3B60000                 pop B1;
0x000E3F        50103D2F                 I1 = Null + r0, r1 = M[I3,M1];
0x000E40        50A03D3F                 M2 = Null + r1, r1 = M[I3,M1];
0x000E41        50F03D3F                 L5 = Null + r1, r1 = M[I3,M1];
0x000E42        50D0393F                 L1 = Null + r1, r1 = M[I2,M1];
0x000E43        02007900                 Null = Null + Null, r5 = M[I2,M1];
0x000E44        21830002                 r6 = r1 - 2;
0x000E45        D1490002                 r2 = M[r7 + 2];
0x000E46        99440005                 r2 = r2 * 5 (int);
0x000E47        5B240000                 I2 = I2 + r2;
0x000E48        5F2A0000                 I2 = I2 + M2;
0x000E49        74A000AF                 M2 = Null - M2;

 <$M.audio_proc.peq.process.peq_block_loop>
0x000E4A        66CA0021                 r10 = r10 - M2, r0 = M[I4,M1];
0x000E4B        CE272A55                 rMAC = r0 * r5 (SS), r0 = M[I2,M2], r3 = M[I5,M1];
0x000E4C        9021458F                 r0 = rMAC ASHIFT r6, r2 = M[I1,M1];
0x000E4D        E5F00009                 do $M.audio_proc.peq.process.biquad_loop;
0x000E4E        CE544534                 rMAC = r3 * r2 (SS), r2 = M[I1,M1], r1 = M[I5,M0];
0x000E4F        AE3445B5                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I1,M1], M[I5,M1] = r1;
0x000E50        AE2400A5                 rMAC = rMAC + r0 * r2 (SS), M[I5,M1] = r0;
0x000E51        02004535                 Null = Null + Null, r2 = M[I1,M1], r1 = M[I5,M1];
0x000E52        BE344534                 rMAC = rMAC - r1 * r2 (SS), r2 = M[I1,M1], r1 = M[I5,M0];
0x000E53        BE344955                 rMAC = rMAC - r1 * r2 (SS), r2 = M[I2,M1], r3 = M[I5,M1];
0x000E54        0021000F                 r0 = rMAC + Null;
0x000E55        92244500                 r0 = r0 ASHIFT r2, r2 = M[I1,M1];

 <$M.audio_proc.peq.process.biquad_loop>
0x000E56        02000054                 Null = Null + Null, r3 = M[I5,M0];
0x000E57        020044B5                 Null = Null + Null, r2 = M[I1,M0], M[I5,M1] = r1;
0x000E58        91520002                 r3 = r0 ASHIFT 2;
0x000E59        6669D1A5                 r4 = r4 - M1, M[I0,M1] = r3, M[I5,M1] = r0;
0x000E5A        DD10FFF0                 if NE jump $M.audio_proc.peq.process.peq_block_loop;
0x000E5B        50C0000F                 L0 = Null + Null;
0x000E5C        50E0000F                 L4 = Null + Null;
0x000E5D        50D0000F                 L1 = Null + Null;
0x000E5E        50F0000F                 L5 = Null + Null;
0x000E5F        F3000000                 push Null;
0x000E60        F1BAFFFF                 B1 = M[SP + -0x1];
0x000E61        F3D60000                 pop B5;
0x000E62        DC0D000F                 rts;

 <$math.fft_penpenultimate_stage>
0x000E63        513011AA                 I3 = Null + 4522;
0x000E64        FD0000FF 51703D81        I7 = Null + -49791;
0x000E66        64C95D9F                 r10 = r7 - M1, r3 = M[I3,M1];
0x000E67        0299006D                 r7 = r7 + r7, r4 = M[I7,M1];
0x000E68        0085000F                 r6 = r3 + Null;
0x000E69        F129FFFE                 I2 = M[SP + -0x2];
0x000E6A        5842000F                 I4 = I2 + Null;
0x000E6B        F169FFFF                 I6 = M[SP + -0x1];
0x000E6C        59120004                 I1 = I2 + 4;
0x000E6D        5806000F                 I0 = I6 + Null;
0x000E6E        59560004                 I5 = I6 + 4;
0x000E6F        5CA9559F                 M2 = M1 + M1, r3 = M[I1,M1];
0x000E70        51800006                 M0 = Null + 6;
0x000E71        EED80075                 rMACB = r3 * r6, r0 = r2 + rMAC, r5 = M[I5,M1];
0x000E72        EBF64131                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M1], r1 = M[I4,M1];
0x000E73        C0D5576F                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3];
0x000E74        D778A931                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M1] = r0, r1 = M[I4,M1];
0x000E75        EED8A677                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M2] = r0, r5 = M[I5,M3];
0x000E76        EBF641A9                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M1], M[I6,M1] = r0;
0x000E77        E25657A6                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3], M[I5,M2] = r0;
0x000E78        D778A931                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M1] = r0, r1 = M[I4,M1];
0x000E79        EED8A677                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M2] = r0, r5 = M[I5,M3];
0x000E7A        EBF641A9                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M1], M[I6,M1] = r0;
0x000E7B        E25657A6                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3], M[I5,M2] = r0;
0x000E7C        D778A930                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M1] = r0, r1 = M[I4,M0];
0x000E7D        EED8A477                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M0] = r0, r5 = M[I5,M3];
0x000E7E        EBF640A9                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M0], M[I6,M1] = r0;
0x000E7F        5E0B0013                 I0 = I0 + M3, rMAC = M[I4,M3];
0x000E80        E2565DA4                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I3,M1], M[I5,M0] = r0;
0x000E81        D778A831                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M0] = r0, r1 = M[I4,M1];
0x000E82        0085550F                 r6 = r3 + Null, r3 = M[I1,M1];
0x000E83        7E187B6D                 I1 = I1 - M0, r5 = M[I2,M3], r4 = M[I7,M1];
0x000E84        E5F00015                 do $M.math.fft_penpenultimate_stage.penpenultimate_loop;
0x000E85        EED8A475                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M0] = r0, r5 = M[I5,M1];
0x000E86        EBF641A8                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M1], M[I6,M0] = r0;
0x000E87        7E58001B                 I5 = I5 - M0, rMAC = M[I6,M3];
0x000E88        E25657A4                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3], M[I5,M0] = r0;
0x000E89        D778A931                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M1] = r0, r1 = M[I4,M1];
0x000E8A        EED8A677                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M2] = r0, r5 = M[I5,M3];
0x000E8B        EBF641A9                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M1], M[I6,M1] = r0;
0x000E8C        E25657A6                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3], M[I5,M2] = r0;
0x000E8D        D778A931                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M1] = r0, r1 = M[I4,M1];
0x000E8E        EED8A677                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M2] = r0, r5 = M[I5,M3];
0x000E8F        EBF641A9                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M1], M[I6,M1] = r0;
0x000E90        E25657A6                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3], M[I5,M2] = r0;
0x000E91        D778A930                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M1] = r0, r1 = M[I4,M0];
0x000E92        EED8A477                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M0] = r0, r5 = M[I5,M3];
0x000E93        EBF640A9                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M0], M[I6,M1] = r0;
0x000E94        5E0B0013                 I0 = I0 + M3, rMAC = M[I4,M3];
0x000E95        E2565DA4                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I3,M1], M[I5,M0] = r0;
0x000E96        D778A831                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M0] = r0, r1 = M[I4,M1];
0x000E97        0085550F                 r6 = r3 + Null, r3 = M[I1,M1];
0x000E98        7E187B6D                 I1 = I1 - M0, r5 = M[I2,M3], r4 = M[I7,M1];

 <$M.math.fft_penpenultimate_stage.penpenultimate_loop>
0x000E99        EE80A575                 rMACB = rMACB * Null, r0 = r2 + rMAC, M[I1,M1] = r0, r5 = M[I5,M1];
0x000E9A        7F580000                 I5 = I5 - M0;
0x000E9B        EF8000AA                 rMACB = rMACB * Null, r0 = r2 - rMAC, M[I6,M2] = r0;
0x000E9C        020000A5                 Null = Null + Null, M[I5,M1] = r0;
0x000E9D        DDF00227                 jump $math.fft_penultimate_stage;

 <$M.audio_proc.stream_gain.Process.func>
0x000E9E        F3D00000                 push rLink;
0x000E9F        D1290000                 r0 = M[r7 + 0];
0x000EA0        E1F007B9                 call $frmbuffer.get_buffer;
0x000EA1        5000002F                 I0 = Null + r0;
0x000EA2        50C0003F                 L0 = Null + r1;
0x000EA3        00C5000F                 r10 = r3 + Null;
0x000EA4        D1290001                 r0 = M[r7 + 1];
0x000EA5        E1F007C6                 call $frmbuffer.set_frame_size;
0x000EA6        E1F007B3                 call $frmbuffer.get_buffer;
0x000EA7        5040002F                 I4 = Null + r0;
0x000EA8        50E0003F                 L4 = Null + r1;
0x000EA9        F3D40000                 pop rLink;
0x000EAA        D1390002                 r1 = M[r7 + 2];
0x000EAB        D1490003                 r2 = M[r7 + 3];
0x000EAC        D3300000                 r1 = M[r1 + Null];
0x000EAD        D3400000                 r2 = M[r2 + Null];
0x000EAE        03002100                 Null = Null + Null, r0 = M[I0,1];
0x000EAF        210A0000                 Null = r8 - 0;
0x000EB0        DD00001D                 if EQ jump $M.audio_proc.stream_gain.Process.adjust_gain;
0x000EB1        D15A0002                 r3 = M[r8 + 2];
0x000EB2        D16A0003                 r4 = M[r8 + 3];
0x000EB3        2003005F                 Null = r1 - r3;
0x000EB4        DD100003                 if NE jump $M.audio_proc.stream_gain.Process.apply_ramp;
0x000EB5        2004006F                 Null = r2 - r4;
0x000EB6        DD000017                 if EQ jump $M.audio_proc.stream_gain.Process.adjust_gain;

 <$M.audio_proc.stream_gain.Process.apply_ramp>
0x000EB7        D17A0001                 r5 = M[r8 + 1];
0x000EB8        E5F00010                 do $M.audio_proc.stream_gain.Process.lp_ramp_copy;
0x000EB9        D18A0000                 r6 = M[r8 + 0];
0x000EBA        03780000                 r5 = r5 + r6;
0x000EBB        FD00007F 2107FFFF        Null = r5 - 8388607;
0x000EBD        DD50000D                 if POS jump $M.audio_proc.stream_gain.Process.complete;
0x000EBE        CC12003F                 rMAC = r0 * r1 (SS);
0x000EBF        9081004F                 r6 = rMAC ASHIFT r2;
0x000EC0        97870000                 r6 = r6 * r5 (frac);
0x000EC1        FD00007F 6597FFFF        r7 = 8388607 - r5;
0x000EC3        CC12005F                 rMAC = r0 * r3 (SS);
0x000EC4        9021006F                 r0 = rMAC ASHIFT r4;
0x000EC5        97290000                 r0 = r0 * r7 (frac);
0x000EC6        03280000                 r0 = r0 + r6;
0x000EC7        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <$M.audio_proc.stream_gain.Process.lp_ramp_copy>
0x000EC8        D57A0001                 M[r8 + 1] = r5;
0x000EC9        DDF00008                 jump $M.audio_proc.stream_gain.Process.exit;

 <$M.audio_proc.stream_gain.Process.complete>
0x000ECA        D53A0002                 M[r8 + 2] = r1;
0x000ECB        D54A0003                 M[r8 + 3] = r2;
0x000ECC        D50A0001                 M[r8 + 1] = Null;

 <$M.audio_proc.stream_gain.Process.adjust_gain>
0x000ECD        E5F00004                 do $M.audio_proc.stream_gain.Process.exit;
0x000ECE        CC12003F                 rMAC = r0 * r1 (SS);
0x000ECF        93140000                 rMAC = rMAC ASHIFT r2 (56bit);
0x000ED0        03002191                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = rMAC;

 <$M.audio_proc.stream_gain.Process.exit>
0x000ED1        50C0000F                 L0 = Null + Null;
0x000ED2        50E0000F                 L4 = Null + Null;
0x000ED3        DC0D000F                 rts;
...

 <$flash.copy_to_dm_24>
0x000F0A        F3D00000                 push rLink;
0x000F0B        0082000F                 r6 = r0 + Null;
0x000F0C        81730001                 r5 = r1 AND 0x1;
0x000F0D        9163007F                 r4 = r1 ASHIFT -1;

 <$M.flash.copy_to_dm_24.page_loop>
0x000F0E        0028000F                 r0 = r6 + Null;
0x000F0F        99360003                 r1 = r4 * 3 (int);
0x000F10        F3300000                 push r1;
0x000F11        E1F00715                 call $flash.map_page_into_dm;
0x000F12        5010002F                 I1 = Null + r0;
0x000F13        00C6000F                 r10 = r4 + Null;
0x000F14        F3240000                 pop r0;
0x000F15        2002003F                 Null = r0 - r1;
0x000F16        DD000005                 if EQ jump $M.flash.copy_to_dm_24.read_values;
0x000F17        99330002                 r1 = r1 * 2 (int);
0x000F18        FD00002A 9533AAAB        r1 = r1 * 0.33333337306976318 (frac);
0x000F1A        91C3007F                 r10 = r1 ASHIFT -1;

 <$M.flash.copy_to_dm_24.read_values>
0x000F1B        236C0000                 r4 = r4 - r10;
0x000F1C        992C0003                 r0 = r10 * 3 (int);
0x000F1D        03820000                 r6 = r6 + r0;
0x000F1E        E5F0000B                 do $M.flash.copy_to_dm_24.loop;
0x000F1F        03002500                 Null = Null + Null, r0 = M[I1,1];
0x000F20        03003500                 Null = Null + Null, r1 = M[I1,1];
0x000F21        8D220008                 r0 = r0 LSHIFT 8;
0x000F22        8D530078                 r3 = r1 LSHIFT -8;
0x000F23        815500FF                 r3 = r3 AND 0xff;
0x000F24        87522500                 r3 = r3 OR r0, r0 = M[I1,1];
0x000F25        8122FFFF                 r0 = r0 AND 0xffff;
0x000F26        8D330010                 r1 = r1 LSHIFT 16;
0x000F27        0323D100                 r0 = r0 + r1, M[I0,1] = r3;
0x000F28        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <$M.flash.copy_to_dm_24.loop>
0x000F29        0006000F                 Null = r4 + Null;
0x000F2A        DD10FFE4                 if NE jump $M.flash.copy_to_dm_24.page_loop;
0x000F2B        0007000F                 Null = r5 + Null;
0x000F2C        DD000741                 if EQ jump $pop_rLink_and_rts;
0x000F2D        0028000F                 r0 = r6 + Null;
0x000F2E        01300002                 r1 = Null + 2;
0x000F2F        E1F006F7                 call $flash.map_page_into_dm;
0x000F30        5010002F                 I1 = Null + r0;
0x000F31        03002500                 Null = Null + Null, r0 = M[I1,1];
0x000F32        03003500                 Null = Null + Null, r1 = M[I1,1];
0x000F33        8D220008                 r0 = r0 LSHIFT 8;
0x000F34        8D330078                 r1 = r1 LSHIFT -8;
0x000F35        813300FF                 r1 = r1 AND 0xff;
0x000F36        8423002F                 r0 = r1 OR r0;
0x000F37        0300A100                 Null = Null + Null, M[I0,1] = r0;
0x000F38        DDF00735                 jump $pop_rLink_and_rts;

 <$M.mips_profile.mainstart>
0x000F39        0920FE6C                 r0 = Null + M[0xfffe6c];
0x000F3A        D52A0001                 M[r8 + 1] = r0;
0x000F3B        D50A0005                 M[r8 + 5] = Null;
0x000F3C        D12A0000                 r0 = M[r8 + 0];
0x000F3D        DD000002                 if EQ jump $M.mips_profile.init;
0x000F3E        DC0D000F                 rts;

 <$M.mips_profile.init>
0x000F3F        0920FE71                 r0 = Null + M[0xfffe71];
0x000F40        D52A0009                 M[r8 + 9] = r0;
0x000F41        E420002F                 r0 = Null + 1;
0x000F42        D52A0000                 M[r8 + 0] = r0;
0x000F43        D50A0002                 M[r8 + 2] = Null;
0x000F44        D50A0004                 M[r8 + 4] = Null;
0x000F45        DC0D000F                 rts;

 <$M.mips_profile.mainend>
0x000F46        D12A0000                 r0 = M[r8 + 0];
0x000F47        DC0D0000                 if EQ rts;
0x000F48        0920FE6C                 r0 = Null + M[0xfffe6c];
0x000F49        D13A0001                 r1 = M[r8 + 1];
0x000F4A        23230000                 r0 = r0 - r1;
0x000F4B        D13A0005                 r1 = M[r8 + 5];
0x000F4C        23230000                 r0 = r0 - r1;
0x000F4D        D13A0002                 r1 = M[r8 + 2];
0x000F4E        03230000                 r0 = r0 + r1;
0x000F4F        D52A0002                 M[r8 + 2] = r0;
0x000F50        0920FE71                 r0 = Null + M[0xfffe71];
0x000F51        D13A0009                 r1 = M[r8 + 9];
0x000F52        23230000                 r0 = r0 - r1;
0x000F53        09302C91                 r1 = Null + M[$M.mips_profile.evalinterval_us];
0x000F54        2002003F                 Null = r0 - r1;
0x000F55        DC0D0004                 if NEG rts;
0x000F56        D12A0002                 r0 = M[r8 + 2];
0x000F57        D52A0006                 M[r8 + 6] = r0;
0x000F58        D13A0004                 r1 = M[r8 + 4];
0x000F59        D53A0007                 M[r8 + 7] = r1;
0x000F5A        03230000                 r0 = r0 + r1;
0x000F5B        D52A0008                 M[r8 + 8] = r0;
0x000F5C        D50A0000                 M[r8 + 0] = Null;
0x000F5D        DC0D000F                 rts;

 <$M.mips_profile.intstart>
0x000F5E        0920FE6C                 r0 = Null + M[0xfffe6c];
0x000F5F        D52A0003                 M[r8 + 3] = r0;
0x000F60        DC0D000F                 rts;

 <$M.mips_profile.intend>
0x000F61        0920FE6C                 r0 = Null + M[0xfffe6c];
0x000F62        D13A0003                 r1 = M[r8 + 3];
0x000F63        23230000                 r0 = r0 - r1;
0x000F64        D13A0004                 r1 = M[r8 + 4];
0x000F65        0032003F                 r1 = r0 + r1;
0x000F66        D53A0004                 M[r8 + 4] = r1;
0x000F67        D13A0005                 r1 = M[r8 + 5];
0x000F68        0032003F                 r1 = r0 + r1;
0x000F69        D53A0005                 M[r8 + 5] = r1;
0x000F6A        DC0D000F                 rts;

 <aMDiXp47wY+Sw44CvhpGUvjEA6JUg8bLg+6lQRGN3SU=>
0x000F6B        FD000000 0150BB80        r3 = Null + 48000;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F6D        01601F40                 r4 = Null + 8000;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F6E        D13A0003                 r1 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F6F        D0330001                 if NE r1 = M[r1 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F70        00360000                 if EQ r1 = r4 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F71        D14A0004                 r2 = M[r8 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F72        D0440001                 if NE r2 = M[r2 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F73        00450000                 if EQ r2 = r3 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F74        D12A0007                 r0 = M[r8 + 7];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F75        2002003F                 Null = r0 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F76        DD100004                 if NE jump ceYcKYiFrFa5I3cC3RNiSeRNtEkNfjXt7fAJJk6n4JU=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F77        D12A0006                 r0 = M[r8 + 6];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F78        2002004F                 Null = r0 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F79        DD000010                 if EQ jump 7gSQ2fuq9zdZ/rL1gfIE8bmiCx+rLHwWRYYCPg3mHos=;

 <ceYcKYiFrFa5I3cC3RNiSeRNtEkNfjXt7fAJJk6n4JU=>
0x000F7A        D53A0007                 M[r8 + 7] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F7B        D54A0006                 M[r8 + 6] = r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F7C        01100000                 rMAC = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F7D        8DE30280                 rMAC0 = r1 LSHIFT 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F7E        D9040000                 Div = rMAC / r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F7F        D9200001                 r0 = DivResult;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F80        D52A0008                 M[r8 + 8] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F81        9B240000                 r0 = r0 * r2 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F82        8DE40280                 rMAC0 = r2 LSHIFT 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F83        23320000                 r1 = r1 - r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F84        8DE30200                 rMAC12 = r1 LSHIFT 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F85        91440001                 r2 = r2 ASHIFT 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F86        D9040000                 Div = rMAC / r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F87        D9200001                 r0 = DivResult;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F88        D52A0009                 M[r8 + 9] = r0;

 <7gSQ2fuq9zdZ/rL1gfIE8bmiCx+rLHwWRYYCPg3mHos=>
0x000F89        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F8A        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F8B        01990002                 r7 = r7 + 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F8C        99220003                 r0 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F8D        03290000                 r0 = r0 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F8E        99330003                 r1 = r1 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F8F        03390000                 r1 = r1 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F90        D042000F                 r2 = M[r0 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F91        D3300000                 r1 = M[r1 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F92        D16A0009                 r4 = M[r8 + 9];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F93        D15A0008                 r3 = M[r8 + 8];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F94        9B530000                 r3 = r3 * r1 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F95        97360000                 r1 = r1 * r4 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F96        03350000                 r1 = r1 + r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F97        21330002                 r1 = r1 - 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F98        00300004                 if NEG r1 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F99        2004003F                 Null = r2 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F9A        00430005                 if POS r2 = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F9B        1824000F                 M[r0] = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000F9C        DC0D000F                 rts;

 <$cbuffer.get_write_address_and_size.its_a_port>
0x000F9D        8132001F                 r1 = r0 AND 0x1f;
0x000F9E        2133000C                 r1 = r1 - 12;
0x000F9F        FD0000FF 19405C7E        M[$cbuffer.tmp] = r2 + Null;
0x000FA1        FD000033 8102FC00        Null = r0 AND 0x33fc00;
0x000FA3        DD00001E                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing;
0x000FA4        FD0000FF 19505C7F        M[0xff5c7f] = r3 + Null;
0x000FA6        01400066                 r2 = Null + 102;
0x000FA7        65030007                 Null = 7 - r1;
0x000FA8        00330044                 if NEG r1 = r1 + r2;
0x000FA9        D153FE73                 r3 = M[r1 + -397];
0x000FAA        FD000030 81420000        r2 = r0 AND 0x300000;
0x000FAC        DD000005                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_endian;
0x000FAD        8155FFFB                 r3 = r3 AND 0xfffb;
0x000FAE        8D44006B                 r2 = r2 LSHIFT -21;
0x000FAF        8D440002                 r2 = r2 LSHIFT 2;
0x000FB0        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_endian>
0x000FB1        FD000003 81428000        r2 = r0 AND 0x38000;
0x000FB3        DD000005                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_bitwidth;
0x000FB4        8155FFFC                 r3 = r3 AND 0xfffc;
0x000FB5        8D440070                 r2 = r2 LSHIFT -16;
0x000FB6        8D440000                 r2 = r2 LSHIFT 0;
0x000FB7        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_bitwidth>
0x000FB8        81426000                 r2 = r0 AND 0x6000;
0x000FB9        DD000005                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_saturate;
0x000FBA        8155FFF7                 r3 = r3 AND 0xfff7;
0x000FBB        8D440072                 r2 = r2 LSHIFT -14;
0x000FBC        8D440003                 r2 = r2 LSHIFT 3;
0x000FBD        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_saturate>
0x000FBE        D553FE73                 M[r1 + -397] = r3;
0x000FBF        FD0000FF 09505C7F        r3 = Null + M[0xff5c7f];

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing>
0x000FC1        8132001F                 r1 = r0 AND 0x1f;
0x000FC2        2133000C                 r1 = r1 - 12;
0x000FC3        01400009                 r2 = Null + 9;
0x000FC4        65030007                 Null = 7 - r1;
0x000FC5        00330044                 if NEG r1 = r1 + r2;
0x000FC6        FD0000FF 09405C7E        r2 = Null + M[$cbuffer.tmp];
0x000FC8        0123FE23                 r0 = r1 + -477;
0x000FC9        E430002F                 r1 = Null + 1;
0x000FCA        DC0D000F                 rts;

 <$message.private.try_to_send_message>
0x000FCB        F3D00000                 push rLink;
0x000FCC        E1F00662                 call $block_interrupts;
0x000FCD        0920E000                 r0 = Null + M[0xffe000];
0x000FCE        FD0000FF 29225C97        r0 = r0 - M[$message.last_seq_sent];
0x000FD0        8102FFFF                 Null = r0 AND 0xffff;
0x000FD1        DD100019                 if NE jump $M.message.private.try_to_send_message.queue_not_empty;
0x000FD2        FD0000FF 09305C96        r1 = Null + M[$message.queue_read_ptr];
0x000FD4        D12327F8                 r0 = M[r1 + 10232];
0x000FD5        1920E002                 M[0xffe002] = r0 + Null;
0x000FD6        D12327F9                 r0 = M[r1 + 10233];
0x000FD7        1920E003                 M[0xffe003] = r0 + Null;
0x000FD8        D12327FA                 r0 = M[r1 + 10234];
0x000FD9        1920E004                 M[0xffe004] = r0 + Null;
0x000FDA        D12327FB                 r0 = M[r1 + 10235];
0x000FDB        1920E005                 M[0xffe005] = r0 + Null;
0x000FDC        FD0000FF 09205C97        r0 = Null + M[$message.last_seq_sent];
0x000FDE        E422002F                 r0 = r0 + 1;
0x000FDF        FD0000FF 19205C97        M[$message.last_seq_sent] = r0 + Null;
0x000FE1        D12327F7                 r0 = M[r1 + 10231];
0x000FE2        1920FE1B                 M[0xfffe1b] = r0 + Null;
0x000FE3        01330005                 r1 = r1 + 5;
0x000FE4        2103006E                 Null = r1 - 110;
0x000FE5        00300000                 if EQ r1 = Null + Null;
0x000FE6        FD0000FF 19305C96        M[$message.queue_read_ptr] = r1 + Null;
0x000FE8        29032C97                 Null = r1 - M[$message.queue_write_ptr];
0x000FE9        DD000009                 if EQ jump $M.message.private.try_to_send_message.all_done;

 <$M.message.private.try_to_send_message.queue_not_empty>
0x000FEA        FD0000FF 09405C39        r2 = Null + M[0xff5c39];
0x000FEC        E1F00422                 call $timer.cancel_event;
0x000FED        FD0000FF 01305C36        r1 = Null + -41930;
0x000FEF        014003E8                 r2 = Null + 1000;
0x000FF0        01500FCB                 r3 = Null + 4043;
0x000FF1        E1F00678                 call $timer.schedule_event_in;

 <$M.message.private.try_to_send_message.all_done>
0x000FF2        E1F00625                 call $interrupt.unblock;
0x000FF3        DDF0067A                 jump $pop_rLink_and_rts;

 <O3Zxte0o1QQqRvK3WNdPjSXnJyR6Uw6NTFgvU4Ebcsw=>
0x000FF4        D14A0002                 r2 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FF5        DD0005E1                 if EQ jump $cbops.copy_op.amount_to_use;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FF6        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FF7        51800001                 M0 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FF8        5020004F                 I2 = Null + r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FF9        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FFA        E1F0F780                 call $cbops_multirate.GetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FFB        8A446800                 r2 = r2 XOR r2, r4 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FFC        9816782F                 rMAC = r4 * r0 (int), r5 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FFD        AC17002F                 rMAC = rMAC + r5 * r0 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FFE        67180000                 rMAC = rMAC - M0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x000FFF        00100004                 if NEG rMAC = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001000        0031000F                 r1 = rMAC + Null;
0x001001        02002800                 Null = Null + Null, r0 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001002        D16A0006                 r4 = M[r8 + 6];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001003        9812586F                 rMAC = r0 * r4 (int), r3 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001004        AC15006F                 rMAC = rMAC + r3 * r4 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001005        DD000005                 if EQ jump bXcRmcynioLZT1ppyUnrV6iXPdHrThXpoTLeDL0MujA=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001006        67180000                 rMAC = rMAC - M0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001007        00100004                 if NEG rMAC = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001008        2003001F                 Null = r1 - rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001009        00310005                 if POS r1 = rMAC + Null;

 <bXcRmcynioLZT1ppyUnrV6iXPdHrThXpoTLeDL0MujA=>
0x00100A        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00100B        E1F0F777                 call $cbops_multirate.SetMinimumTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00100C        D10A000F                 Null = M[r8 + 15];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00100D        DD100660                 if NE jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00100E        D15A0002                 r3 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00100F        D55A000F                 M[r8 + 15] = r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001010        016A0010                 r4 = r8 + 16;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001011        512A000B                 I2 = r8 + 11;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001012        51350005                 I3 = r3 + 5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001013        D1050004                 Null = M[r3 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001014        DD000003                 if EQ jump 0qMZ3fz89IgFbGo4dYXj7vwGeyANAgVIJr3Qsj9XHZA=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001015        512A0007                 I2 = r8 + 7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001016        E1F00425                 call $reset_iir_resampler;

 <0qMZ3fz89IgFbGo4dYXj7vwGeyANAgVIJr3Qsj9XHZA=>
0x001017        5F380000                 I3 = I3 + M0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001018        E1F00423                 call $reset_iir_resampler;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001019        50C0000F                 L0 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00101A        DDF00653                 jump $pop_rLink_and_rts;

 <$cbuffer.get_read_address_and_size.its_a_port>
0x00101B        8132001F                 r1 = r0 AND 0x1f;
0x00101C        FD00003F 81029C00        Null = r0 AND 0x3f9c00;
0x00101E        DD000023                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing;
0x00101F        FD0000FF 19405C7E        M[$cbuffer.tmp] = r2 + Null;
0x001021        FD0000FF 19505C7F        M[0xff5c7f] = r3 + Null;
0x001023        01400062                 r2 = Null + 98;
0x001024        65030007                 Null = 7 - r1;
0x001025        00330044                 if NEG r1 = r1 + r2;
0x001026        D153FE7B                 r3 = M[r1 + -389];
0x001027        FD000030 81420000        r2 = r0 AND 0x300000;
0x001029        DD000005                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_endian;
0x00102A        8155FFFB                 r3 = r3 AND 0xfffb;
0x00102B        8D44006B                 r2 = r2 LSHIFT -21;
0x00102C        8D440002                 r2 = r2 LSHIFT 2;
0x00102D        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_endian>
0x00102E        FD00000C 81420000        r2 = r0 AND 0xc0000;
0x001030        DD000005                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_sign_extend;
0x001031        8155FFF7                 r3 = r3 AND 0xfff7;
0x001032        8D44006D                 r2 = r2 LSHIFT -19;
0x001033        8D440003                 r2 = r2 LSHIFT 3;
0x001034        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_sign_extend>
0x001035        FD000003 81428000        r2 = r0 AND 0x38000;
0x001037        DD000005                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_bitwidth;
0x001038        8155FFFC                 r3 = r3 AND 0xfffc;
0x001039        8D440070                 r2 = r2 LSHIFT -16;
0x00103A        8D440000                 r2 = r2 LSHIFT 0;
0x00103B        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_bitwidth>
0x00103C        D553FE7B                 M[r1 + -389] = r3;
0x00103D        FD0000FF 09405C7E        r2 = Null + M[$cbuffer.tmp];
0x00103F        FD0000FF 09505C7F        r3 = Null + M[0xff5c7f];

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing>
0x001041        8122001F                 r0 = r0 AND 0x1f;
0x001042        01300005                 r1 = Null + 5;
0x001043        65020007                 Null = 7 - r0;
0x001044        00220034                 if NEG r0 = r0 + r1;
0x001045        0122FE2B                 r0 = r0 + -469;
0x001046        E430002F                 r1 = Null + 1;
0x001047        DC0D000F                 rts;

 <$iir_1stStage_upsample>
0x001048        59330002                 I3 = I3 + 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001049        22996C00                 r7 = r7 - r7, r4 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00104A        50903C6F                 M1 = Null + r4, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00104B        00A33C4F                 r8 = r1 + r2, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00104C        50607C3F                 I6 = Null + r1, r5 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00104D        70A0006F                 M2 = Null - r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00104E        99460006                 r2 = r4 * 6 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00104F        74B4288F                 M3 = r2 - M0, r0 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001050        5EB65800                 M3 = M3 + I6, r3 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001051        5FB62B00                 M3 = M3 + I6, r0 = M[I2,-1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001052        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001053        51C00006                 L0 = Null + 6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001054        F3E20000                 push FP;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001055        F3A60000                 pop B0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001056        F1070006                 FP = FP + 6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001057        9845007F                 r2 = r3 * r5 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001058        004400B4                 if NEG r2 = r2 + r9;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001059        9434006F                 r1 = r2 * r4 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00105A        E5F00016                 do 7kSMh/7dyjrYVIq2u4159pBBQ5rLXPIbLJEeyHyWpPY=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00105B        02001400                 Null = Null + Null, rMAC = M[I1,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00105C        02009000                 Null = Null + Null, M[I0,M0] = rMAC;

 <W+wkvoOvLOO3660zL5u9KdD6KLx7ZT3SsTV1cyxYDBc=>
0x00105D        5876003F                 I7 = I6 + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00105E        4658403D                 r3 = r3 + M0, r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00105F        CE34403D                 rMAC = r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001060        AE34403D                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001061        7C7B007F                 I7 = M3 - I7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001062        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001063        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001064        AE34403E                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0], r1 = M[I7,M2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001065        AC13004F                 rMAC = rMAC + r1 * r2 (SS);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001066        903100AF                 r1 = rMAC ASHIFT r8;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001067        469800B4                 r7 = r7 + M0, M[I5,M0] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001068        2005006F                 Null = r3 - r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001069        2055005A                 if GE r3 = r3 - r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00106A        9845007F                 r2 = r3 * r5 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00106B        004400B4                 if NEG r2 = r2 + r9;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00106C        9434006F                 r1 = r2 * r4 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00106D        2007004F                 Null = r5 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00106E        DDD0FFEF                 if LE jump W+wkvoOvLOO3660zL5u9KdD6KLx7ZT3SsTV1cyxYDBc=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00106F        03000000                 Null = Null + Null;

 <7kSMh/7dyjrYVIq2u4159pBBQ5rLXPIbLJEeyHyWpPY=>
0x001070        4420D80F                 r0 = Null + I0, M[I2,M0] = r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001071        50C0A80F                 L0 = Null + Null, M[I2,M0] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001072        5F280000                 I2 = I2 + M0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001073        DC0D000F                 rts;

 <$message.send_long>
0x001074        F3D00000                 push rLink;
0x001075        E1F005B9                 call $block_interrupts;
0x001076        0140FFFE                 r2 = Null + -2;
0x001077        01C60005                 r10 = r4 + 5;
0x001078        8DCC007E                 r10 = r10 LSHIFT -2;
0x001079        09302C97                 r1 = Null + M[$message.queue_write_ptr];
0x00107A        8580FFF1                 r6 = Null OR 0xfff1;
0x00107B        E5F0001C                 do $M.message.send_long.long_message_loop;
0x00107C        01230005                 r0 = r1 + 5;
0x00107D        2102006E                 Null = r0 - 110;
0x00107E        00200000                 if EQ r0 = Null + Null;
0x00107F        FD0000FF 29025C96        Null = r0 - M[$message.queue_read_ptr];
0x001081        DD000018                 if EQ jump $M.message.send_long.all_done;
0x001082        E40C003F                 Null = r10 - 1;
0x001083        DD100002                 if NE jump $M.message.send_long.not_last_packet;
0x001084        85880002                 r6 = r6 OR 0x2;

 <$M.message.send_long.not_last_packet>
0x001085        D58327F7                 M[r1 + 10231] = r6;
0x001086        81080001                 Null = r6 AND 0x1;
0x001087        DD000006                 if EQ jump $M.message.send_long.not_first_message;
0x001088        E488003F                 r6 = r6 - 1;
0x001089        D55327F8                 M[r1 + 10232] = r3;
0x00108A        D56327F9                 M[r1 + 10233] = r4;
0x00108B        21770002                 r5 = r5 - 2;
0x00108C        DDF00005                 jump $M.message.send_long.last_two_words;

 <$M.message.send_long.not_first_message>
0x00108D        D047000F                 r2 = M[r5 + Null];
0x00108E        D54327F8                 M[r1 + 10232] = r2;
0x00108F        D1470001                 r2 = M[r5 + 1];
0x001090        D54327F9                 M[r1 + 10233] = r2;

 <$M.message.send_long.last_two_words>
0x001091        D1470002                 r2 = M[r5 + 2];
0x001092        D54327FA                 M[r1 + 10234] = r2;
0x001093        D1470003                 r2 = M[r5 + 3];
0x001094        D54327FB                 M[r1 + 10235] = r2;
0x001095        01770004                 r5 = r5 + 4;
0x001096        0032000F                 r1 = r0 + Null;

 <$M.message.send_long.long_message_loop>
0x001097        19202C97                 M[$message.queue_write_ptr] = r0 + Null;
0x001098        E1F0FF33                 call $message.private.try_to_send_message;

 <$M.message.send_long.all_done>
0x001099        E1F0057E                 call $interrupt.unblock;
0x00109A        DDF005D3                 jump $pop_rLink_and_rts;

 <$math.fft>
0x00109B        F3D0002D                 push rLink, r0 = M[I7,1];
0x00109C        F371006D                 push I7, r4 = M[I7,1];
0x00109D        51900001                 M1 = Null + 1;
0x00109E        51B0FFFF                 M3 = Null + -1;
0x00109F        5C89009F                 M0 = M1 + M1;
0x0010A0        91B2007E                 r9 = r0 ASHIFT -2;
0x0010A1        4490009F                 r7 = Null + M1;
0x0010A2        F360006F                 push r4, r4 = M[I7,-1];
0x0010A3        F3600000                 push r4;

 <$M.math.fft.stage_loop>
0x0010A4        513011AA                 I3 = Null + 4522;
0x0010A5        FD0000FF 51703D81        I7 = Null + -49791;
0x0010A7        50AB00BF                 M2 = r9 + r9;
0x0010A8        00D95D0F                 rLink = r7 + Null, r3 = M[I3,M1];
0x0010A9        0299006D                 r7 = r7 + r7, r4 = M[I7,M1];
0x0010AA        0085000F                 r6 = r3 + Null;
0x0010AB        F129FFFE                 I2 = M[SP + -0x2];
0x0010AC        5842000F                 I4 = I2 + Null;
0x0010AD        F169FFFF                 I6 = M[SP + -0x1];
0x0010AE        5C1200AF                 I1 = I2 + M2;
0x0010AF        5806000F                 I0 = I6 + Null;
0x0010B0        5C5600AF                 I5 = I6 + M2;

 <$M.math.fft.group_loop>
0x0010B1        00CB55BF                 r10 = r9 + r9, r3 = M[I1,M1];
0x0010B2        EED80075                 rMACB = r3 * r6, r0 = r2 + rMAC, r5 = M[I5,M1];
0x0010B3        EBF64131                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M1], r1 = M[I4,M1];
0x0010B4        C0D5576F                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3];
0x0010B5        E5F00005                 do $M.math.fft.bfly_loop;
0x0010B6        D778A931                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M1] = r0, r1 = M[I4,M1];
0x0010B7        EED8A477                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M0] = r0, r5 = M[I5,M3];
0x0010B8        EBE741A9                 rMACB = rMACB - r4 * r5, r0 = r2 - rMAC, r2 = M[I0,M1], M[I6,M1] = r0;
0x0010B9        E25657A4                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3], M[I5,M0] = r0;

 <$M.math.fft.bfly_loop>
0x0010BA        5E5A0022                 I5 = I5 + M2, r0 = M[I4,M2];
0x0010BB        5E0A262A                 I0 = I0 + M2, r0 = M[I1,M2], r0 = M[I6,M2];
0x0010BC        5E5B2D6D                 I5 = I5 + M3, r0 = M[I3,M1], r4 = M[I7,M1];
0x0010BD        00822A0F                 r6 = r0 + Null, r0 = M[I2,M2];
0x0010BE        66D92353                 rLink = rLink - M1, r0 = M[I0,M3], r3 = M[I4,M3];
0x0010BF        DD10FFF2                 if NE jump $M.math.fft.group_loop;
0x0010C0        91BB007F                 r9 = r9 ASHIFT -1;
0x0010C1        910B007E                 Null = r9 ASHIFT -2;
0x0010C2        DD10FFE2                 if NE jump $M.math.fft.stage_loop;
0x0010C3        DDF0FDA0                 jump $math.fft_penpenultimate_stage;

 <$math.fft_penultimate_stage>
0x0010C4        513011AA                 I3 = Null + 4522;
0x0010C5        FD0000FF 51703D81        I7 = Null + -49791;
0x0010C7        64C95D9F                 r10 = r7 - M1, r3 = M[I3,M1];
0x0010C8        0299006D                 r7 = r7 + r7, r4 = M[I7,M1];
0x0010C9        0085000F                 r6 = r3 + Null;
0x0010CA        F129FFFE                 I2 = M[SP + -0x2];
0x0010CB        5842000F                 I4 = I2 + Null;
0x0010CC        F169FFFF                 I6 = M[SP + -0x1];
0x0010CD        59120002                 I1 = I2 + 2;
0x0010CE        5806000F                 I0 = I6 + Null;
0x0010CF        59560002                 I5 = I6 + 2;
0x0010D0        51A00003                 M2 = Null + 3;
0x0010D1        5C8A559F                 M0 = M2 + M1, r3 = M[I1,M1];
0x0010D2        EED80075                 rMACB = r3 * r6, r0 = r2 + rMAC, r5 = M[I5,M1];
0x0010D3        EBF64131                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M1], r1 = M[I4,M1];
0x0010D4        C0D5576F                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3];
0x0010D5        D778A932                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M1] = r0, r1 = M[I4,M2];
0x0010D6        EED8A477                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M0] = r0, r5 = M[I5,M3];
0x0010D7        EBF642A9                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M2], M[I6,M1] = r0;
0x0010D8        E2565DA4                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I3,M1], M[I5,M0] = r0;
0x0010D9        D778AA31                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M2] = r0, r1 = M[I4,M1];
0x0010DA        0085550F                 r6 = r3 + Null, r3 = M[I1,M1];
0x0010DB        7E18006D                 I1 = I1 - M0, r4 = M[I7,M1];
0x0010DC        E5F0000C                 do $M.math.fft_penultimate_stage.penultimate_loop;
0x0010DD        EED8A475                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M0] = r0, r5 = M[I5,M1];
0x0010DE        7F580000                 I5 = I5 - M0;
0x0010DF        EBF641AA                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M1], M[I6,M2] = r0;
0x0010E0        E25657A4                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I1,M3], M[I5,M0] = r0;
0x0010E1        D778A932                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M1] = r0, r1 = M[I4,M2];
0x0010E2        EED8A477                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M0] = r0, r5 = M[I5,M3];
0x0010E3        EBF642A9                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M2], M[I6,M1] = r0;
0x0010E4        E2565DA4                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I3,M1], M[I5,M0] = r0;
0x0010E5        D778AA31                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M2] = r0, r1 = M[I4,M1];
0x0010E6        0085550F                 r6 = r3 + Null, r3 = M[I1,M1];
0x0010E7        7E18006D                 I1 = I1 - M0, r4 = M[I7,M1];

 <$M.math.fft_penultimate_stage.penultimate_loop>
0x0010E8        EE80A577                 rMACB = rMACB * Null, r0 = r2 + rMAC, M[I1,M1] = r0, r5 = M[I5,M3];
0x0010E9        79550002                 I5 = I5 - 2;
0x0010EA        EF8000AA                 rMACB = rMACB * Null, r0 = r2 - rMAC, M[I6,M2] = r0;
0x0010EB        020000A5                 Null = Null + Null, M[I5,M1] = r0;
0x0010EC        DDF00178                 jump $math.fft_last_stage;
...

 <$SystemSleep>
0x001111        E430002F                 r1 = Null + 1;
0x001112        19302C9D                 M[$frame_sync.sync_flag] = r1 + Null;
0x001113        0930FE71                 r1 = Null + M[0xfffe71];
0x001114        FD0000FF 09605C95        r4 = Null + M[$interrupt.total_time];
0x001116        0980FE4D                 r6 = Null + M[0xfffe4d];
0x001117        0120003F                 r0 = Null + 63;
0x001118        1920FE4D                 M[0xfffe4d] = r0 + Null;

 <$M.Sleep.jp_wait>
0x001119        09002C9D                 Null = Null + M[$frame_sync.sync_flag];
0x00111A        DD10FFFF                 if NE jump $M.Sleep.jp_wait;
0x00111B        1980FE4D                 M[0xfffe4d] = r6 + Null;
0x00111C        0950FE71                 r3 = Null + M[0xfffe71];
0x00111D        2035003F                 r1 = r3 - r1;
0x00111E        FD0000FF 29665C95        r4 = r4 - M[$interrupt.total_time];
0x001120        03360000                 r1 = r1 + r4;
0x001121        09202C83                 r0 = Null + M[$M.Sleep.TotalTime];
0x001122        03320000                 r1 = r1 + r0;
0x001123        19302C83                 M[$M.Sleep.TotalTime] = r1 + Null;
0x001124        FD0000FF 09205C83        r0 = Null + M[$M.Sleep.LastUpdateTm];
0x001126        2075002F                 r5 = r3 - r0;
0x001127        FD00000F 01104240        rMAC = Null + 1000000;
0x001129        2007001F                 Null = r5 - rMAC;
0x00112A        DC0D0004                 if NEG rts;
0x00112B        91E1007F                 rMAC = rMAC ASHIFT -1 (MI);
0x00112C        D9070000                 Div = rMAC / r5;
0x00112D        2017003F                 rMAC = r5 - r1;
0x00112E        FD0000FF 19505C83        M[$M.Sleep.LastUpdateTm] = r3 + Null;
0x001130        19002C83                 M[$M.Sleep.TotalTime] = Null + Null;
0x001131        D9500001                 r3 = DivResult;
0x001132        9415001F                 rMAC = r3 * rMAC (frac);
0x001133        FD000001 01500625        r3 = Null + 67109;
0x001135        97150000                 rMAC = rMAC * r3 (frac);
0x001136        19102C84                 M[$M.Sleep.Mips] = rMAC + Null;
0x001137        DC0D000F                 rts;

 <$cbuffer.calc_amount_space.its_a_port>
0x001138        8132001F                 r1 = r0 AND 0x1f;
0x001139        2133000C                 r1 = r1 - 12;
0x00113A        FD0000FF D1434BF4        r2 = M[r1 + -46092];
0x00113C        00200000                 if EQ r0 = Null + Null;
0x00113D        DC0D0000                 if EQ rts;
0x00113E        FD0000FF 19505C7E        M[$cbuffer.tmp] = r3 + Null;
0x001140        D054000F                 r3 = M[r2 + Null];
0x001141        D1432AB8                 r2 = M[r1 + 10936];
0x001142        D3400000                 r2 = M[r2 + Null];
0x001143        23540000                 r3 = r3 - r2;
0x001144        FD0000FF D14347F4        r2 = M[r1 + -47116];
0x001146        E434003F                 r1 = r2 - 1;
0x001147        8035003F                 r1 = r3 AND r1;
0x001148        00340000                 if EQ r1 = r2 + Null;
0x001149        E433003F                 r1 = r1 - 1;
0x00114A        FD0000FF 09505C7E        r3 = Null + M[$cbuffer.tmp];
0x00114C        FD000003 81228000        r0 = r0 AND 0x38000;
0x00114E        DD00000F                 if EQ jump $M.cbuffer.calc_amount_space.its_a_port.port_width_16bit;
0x00114F        FD000001 21028000        Null = r0 - 98304;
0x001151        DD00000C                 if EQ jump $M.cbuffer.calc_amount_space.its_a_port.port_width_16bit;
0x001152        DD400009                 if NEG jump $M.cbuffer.calc_amount_space.its_a_port.port_width_8bit;
0x001153        FD000002 21028000        Null = r0 - 163840;
0x001155        DD000003                 if EQ jump $M.cbuffer.calc_amount_space.its_a_port.port_width_24bit;

 <$M.cbuffer.calc_amount_space.its_a_port.port_width_32bit>
0x001156        9123007E                 r0 = r1 ASHIFT -2;
0x001157        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_space.its_a_port.port_width_24bit>
0x001158        E423003F                 r0 = r1 - 1;
0x001159        95222AAB                 r0 = r0 * 0.333343505859375 (frac);
0x00115A        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_space.its_a_port.port_width_8bit>
0x00115B        0023000F                 r0 = r1 + Null;
0x00115C        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_space.its_a_port.port_width_16bit>
0x00115D        9123007F                 r0 = r1 ASHIFT -1;
0x00115E        DC0D000F                 rts;

 <$audio_out_copy_handler>
0x00115F        F3D00000                 push rLink;
0x001160        19002C9D                 M[$frame_sync.sync_flag] = Null + Null;
0x001161        FD0000FF 09005C80        Null = Null + M[$M.dac_out.dac_sr_flag];
0x001163        E110F8A2                 if NE call $ConfigureFrontEnd;
0x001164        FD0000FF 09005C8C        Null = Null + M[$M.A2DP_IN.codec_sr_flag];
0x001166        E110F89F                 if NE call $ConfigureFrontEnd;
0x001167        09202C4E                 r0 = Null + M[0x2c4e];
0x001168        19202C82                 M[$M.detect_end_of_aux_stream.last_write_address] = r0 + Null;
0x001169        FD0000FF 01A05BE7        r8 = Null + -42009;
0x00116B        E1F01227                 call $calc_actual_samples;
0x00116C        01A01DF6                 r8 = Null + 7670;
0x00116D        E1F0F5A7                 call $cbops_multirate.copy;
0x00116E        01A02B94                 r8 = Null + 11156;
0x00116F        E1F0F5A5                 call $cbops_multirate.copy;
0x001170        E1F01EED                 call $detect_end_of_aux_stream;
0x001171        01A02B88                 r8 = Null + 11144;
0x001172        E1F0F5A2                 call $cbops_multirate.copy;
0x001173        FD0000FF 01A05B97        r8 = Null + -42089;
0x001175        E1F0F59F                 call $cbops_multirate.copy;
0x001176        013021FC                 r1 = Null + 8700;
0x001177        014002EE                 r2 = Null + 750;
0x001178        0150115F                 r3 = Null + 4447;
0x001179        E1F004ED                 call $timer.schedule_event_in_period;
0x00117A        DDF004F3                 jump $pop_rLink_and_rts;

 <$timer.schedule_event_at>
0x00117B        F3D00000                 push rLink;
0x00117C        E1F004B2                 call $block_interrupts;
0x00117D        01C00032                 r10 = Null + 50;
0x00117E        FD0000FF 01605C9A        r4 = Null + -41830;
0x001180        FD0000FF 09205C9A        r0 = Null + M[$timer.last_addr];
0x001182        E5F00008                 do $M.timer.schedule_event_at.loop;
0x001183        E402002F                 Null = r0 + 1;
0x001184        DD000007                 if EQ jump $M.timer.schedule_event_at.insert_here;
0x001185        D1720001                 r5 = M[r0 + 1];
0x001186        2004007F                 Null = r2 - r5;
0x001187        DD400004                 if NEG jump $M.timer.schedule_event_at.insert_here;
0x001188        0062000F                 r4 = r0 + Null;
0x001189        D1220000                 r0 = M[r0 + 0];

 <$M.timer.schedule_event_at.loop>
0x00118A        E1F0244D                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;

 <$M.timer.schedule_event_at.insert_here>
0x00118B        D5360000                 M[r4 + 0] = r1;
0x00118C        D5230000                 M[r1 + 0] = r0;
0x00118D        D5430001                 M[r1 + 1] = r2;
0x00118E        D5530002                 M[r1 + 2] = r3;
0x00118F        09502C9A                 r3 = Null + M[$timer.id];
0x001190        D5530003                 M[r1 + 3] = r3;
0x001191        E425002F                 r0 = r3 + 1;
0x001192        20200050                 if EQ r0 = Null - r3;
0x001193        19202C9A                 M[$timer.id] = r0 + Null;
0x001194        0900FE1F                 Null = Null + M[0xfffe1f];
0x001195        DD000003                 if EQ jump $M.timer.schedule_event_at.no_current_timer_set;
0x001196        2904FE21                 Null = r2 - M[0xfffe21];
0x001197        DD500004                 if POS jump $M.timer.schedule_event_at.done;

 <$M.timer.schedule_event_at.no_current_timer_set>
0x001198        1940FE21                 M[0xfffe21] = r2 + Null;
0x001199        E420002F                 r0 = Null + 1;
0x00119A        1920FE1F                 M[0xfffe1f] = r0 + Null;

 <$M.timer.schedule_event_at.done>
0x00119B        E1F0047C                 call $interrupt.unblock;
0x00119C        DDF004D1                 jump $pop_rLink_and_rts;
...

 <$cbuffer.calc_amount_data.its_a_port>
0x0011C1        8132001F                 r1 = r0 AND 0x1f;
0x0011C2        FD0000FF D1434BE8        r2 = M[r1 + -46104];
0x0011C4        00200000                 if EQ r0 = Null + Null;
0x0011C5        DC0D0000                 if EQ rts;
0x0011C6        D3400000                 r2 = M[r2 + Null];
0x0011C7        FD0000FF 19505C7E        M[$cbuffer.tmp] = r3 + Null;
0x0011C9        D1532AAC                 r3 = M[r1 + 10924];
0x0011CA        D3500000                 r3 = M[r3 + Null];
0x0011CB        2054005F                 r3 = r2 - r3;
0x0011CC        FD0000FF D14347E8        r2 = M[r1 + -47128];
0x0011CE        E434003F                 r1 = r2 - 1;
0x0011CF        8035003F                 r1 = r3 AND r1;
0x0011D0        FD0000FF 09505C7E        r3 = Null + M[$cbuffer.tmp];
0x0011D2        FD000003 81228000        r0 = r0 AND 0x38000;
0x0011D4        DD00000F                 if EQ jump $M.cbuffer.calc_amount_data.its_a_port.port_width_16bit;
0x0011D5        FD000001 21028000        Null = r0 - 98304;
0x0011D7        DD00000C                 if EQ jump $M.cbuffer.calc_amount_data.its_a_port.port_width_16bit;
0x0011D8        DD400009                 if NEG jump $M.cbuffer.calc_amount_data.its_a_port.port_width_8bit;
0x0011D9        FD000002 21028000        Null = r0 - 163840;
0x0011DB        DD000003                 if EQ jump $M.cbuffer.calc_amount_data.its_a_port.port_width_24bit;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_32bit>
0x0011DC        9123007E                 r0 = r1 ASHIFT -2;
0x0011DD        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_24bit>
0x0011DE        E423003F                 r0 = r1 - 1;
0x0011DF        95222AAB                 r0 = r0 * 0.333343505859375 (frac);
0x0011E0        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_8bit>
0x0011E1        0023000F                 r0 = r1 + Null;
0x0011E2        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_16bit>
0x0011E3        9123007F                 r0 = r1 ASHIFT -1;
0x0011E4        DC0D000F                 rts;

 <$M.audio_proc.stereo_copy.Process.func>
0x0011E5        F3D00000                 push rLink;
0x0011E6        D1290000                 r0 = M[r7 + 0];
0x0011E7        E1F00472                 call $frmbuffer.get_buffer;
0x0011E8        5000002F                 I0 = Null + r0;
0x0011E9        50C0003F                 L0 = Null + r1;
0x0011EA        D1290001                 r0 = M[r7 + 1];
0x0011EB        E1F0046E                 call $frmbuffer.get_buffer;
0x0011EC        5040002F                 I4 = Null + r0;
0x0011ED        50E0003F                 L4 = Null + r1;
0x0011EE        00C5000F                 r10 = r3 + Null;
0x0011EF        D1290002                 r0 = M[r7 + 2];
0x0011F0        E1F0047B                 call $frmbuffer.set_frame_size;
0x0011F1        E1F00468                 call $frmbuffer.get_buffer;
0x0011F2        5010002F                 I1 = Null + r0;
0x0011F3        50D0003F                 L1 = Null + r1;
0x0011F4        005C000F                 r3 = r10 + Null;
0x0011F5        D1290003                 r0 = M[r7 + 3];
0x0011F6        E1F00475                 call $frmbuffer.set_frame_size;
0x0011F7        E1F00462                 call $frmbuffer.get_buffer;
0x0011F8        5050002F                 I5 = Null + r0;
0x0011F9        50F0003F                 L5 = Null + r1;
0x0011FA        F3D40000                 pop rLink;
0x0011FB        E5F00003                 do $M.audio_proc.stereo_copy.Process.loop_copy_data;
0x0011FC        03002141                 Null = Null + Null, r0 = M[I0,1], r2 = M[I4,1];
0x0011FD        0300A5C5                 Null = Null + Null, M[I1,1] = r0, M[I5,1] = r2;

 <$M.audio_proc.stereo_copy.Process.loop_copy_data>
0x0011FE        50C0000F                 L0 = Null + Null;
0x0011FF        50D0000F                 L1 = Null + Null;
0x001200        50E0000F                 L4 = Null + Null;
0x001201        50F0000F                 L5 = Null + Null;
0x001202        DC0D000F                 rts;
...

 <M0+ho0//U4jMJgNcB+ZcXvo5yYB0hK18TCZ0w4bm56Y=>
0x001242        D15A0000                 r3 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001243        99550003                 r3 = r3 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001244        03590000                 r3 = r3 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001245        D1250002                 r0 = M[r3 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001246        D52A0002                 M[r8 + 2] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001247        D1250000                 r0 = M[r3 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001248        D1220000                 r0 = M[r0 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001249        D5250002                 M[r3 + 2] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00124A        DC0D000F                 rts;

 <pT9/S5aPZnWV1YuKmASVs0YLU+KDeLaM4hfLknKzkzA=>
0x00124B        D13A0000                 r1 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00124C        99330003                 r1 = r1 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00124D        03930000                 r7 = r7 + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00124E        D1890002                 r6 = M[r7 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00124F        D17A0002                 r5 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001250        2007008F                 Null = r5 - r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001251        DC0D0005                 if POS rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001252        D16A0001                 r4 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001253        2008006F                 Null = r6 - r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001254        00860005                 if POS r6 = r4 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001255        D5890002                 M[r7 + 2] = r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001256        7097008F                 M1 = r5 - r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001257        DC0D0005                 if POS rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001258        D1790000                 r5 = M[r7 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001259        D1290001                 r0 = M[r7 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00125A        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00125B        D1270000                 r0 = M[r5 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00125C        50C0002F                 L0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00125D        64C0519F                 r10 = Null - M1, r3 = M[I0,M1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00125E        4420000F                 r0 = Null + I0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00125F        D5290001                 M[r7 + 1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001260        E5F00002                 do 7SJ/Ke4Kgu8gb93JXE5KGt8II1P+U0rUyqLqPWIo5wU=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001261        0300D100                 Null = Null + Null, M[I0,1] = r3;

 <7SJ/Ke4Kgu8gb93JXE5KGt8II1P+U0rUyqLqPWIo5wU=>
0x001262        50C0000F                 L0 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001263        DC0D000F                 rts;

 <$math.fft_last_stage>
0x001264        513011AA                 I3 = Null + 4522;
0x001265        FD0000FF 51703D81        I7 = Null + -49791;
0x001267        64C95D9F                 r10 = r7 - M1, r3 = M[I3,M1];
0x001268        0085000F                 r6 = r3 + Null;
0x001269        F129FFFE                 I2 = M[SP + -0x2];
0x00126A        5842000F                 I4 = I2 + Null;
0x00126B        F169FFFF                 I6 = M[SP + -0x1];
0x00126C        59120001                 I1 = I2 + 1;
0x00126D        5806000F                 I0 = I6 + Null;
0x00126E        59560001                 I5 = I6 + 1;
0x00126F        5FBB006D                 M3 = M3 + M3, r4 = M[I7,1];
0x001270        51800002                 M0 = Null + 2;
0x001271        7CA854BF                 M2 = M0 - M3, r3 = M[I1,M0];
0x001272        EED80074                 rMACB = r3 * r6, r0 = r2 + rMAC, r5 = M[I5,M0];
0x001273        EBF64030                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M0], r1 = M[I4,M0];
0x001274        C0D55D6F                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I3,M1];
0x001275        D778A86D                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M0] = r0, r4 = M[I7,M1];
0x001276        0085570F                 r6 = r3 + Null, r3 = M[I1,M3];
0x001277        02000030                 Null = Null + Null, r1 = M[I4,M0];
0x001278        E5F00007                 do $M.math.fft_last_stage.last_loop;
0x001279        EED8A677                 rMACB = r3 * r6, r0 = r2 + rMAC, M[I1,M2] = r0, r5 = M[I5,M3];
0x00127A        EBF640A8                 rMACB = rMACB - r5 * r4, r0 = r2 - rMAC, r2 = M[I0,M0], M[I6,M0] = r0;
0x00127B        E2565DA6                 rMAC = r3 * r4, r0 = r1 + rMACB, r3 = M[I3,M1], M[I5,M2] = r0;
0x00127C        D778A830                 rMAC = rMAC + r5 * r6, r0 = r1 - rMACB, M[I2,M0] = r0, r1 = M[I4,M0];
0x00127D        0300006D                 Null = Null + Null, r4 = M[I7,1];
0x00127E        0085570F                 r6 = r3 + Null, r3 = M[I1,M3];

 <$M.math.fft_last_stage.last_loop>
0x00127F        F1250080                 SP = SP - 0x2, popm <I7>;
0x001280        EE80A577                 rMACB = rMACB * Null, r0 = r2 + rMAC, M[I1,M1] = r0, r5 = M[I5,M3];
0x001281        EF8000A8                 rMACB = rMACB * Null, r0 = r2 - rMAC, M[I6,M0] = r0;
0x001282        F3D4001F                 pop rLink, rMAC = M[I7,-1];
0x001283        020000A5                 Null = Null + Null, M[I5,M1] = r0;
0x001284        DC0D000F                 rts;

 <pjcD0DeOfDMK5SNzVA40kCUIG1gyywWfB5gzAaLVAG8=>
0x001285        0130001D                 r1 = Null + 29;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001286        DC0D000F                 rts;

 <$iir_resamplerv2.iir_19_s5>
0x001287        9041388F                 r2 = rMAC ASHIFT r6, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001288        CF433941                 rMAC = r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001289        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00128A        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00128B        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00128C        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00128D        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00128E        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00128F        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001290        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001291        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001292        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001293        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001294        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001295        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001296        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001297        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001298        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001299        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00129A        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00129B        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00129C        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00129D        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00129E        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00129F        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012A0        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012A1        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012A2        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012A3        BF433900                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012A4        93E30000                 rMAC = rMAC ASHIFT r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012A5        DC0D000F                 rts;

 <$pskey.result_message_handler>
0x0012A6        FD000000 21028008        Null = r0 - 32776;
0x0012A8        DD000003                 if EQ jump $M.pskey.result_message_handler.failure;
0x0012A9        D035000F                 r1 = M[r3 + Null];
0x0012AA        DDF00002                 jump $M.pskey.result_message_handler.ready;

 <$M.pskey.result_message_handler.failure>
0x0012AB        E440003F                 r2 = Null - 1;

 <$M.pskey.result_message_handler.ready>
0x0012AC        19002C99                 M[$pskey.request_in_progress] = Null + Null;
0x0012AD        FD0000FF 01705C99        r5 = Null + -41831;
0x0012AF        FD0000FF 09205C99        r0 = Null + M[$pskey.last_addr];

 <$M.pskey.result_message_handler.find_structure_loop>
0x0012B1        D1620001                 r4 = M[r0 + 1];
0x0012B2        2003006F                 Null = r1 - r4;
0x0012B3        DD000006                 if EQ jump $M.pskey.result_message_handler.structure_found;
0x0012B4        0072000F                 r5 = r0 + Null;
0x0012B5        D1220000                 r0 = M[r0 + 0];
0x0012B6        E402002F                 Null = r0 + 1;
0x0012B7        DD10FFFA                 if NE jump $M.pskey.result_message_handler.find_structure_loop;
0x0012B8        DC0D000F                 rts;

 <$M.pskey.result_message_handler.structure_found>
0x0012B9        F3D00000                 push rLink;
0x0012BA        D1620000                 r4 = M[r0 + 0];
0x0012BB        D5670000                 M[r5 + 0] = r4;
0x0012BC        D1220002                 r0 = M[r0 + 2];
0x0012BD        E002000F                 call r0;
0x0012BE        FD0000FF 09305C99        r1 = Null + M[$pskey.last_addr];
0x0012C0        E403002F                 Null = r1 + 1;
0x0012C1        E1100057                 if NE call $pskey.private.send_request;
0x0012C2        DDF003AB                 jump $pop_rLink_and_rts;

 <qlmcX3bDEgj+PD2ZkeB/hVfwOv/U4WUBfVra03hO+IY=>
0x0012C3        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012C4        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012C5        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012C6        E1F0F4AE                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012C7        E4C4003F                 r10 = r2 - 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012C8        DD4003A5                 if NEG jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012C9        E459002F                 r3 = r7 + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012CA        D025002F                 r0 = M[r3 + r0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012CB        D035003F                 r1 = M[r3 + r1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012CC        2002003F                 Null = r0 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012CD        DD0003A0                 if EQ jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012CE        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012CF        E1F0F4BA                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012D0        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012D1        50C0003F                 L0 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012D2        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012D3        E1F0F4B6                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012D4        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012D5        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012D6        03002100                 Null = Null + Null, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012D7        E5F00002                 do rSUzZ1WY+dyM0x0VVZAyw6ctuBxknXSJ6v4PugA0+Xk=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012D8        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <rSUzZ1WY+dyM0x0VVZAyw6ctuBxknXSJ6v4PugA0+Xk=>
0x0012D9        7FCC00A1                 L0 = L0 - L0, M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012DA        51E00000                 L4 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012DB        DDF00392                 jump $pop_rLink_and_rts;

 <HSNzcjOSoehXvDNTFVRmpWObgsuc8rAdgTX/nvaNXyA=>
0x0012DC        0130001B                 r1 = Null + 27;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012DD        DC0D000F                 rts;

 <$iir_resamplerv2.iir_19_s4>
0x0012DE        9041388F                 r2 = rMAC ASHIFT r6, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012DF        CF433941                 rMAC = r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E0        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E1        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E2        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E3        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E4        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E5        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E6        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E7        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E8        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012E9        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012EA        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012EB        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012EC        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012ED        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012EE        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012EF        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F0        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F1        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F2        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F3        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F4        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F5        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F6        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F7        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F8        BF433900                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012F9        93E30000                 rMAC = rMAC ASHIFT r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012FA        DC0D000F                 rts;

 <$cbops.sidetone_filter_op.SetMode>
0x0012FB        D14A0002                 r2 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012FC        D12A0007                 r0 = M[r8 + 7];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012FD        83240000                 r0 = r0 AND r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012FE        D52A0005                 M[r8 + 5] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0012FF        DC0D0000                 if EQ rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001300        FD00007F 0120FFFF        r0 = Null + 8388607;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001302        D52A0005                 M[r8 + 5] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001303        D19A0003                 r7 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001304        0020000F                 r0 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001305        D1090011                 Null = M[r7 + 17];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001306        DD00000E                 if EQ jump tZEv30Wz4DC7ggsT4ZSR7VL0kNFHxSvWmtQveq90NLI=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001307        D1290002                 r0 = M[r7 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001308        FD0000FF 8102FFFE        Null = r0 AND 0xfffffe;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00130A        DD00000A                 if EQ jump tZEv30Wz4DC7ggsT4ZSR7VL0kNFHxSvWmtQveq90NLI=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00130B        D14A0006                 r2 = M[r8 + 6];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00130C        D3400000                 r2 = M[r2 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00130D        D1590004                 r3 = M[r7 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00130E        2004005F                 Null = r2 - r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00130F        DDC00005                 if GT jump tZEv30Wz4DC7ggsT4ZSR7VL0kNFHxSvWmtQveq90NLI=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001310        01200000                 r0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001311        D1590003                 r3 = M[r7 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001312        2004005F                 Null = r2 - r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001313        DC0D0005                 if POS rts;

 <tZEv30Wz4DC7ggsT4ZSR7VL0kNFHxSvWmtQveq90NLI=>
0x001314        D52A0004                 M[r8 + 4] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001315        DC0D000F                 rts;

 <$cbops.sidestone_filter_op.InitializeFilter>
0x001316        0199000B                 r7 = r7 + 11;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001317        DDF02230                 jump $audio_proc.peq.initialize;

 <$pskey.private.send_request>
0x001318        09002C99                 Null = Null + M[$pskey.request_in_progress];
0x001319        DC0D0001                 if NE rts;
0x00131A        F3D00000                 push rLink;
0x00131B        FD0000FF 09405C41        r2 = Null + M[0xff5c41];
0x00131D        E1F000F1                 call $timer.cancel_event;
0x00131E        E1F00317                 call $message.send_queue_space;
0x00131F        21020005                 Null = r0 - 5;
0x001320        DD400009                 if NEG jump $M.pskey.private.send_request.try_to_send_later;
0x001321        FD0000FF 09305C99        r1 = Null + M[$pskey.last_addr];
0x001323        85408006                 r2 = Null OR 0x8006;
0x001324        D1530001                 r3 = M[r1 + 1];
0x001325        E1F0016E                 call $message.send_short;
0x001326        E420002F                 r0 = Null + 1;
0x001327        19202C99                 M[$pskey.request_in_progress] = r0 + Null;
0x001328        DDF00345                 jump $pop_rLink_and_rts;

 <$M.pskey.private.send_request.try_to_send_later>
0x001329        FD0000FF 01305C3E        r1 = Null + -41922;
0x00132B        01402710                 r2 = Null + 10000;
0x00132C        01501318                 r3 = Null + 4888;
0x00132D        E1F0033C                 call $timer.schedule_event_in;
0x00132E        DDF0033F                 jump $pop_rLink_and_rts;

 <nWw4S/wjdlxiXwNav0bO5x9yO67JIACBhzQ1eS6u31Y=>
0x00132F        01300019                 r1 = Null + 25;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001330        DC0D000F                 rts;

 <$iir_resamplerv2.iir_19_s3>
0x001331        9041388F                 r2 = rMAC ASHIFT r6, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001332        CF433941                 rMAC = r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001333        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001334        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001335        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001336        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001337        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001338        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001339        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00133A        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00133B        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00133C        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00133D        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00133E        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00133F        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001340        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001341        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001342        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001343        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001344        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001345        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001346        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001347        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001348        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001349        BF433900                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00134A        93E30000                 rMAC = rMAC ASHIFT r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00134B        DC0D000F                 rts;
...

 <bow6qWSvIpsXViMPvsWSNO28/oo6bH0VI1YZ718i2MA=>
0x001368        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001369        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00136A        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00136B        E1F0F409                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00136C        E4C4003F                 r10 = r2 - 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00136D        DD400300                 if NEG jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00136E        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00136F        E1F0F41A                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001370        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001371        50C0003F                 L0 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001372        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001373        E1F0F416                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001374        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001375        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001376        D14A0002                 r2 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001377        03002100                 Null = Null + Null, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001378        93240000                 r0 = r0 ASHIFT r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001379        E5F00003                 do v8DvLpJ+PsSjppDUpgAwmNFlBDLqI2Ne6d34PQkZCfE=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00137A        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00137B        93240000                 r0 = r0 ASHIFT r2;

 <v8DvLpJ+PsSjppDUpgAwmNFlBDLqI2Ne6d34PQkZCfE=>
0x00137C        7FCC00A1                 L0 = L0 - L0, M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00137D        51E00000                 L4 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00137E        DDF002EF                 jump $pop_rLink_and_rts;

 <$timer.service_routine>
0x00137F        F3D00000                 push rLink;

 <$M.timer.service_routine.search_again>
0x001380        FD0000FF 09305C9A        r1 = Null + M[$timer.last_addr];
0x001382        E403002F                 Null = r1 + 1;
0x001383        DD000012                 if EQ jump $M.timer.service_routine.no_more_timers;
0x001384        D1230001                 r0 = M[r1 + 1];
0x001385        2942FE71                 r2 = r0 - M[0xfffe71];
0x001386        21040000                 Null = r2 - 0;
0x001387        DDC00009                 if GT jump $M.timer.service_routine.setup_a_new_hardware_timer;
0x001388        D1D30002                 rLink = M[r1 + 2];
0x001389        D1230003                 r0 = M[r1 + 3];
0x00138A        D5030003                 M[r1 + 3] = Null;
0x00138B        D1430000                 r2 = M[r1 + 0];
0x00138C        FD0000FF 19405C9A        M[$timer.last_addr] = r2 + Null;
0x00138E        E00D000F                 call rLink;
0x00138F        DDF0FFF1                 jump $M.timer.service_routine.search_again;

 <$M.timer.service_routine.setup_a_new_hardware_timer>
0x001390        1900FE1F                 M[0xfffe1f] = Null + Null;
0x001391        1920FE21                 M[0xfffe21] = r0 + Null;
0x001392        E450002F                 r3 = Null + 1;
0x001393        1950FE1F                 M[0xfffe1f] = r3 + Null;
0x001394        DDF002D9                 jump $pop_rLink_and_rts;

 <$M.timer.service_routine.no_more_timers>
0x001395        1900FE1F                 M[0xfffe1f] = Null + Null;
0x001396        DDF002D7                 jump $pop_rLink_and_rts;

 <$frame_sync.update_sync_streams_ind>
0x001397        D18B000C                 r6 = M[r9 + 12];
0x001398        D14B0004                 r2 = M[r9 + 4];
0x001399        D15B0009                 r3 = M[r9 + 9];
0x00139A        23540000                 r3 = r3 - r2;
0x00139B        DD400005                 if NEG jump $M.frame_sync.update_sync_streams_ind.jp_drop_done;
0x00139C        9144007F                 r2 = r2 ASHIFT -1;
0x00139D        03540000                 r3 = r3 + r2;
0x00139E        23850000                 r6 = r6 - r3;
0x00139F        03650000                 r4 = r4 + r3;

 <$M.frame_sync.update_sync_streams_ind.jp_drop_done>
0x0013A0        D17B0007                 r5 = M[r9 + 7];
0x0013A1        D157000C                 r3 = M[r5 + 12];
0x0013A2        DD00000C                 if EQ jump $M.frame_sync.update_sync_streams_ind.jp_done;
0x0013A3        D507000C                 M[r5 + 12] = Null;
0x0013A4        D14B0008                 r2 = M[r9 + 8];
0x0013A5        9B540000                 r3 = r3 * r2 (int);
0x0013A6        23580000                 r3 = r3 - r6;
0x0013A7        0080000F                 r6 = Null + Null;
0x0013A8        D14B0004                 r2 = M[r9 + 4];
0x0013A9        2005004F                 Null = r3 - r2;
0x0013AA        DDC00004                 if GT jump $M.frame_sync.update_sync_streams_ind.jp_done;
0x0013AB        0005004F                 Null = r3 + r2;
0x0013AC        DD400002                 if NEG jump $M.frame_sync.update_sync_streams_ind.jp_done;
0x0013AD        23650000                 r4 = r4 - r3;

 <$M.frame_sync.update_sync_streams_ind.jp_done>
0x0013AE        D58B000C                 M[r9 + 12] = r6;
0x0013AF        E422002F                 r0 = r0 + 1;
0x0013B0        DC0D000F                 rts;
...

 <$frame_sync.update_streams_ind>
0x0013CB        F3D00000                 push rLink;
0x0013CC        51900001                 M1 = Null + 1;
0x0013CD        E1F00261                 call $block_interrupts;

 <$M.frame_sync.update_streams_ind.jp_next_stream>
0x0013CE        D0B9000F                 r9 = M[r7 + Null];
0x0013CF        DD00000F                 if EQ jump $M.frame_sync.update_streams_ind.jp_stream_done;
0x0013D0        D14B0006                 r2 = M[r9 + 6];
0x0013D1        D12B0000                 r0 = M[r9 + 0];
0x0013D2        D1320000                 r1 = M[r0 + 0];
0x0013D3        D16B0003                 r4 = M[r9 + 3];
0x0013D4        50D0003F                 L1 = Null + r1;
0x0013D5        E004000F                 call r2;
0x0013D6        5080006F                 M0 = Null + r4;
0x0013D7        D042000F                 r2 = M[r0 + Null];
0x0013D8        5010004F                 I1 = Null + r2;
0x0013D9        02003400                 Null = Null + Null, r1 = M[I1,M0];
0x0013DA        4440001F                 r2 = Null + I1;
0x0013DB        1824000F                 M[r0] = r2 + Null;
0x0013DC        E499002F                 r7 = r7 + 1;
0x0013DD        DDF0FFF1                 jump $M.frame_sync.update_streams_ind.jp_next_stream;

 <$M.frame_sync.update_streams_ind.jp_stream_done>
0x0013DE        E1F00239                 call $interrupt.unblock;
0x0013DF        50D0000F                 L1 = Null + Null;
0x0013E0        DDF0028D                 jump $pop_rLink_and_rts;
...

 <vI7YH8qr+mwJ1SJJFNgbJZSRjO9EINsaoOeyj74V3P8=>
0x0013F5        01300015                 r1 = Null + 21;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0013F6        DC0D000F                 rts;

 <$iir_resamplerv2.iir_15_s3>
0x0013F7        9041388F                 r2 = rMAC ASHIFT r6, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0013F8        CF433941                 rMAC = r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0013F9        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0013FA        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0013FB        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0013FC        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0013FD        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0013FE        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0013FF        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001400        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001401        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001402        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001403        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001404        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001405        BF433940                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001406        92E33800                 rMAC = rMAC ASHIFT r1, r1 = M[I2,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001407        CF133991                 rMAC = rMAC * r1 (SS), r1 = M[I2,1], M[I4,1] = rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001408        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001409        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00140A        BF433941                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1], r2 = M[I4,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00140B        BF433900                 rMAC = rMAC - r2 * r1 (SS), r1 = M[I2,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00140C        93E30000                 rMAC = rMAC ASHIFT r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00140D        DC0D000F                 rts;

 <$timer.cancel_event>
0x00140E        F3D00000                 push rLink;
0x00140F        E1F0021F                 call $block_interrupts;
0x001410        01C00032                 r10 = Null + 50;
0x001411        FD0000FF 01605C9A        r4 = Null + -41830;
0x001413        FD0000FF 09205C9A        r0 = Null + M[$timer.last_addr];
0x001415        E5F00008                 do $M.timer.cancel_event.loop;
0x001416        E402002F                 Null = r0 + 1;
0x001417        DD000006                 if EQ jump $M.timer.cancel_event.loop;
0x001418        D1720003                 r5 = M[r0 + 3];
0x001419        2004007F                 Null = r2 - r5;
0x00141A        DD000004                 if EQ jump $M.timer.cancel_event.delete_this_entry;
0x00141B        0062000F                 r4 = r0 + Null;
0x00141C        D1220000                 r0 = M[r0 + 0];

 <$M.timer.cancel_event.loop>
0x00141D        DDF00004                 jump $M.timer.cancel_event.done;

 <$M.timer.cancel_event.delete_this_entry>
0x00141E        D1320000                 r1 = M[r0 + 0];
0x00141F        D5360000                 M[r4 + 0] = r1;
0x001420        D5020003                 M[r0 + 3] = Null;

 <$M.timer.cancel_event.done>
0x001421        E1F001F6                 call $interrupt.unblock;
0x001422        DDF0024B                 jump $pop_rLink_and_rts;

 <$frame_sync.analyze_stream_ind>
0x001423        D5CB0008                 M[r9 + 8] = r10;
0x001424        D14B000A                 r2 = M[r9 + 10];
0x001425        200400CF                 Null = r2 - r10;
0x001426        004C0005                 if POS r2 = r10 + Null;
0x001427        D15B000B                 r3 = M[r9 + 11];
0x001428        200500CF                 Null = r3 - r10;
0x001429        005C0004                 if NEG r3 = r10 + Null;
0x00142A        D1CB0007                 r10 = M[r9 + 7];
0x00142B        67C90000                 r10 = r10 - M1;
0x00142C        DDD00005                 if LE jump $M.frame_sync.analyze_stream_ind.jp_threshold_reset;
0x00142D        D54B000A                 M[r9 + 10] = r2;
0x00142E        D55B000B                 M[r9 + 11] = r3;
0x00142F        D5CB0007                 M[r9 + 7] = r10;
0x001430        DC0D000F                 rts;

 <$M.frame_sync.analyze_stream_ind.jp_threshold_reset>
0x001431        D50B000B                 M[r9 + 11] = Null;
0x001432        D56B000A                 M[r9 + 10] = r4;
0x001433        D1CB0004                 r10 = M[r9 + 4];
0x001434        23540000                 r3 = r3 - r2;
0x001435        035C0000                 r3 = r3 + r10;
0x001436        00500004                 if NEG r3 = Null + Null;
0x001437        D55B0009                 M[r9 + 9] = r3;
0x001438        01C00078                 r10 = Null + 120;
0x001439        D5CB0007                 M[r9 + 7] = r10;
0x00143A        DC0D000F                 rts;

 <$reset_iir_resampler>
0x00143B        0200C800                 Null = Null + Null, M[I2,M0] = r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00143C        02005C00                 Null = Null + Null, r3 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00143D        02002C00                 Null = Null + Null, r0 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00143E        0200C800                 Null = Null + Null, M[I2,M0] = r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00143F        0200E800                 Null = Null + Null, M[I2,M0] = r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001440        5000006F                 I0 = Null + r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001441        00C5000F                 r10 = r3 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001442        03650000                 r4 = r4 + r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001443        0036E80F                 r1 = r4 + Null, M[I2,M0] = r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001444        03620000                 r4 = r4 + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001445        E5F00002                 do GhWbmz6NjBINMA90GeTldnIBCJ9ROVYhb6HZIgPs8dE=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001446        0300C100                 Null = Null + Null, M[I0,1] = r2;

 <GhWbmz6NjBINMA90GeTldnIBCJ9ROVYhb6HZIgPs8dE=>
0x001447        59330004                 I3 = I3 + 4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001448        00C2000F                 r10 = r0 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001449        DC0D0000                 if EQ rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00144A        59330002                 I3 = I3 + 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00144B        F2D03C00                 push rLink, r1 = M[I3,M0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00144C        21330002                 r1 = r1 - 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00144D        E003000F                 call r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00144E        5B330000                 I3 = I3 + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00144F        E5F00002                 do 6Y+36MVF93geXdxMd1twesXICExi4v+1HxlPqiMYEuk=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001450        0300C100                 Null = Null + Null, M[I0,1] = r2;

 <6Y+36MVF93geXdxMd1twesXICExi4v+1HxlPqiMYEuk=>
0x001451        DDF0021C                 jump $pop_rLink_and_rts;

 <ao5KZYW473v/hkJFB0EGIzAxq2zoc7KnZH6bIFQ3PEs=>
0x001452        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001453        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001454        01990002                 r7 = r7 + 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001455        99220003                 r0 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001456        03290000                 r0 = r0 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001457        99330003                 r1 = r1 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001458        03390000                 r1 = r1 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001459        D042000F                 r2 = M[r0 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00145A        D3300000                 r1 = M[r1 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00145B        D15A0002                 r3 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00145C        DD400006                 if NEG jump qJWBJh6vEa/ouhhqXcDI7Tknb8BEpz2FPoN8yHfiCVY=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00145D        99550003                 r3 = r3 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00145E        03590000                 r3 = r3 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00145F        D3500000                 r3 = M[r3 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001460        2003005F                 Null = r1 - r3;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001461        00350005                 if POS r1 = r3 + Null;

 <qJWBJh6vEa/ouhhqXcDI7Tknb8BEpz2FPoN8yHfiCVY=>
0x001462        D10A0003                 Null = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001463        00330031                 if NE r1 = r1 + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001464        2004003F                 Null = r2 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001465        00430005                 if POS r2 = r1 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001466        FD0000FF 8144FFFE        r2 = r2 AND 0xfffffe;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001468        1824000F                 M[r0] = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001469        DC0D000F                 rts;

 <$frame_sync.distribute_streams_ind>
0x00146A        F3D00000                 push rLink;
0x00146B        E1F001C3                 call $block_interrupts;
0x00146C        51900001                 M1 = Null + 1;

 <$M.frame_sync.distribute_streams_ind.jp_next_stream>
0x00146D        D0B9000F                 r9 = M[r7 + Null];
0x00146E        DD00000D                 if EQ jump $M.frame_sync.distribute_streams_ind.jp_stream_done;
0x00146F        D15B0005                 r3 = M[r9 + 5];
0x001470        D12B0000                 r0 = M[r9 + 0];
0x001471        D1320000                 r1 = M[r0 + 0];
0x001472        D1820001                 r6 = M[r0 + 1];
0x001473        D1A20002                 r8 = M[r0 + 2];
0x001474        50D0003F                 L1 = Null + r1;
0x001475        D16B0003                 r4 = M[r9 + 3];
0x001476        D56B0002                 M[r9 + 2] = r4;
0x001477        E005000F                 call r3;
0x001478        D58B0001                 M[r9 + 1] = r6;
0x001479        E499002F                 r7 = r7 + 1;
0x00147A        DDF0FFF3                 jump $M.frame_sync.distribute_streams_ind.jp_next_stream;

 <$M.frame_sync.distribute_streams_ind.jp_stream_done>
0x00147B        E1F0019C                 call $interrupt.unblock;
0x00147C        50D0000F                 L1 = Null + Null;
0x00147D        DDF001F0                 jump $pop_rLink_and_rts;

 <$frame_sync.update_output_streams_ind>
0x00147E        F3D00000                 push rLink;
0x00147F        D1820002                 r6 = M[r0 + 2];
0x001480        D1A20001                 r8 = M[r0 + 1];
0x001481        20C800AF                 r10 = r6 - r8;
0x001482        00CC0034                 if NEG r10 = r10 + r1;
0x001483        E1F0FFA0                 call $frame_sync.analyze_stream_ind;
0x001484        D15B0008                 r3 = M[r9 + 8];
0x001485        D14B0009                 r2 = M[r9 + 9];
0x001486        23540000                 r3 = r3 - r2;
0x001487        DD40000A                 if NEG jump $M.frame_sync.update_output_streams_ind.done;
0x001488        D14B0004                 r2 = M[r9 + 4];
0x001489        9144007F                 r2 = r2 ASHIFT -1;
0x00148A        03540000                 r3 = r3 + r2;
0x00148B        2006005F                 Null = r4 - r3;
0x00148C        00560004                 if NEG r3 = r4 + Null;
0x00148D        D14B000C                 r2 = M[r9 + 12];
0x00148E        23450000                 r2 = r2 - r3;
0x00148F        D54B000C                 M[r9 + 12] = r2;
0x001490        23650000                 r4 = r4 - r3;

 <$M.frame_sync.update_output_streams_ind.done>
0x001491        01220002                 r0 = r0 + 2;
0x001492        DDF001DB                 jump $pop_rLink_and_rts;

 <$message.send_short>
0x001493        F3D00000                 push rLink;
0x001494        E1F0019A                 call $block_interrupts;
0x001495        09302C97                 r1 = Null + M[$message.queue_write_ptr];
0x001496        01230005                 r0 = r1 + 5;
0x001497        2102006E                 Null = r0 - 110;
0x001498        00200000                 if EQ r0 = Null + Null;
0x001499        FD0000FF 29025C96        Null = r0 - M[$message.queue_read_ptr];
0x00149B        DD000008                 if EQ jump $M.message.send_short.all_done;
0x00149C        19202C97                 M[$message.queue_write_ptr] = r0 + Null;
0x00149D        D54327F7                 M[r1 + 10231] = r2;
0x00149E        D55327F8                 M[r1 + 10232] = r3;
0x00149F        D56327F9                 M[r1 + 10233] = r4;
0x0014A0        D57327FA                 M[r1 + 10234] = r5;
0x0014A1        D58327FB                 M[r1 + 10235] = r6;
0x0014A2        E1F0FB29                 call $message.private.try_to_send_message;

 <$M.message.send_short.all_done>
0x0014A3        E1F00174                 call $interrupt.unblock;
0x0014A4        DDF001C9                 jump $pop_rLink_and_rts;

 <$pskey.read_key>
0x0014A5        F3D00000                 push rLink;
0x0014A6        E1F00188                 call $block_interrupts;
0x0014A7        D5430001                 M[r1 + 1] = r2;
0x0014A8        D5530002                 M[r1 + 2] = r3;
0x0014A9        E450003F                 r3 = Null - 1;
0x0014AA        D5530000                 M[r1 + 0] = r3;
0x0014AB        FD0000FF 01205C99        r0 = Null + -41831;

 <$M.pskey.read_key.find_end_of_list>
0x0014AD        0042000F                 r2 = r0 + Null;
0x0014AE        D1240000                 r0 = M[r2 + 0];
0x0014AF        E402002F                 Null = r0 + 1;
0x0014B0        DD10FFFD                 if NE jump $M.pskey.read_key.find_end_of_list;
0x0014B1        D5340000                 M[r2 + 0] = r1;
0x0014B2        FD0000FF 21045C99        Null = r2 - -41831;
0x0014B4        E100FE64                 if EQ call $pskey.private.send_request;
0x0014B5        E1F00162                 call $interrupt.unblock;
0x0014B6        DDF001B7                 jump $pop_rLink_and_rts;

 <$cbuffer.empty_buffer>
0x0014B7        F3D00000                 push rLink;
0x0014B8        0052000F                 r3 = r0 + Null;
0x0014B9        D802000F                 Null = SIGNDET r0;
0x0014BA        DD000004                 if EQ jump $M.cbuffer.empty_buffer.its_a_port;
0x0014BB        E1F00194                 call $cbuffer.get_write_address_and_size;
0x0014BC        0032000F                 r1 = r0 + Null;
0x0014BD        DDF00007                 jump $M.cbuffer.empty_buffer.empty_port_loop;

 <$M.cbuffer.empty_buffer.its_a_port>
0x0014BE        E1F00151                 call $cbuffer.calc_amount_data;
0x0014BF        00C2000F                 r10 = r0 + Null;
0x0014C0        0025000F                 r0 = r3 + Null;
0x0014C1        E1F00189                 call $cbuffer.get_read_address_and_size;
0x0014C2        E5F00002                 do $M.cbuffer.empty_buffer.empty_port_loop;
0x0014C3        D002000F                 Null = M[r0 + Null];

 <$M.cbuffer.empty_buffer.empty_port_loop>
0x0014C4        0025000F                 r0 = r3 + Null;
0x0014C5        E1F00199                 call $cbuffer.set_read_address;
0x0014C6        DDF001A7                 jump $pop_rLink_and_rts;
...

 <$math.log2_abs_table>
0x0014ED        D881000F                 r6 = SIGNDET rMAC;
0x0014EE        93E80000                 rMAC = rMAC ASHIFT r6;
0x0014EF        20100014                 if NEG rMAC = Null - rMAC;
0x0014F0        DDF00003                 jump $M.math.log2_table.continue_jp;

 <$math.log2_table>
0x0014F1        D881000F                 r6 = SIGNDET rMAC;
0x0014F2        93E80000                 rMAC = rMAC ASHIFT r6;

 <$M.math.log2_table.continue_jp>
0x0014F3        E488002F                 r6 = r6 + 1;
0x0014F4        91880010                 r6 = r6 ASHIFT 16;
0x0014F5        8D310002                 r1 = rMAC LSHIFT 2;
0x0014F6        8D33006D                 r1 = r1 LSHIFT -19;
0x0014F7        8D210007                 r0 = rMAC LSHIFT 7;
0x0014F8        8D22007F                 r0 = r0 LSHIFT -1;
0x0014F9        D11313E4                 rMAC = M[r1 + 5092];
0x0014FA        D13313E5                 r1 = M[r1 + 5093];
0x0014FB        23310000                 r1 = r1 - rMAC;
0x0014FC        AC12003F                 rMAC = rMAC + r0 * r1 (SS);
0x0014FD        2021008F                 r0 = rMAC - r6;
0x0014FE        DC0D000F                 rts;

 <$math.pow2_taylor>
0x0014FF        F3010000                 push I0;
0x001500        510014BD                 I0 = Null + 5309;
0x001501        91920070                 r7 = r0 ASHIFT -16;
0x001502        8D820008                 r6 = r0 LSHIFT 8;
0x001503        8D88007F                 r6 = r6 LSHIFT -1;
0x001504        F3913100                 push M1, r1 = M[I0,1];
0x001505        51900001                 M1 = Null + 1;
0x001506        46992100                 r7 = r7 + M1, r0 = M[I0,M1];
0x001507        AC23318F                 r0 = r0 + r1 * r6 (SS), r1 = M[I0,M1];
0x001508        AC32218F                 r1 = r1 + r0 * r6 (SS), r0 = M[I0,M1];
0x001509        AC23318F                 r0 = r0 + r1 * r6 (SS), r1 = M[I0,M1];
0x00150A        AC32218F                 r1 = r1 + r0 * r6 (SS), r0 = M[I0,M1];
0x00150B        AC23318F                 r0 = r0 + r1 * r6 (SS), r1 = M[I0,M1];
0x00150C        AC32008F                 r1 = r1 + r0 * r6 (SS);
0x00150D        9023009F                 r0 = r1 ASHIFT r7;
0x00150E        F3950000                 pop M1;
0x00150F        F3050000                 pop I0;
0x001510        DC0D000F                 rts;

 <qyNgq1dNnmT0FTpCjrzkkpRdy6FQratEFy6InvlihJM=>
0x001511        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001512        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001513        E1F0F267                 call $cbops_multirate.GetTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001514        D14A0009                 r2 = M[r8 + 9];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001515        9464002F                 r4 = r2 * r0 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001516        2062006F                 r4 = r0 - r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001517        21660002                 r4 = r4 - 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001518        00600004                 if NEG r4 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x001519        21320002                 r1 = r0 - 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00151A        00300004                 if NEG r1 = Null + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00151B        2006003F                 Null = r4 - r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00151C        00360004                 if NEG r1 = r4 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00151D        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00151E        E1F0F264                 call $cbops_multirate.SetMinimumTransferAmount;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00151F        DDF0014E                 jump $pop_rLink_and_rts;

 <$cbuffer.set_write_address.its_a_port>
0x001520        F3D00000                 push rLink;
0x001521        8122001F                 r0 = r0 AND 0x1f;
0x001522        2122000C                 r0 = r0 - 12;
0x001523        0900FE33                 Null = Null + M[0xfffe33];
0x001524        FD0000FF 09005C93        Null = Null + M[$cbuffer.auto_mcu_message];
0x001526        DD000008                 if EQ jump $M.cbuffer.set_write_address.its_a_port.dont_message_send;
0x001527        FD0000FF D1324BF4        r1 = M[r0 + -46092];
0x001529        2103F000                 Null = r1 - -4096;
0x00152A        DD500004                 if POS jump $M.cbuffer.set_write_address.its_a_port.dont_message_send;
0x00152B        85408003                 r2 = Null OR 0x8003;
0x00152C        ED520001                 r3 = 0x1 ASHIFT r0;
0x00152D        E1F0FF66                 call $message.send_short;

 <$M.cbuffer.set_write_address.its_a_port.dont_message_send>
0x00152E        DDF0013F                 jump $pop_rLink_and_rts;

 <$flash.copy_to_dm>
0x00152F        F3D00000                 push rLink;
0x001530        0062000F                 r4 = r0 + Null;
0x001531        0073000F                 r5 = r1 + Null;

 <$M.flash.copy_to_dm.page_loop>
0x001532        0026000F                 r0 = r4 + Null;
0x001533        0037000F                 r1 = r5 + Null;
0x001534        E1F000F2                 call $flash.map_page_into_dm;
0x001535        00C3000F                 r10 = r1 + Null;
0x001536        5010002F                 I1 = Null + r0;
0x001537        E5F00003                 do $M.flash.copy_to_dm.loop;
0x001538        03002500                 Null = Null + Null, r0 = M[I1,1];
0x001539        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <$M.flash.copy_to_dm.loop>
0x00153A        03630000                 r4 = r4 + r1;
0x00153B        23730000                 r5 = r5 - r1;
0x00153C        DD10FFF6                 if NE jump $M.flash.copy_to_dm.page_loop;
0x00153D        DDF00130                 jump $pop_rLink_and_rts;

 <$M.MUTE_CONTROL.Process.func>
0x00153E        F3D00000                 push rLink;
0x00153F        D1290000                 r0 = M[r7 + 0];
0x001540        E1F00119                 call $frmbuffer.get_buffer;
0x001541        F3D40000                 pop rLink;
0x001542        D1490001                 r2 = M[r7 + 1];
0x001543        D1690002                 r4 = M[r7 + 2];
0x001544        D3400000                 r2 = M[r2 + Null];
0x001545        23640000                 r4 = r4 - r2;
0x001546        DD100006                 if NE jump $M.MUTE_CONTROL.Process.loop_mute;
0x001547        00C5000F                 r10 = r3 + Null;
0x001548        5000002F                 I0 = Null + r0;
0x001549        50C0003F                 L0 = Null + r1;
0x00154A        E5F00002                 do $M.MUTE_CONTROL.Process.loop_mute;
0x00154B        0300E100                 Null = Null + Null, M[I0,1] = r4;

 <$M.MUTE_CONTROL.Process.loop_mute>
0x00154C        51C00000                 L0 = Null + 0;
0x00154D        DC0D000F                 rts;

 <$math.pow2_sat_table>
0x00154E        91820070                 r6 = r0 ASHIFT -16;
0x00154F        DD400005                 if NEG jump $M.math.pow2_table.continue_jp;
0x001550        FD00007F 0120FFFE        r0 = Null + 8388606;
0x001552        DC0D000F                 rts;

 <$math.pow2_table>
0x001553        91820070                 r6 = r0 ASHIFT -16;

 <$M.math.pow2_table.continue_jp>
0x001554        8D920008                 r7 = r0 LSHIFT 8;
0x001555        8D99006D                 r7 = r7 LSHIFT -19;
0x001556        E488002F                 r6 = r6 + 1;
0x001557        D1391405                 r1 = M[r7 + 5125];
0x001558        D1991406                 r7 = M[r7 + 5126];
0x001559        23930000                 r7 = r7 - r1;
0x00155A        8D22000D                 r0 = r0 LSHIFT 13;
0x00155B        8D22007F                 r0 = r0 LSHIFT -1;
0x00155C        AC39002F                 r1 = r1 + r7 * r0 (SS);
0x00155D        9023008F                 r0 = r1 ASHIFT r6;
0x00155E        DC0D000F                 rts;

 <$cbuffer.set_read_address.its_a_port>
0x00155F        F3D00000                 push rLink;
0x001560        8122001F                 r0 = r0 AND 0x1f;
0x001561        0900FE33                 Null = Null + M[0xfffe33];
0x001562        FD0000FF 09005C93        Null = Null + M[$cbuffer.auto_mcu_message];
0x001564        DD000008                 if EQ jump $M.cbuffer.set_read_address.its_a_port.dont_message_send;
0x001565        FD0000FF D1324BE8        r1 = M[r0 + -46104];
0x001567        2103F000                 Null = r1 - -4096;
0x001568        DD500004                 if POS jump $M.cbuffer.set_read_address.its_a_port.dont_message_send;
0x001569        85408002                 r2 = Null OR 0x8002;
0x00156A        ED520001                 r3 = 0x1 ASHIFT r0;
0x00156B        E1F0FF28                 call $message.send_short;

 <$M.cbuffer.set_read_address.its_a_port.dont_message_send>
0x00156C        DDF00101                 jump $pop_rLink_and_rts;

 <$M.audio_proc.peak_monitor.Process.func>
0x00156D        F3D00000                 push rLink;
0x00156E        D1290000                 r0 = M[r7 + 0];
0x00156F        E1F000EA                 call $frmbuffer.get_buffer;
0x001570        5000002F                 I0 = Null + r0;
0x001571        50C0003F                 L0 = Null + r1;
0x001572        F3D40000                 pop rLink;
0x001573        51900001                 M1 = Null + 1;
0x001574        00C5610F                 r10 = r3 + Null, r4 = M[I0,M1];
0x001575        D1590001                 r3 = M[r7 + 1];
0x001576        E5F00003                 do $M.audio_proc.peak_monitor.Process.lp_calc_peak;
0x001577        E466004F                 r4 = ABS r4;
0x001578        E456616F                 r3 = MAX r4, r4 = M[I0,M1];

 <$M.audio_proc.peak_monitor.Process.lp_calc_peak>
0x001579        50C0000F                 L0 = Null + Null;
0x00157A        D5590001                 M[r7 + 1] = r3;
0x00157B        DC0D000F                 rts;

 <$frame_sync.distribute_read_insert_ind>
0x00157C        20C000CF                 r10 = Null - r10;
0x00157D        D14B0004                 r2 = M[r9 + 4];
0x00157E        9144007F                 r2 = r2 ASHIFT -1;
0x00157F        03C40000                 r10 = r10 + r2;
0x001580        D14B000C                 r2 = M[r9 + 12];
0x001581        034C0000                 r2 = r2 + r10;
0x001582        D54B000C                 M[r9 + 12] = r2;
0x001583        5010008F                 I1 = Null + r6;
0x001584        03004700                 Null = Null + Null, r2 = M[I1,-1];
0x001585        E5F00002                 do $M.frame_sync.distribute_read_insert_ind.lp_repeat;
0x001586        0300C700                 Null = Null + Null, M[I1,-1] = r2;

 <$M.frame_sync.distribute_read_insert_ind.lp_repeat>
0x001587        03004500                 Null = Null + Null, r2 = M[I1,1];
0x001588        4480001F                 r6 = Null + I1;
0x001589        D5820001                 M[r0 + 1] = r6;
0x00158A        DC0D000F                 rts;

 <$frame_sync.register_handlers>
0x00158B        F3D00000                 push rLink;

 <$M.frame_sync.handlers.lp_proc_loop>
0x00158C        D036000F                 r1 = M[r4 + Null];
0x00158D        DD0000E0                 if EQ jump $pop_rLink_and_rts;
0x00158E        D1460001                 r2 = M[r4 + 1];
0x00158F        D1560002                 r3 = M[r4 + 2];
0x001590        D1260003                 r0 = M[r4 + 3];
0x001591        01660004                 r4 = r4 + 4;
0x001592        FD0000FF 19605C9D        M[$M.frame_sync.handlers.LOOP_COUNT] = r4 + Null;
0x001594        E002000F                 call r0;
0x001595        FD0000FF 09605C9D        r4 = Null + M[$M.frame_sync.handlers.LOOP_COUNT];
0x001597        DDF0FFF5                 jump $M.frame_sync.handlers.lp_proc_loop;

 <$frame_sync.update_input_streams_ind>
0x001598        D15B0008                 r3 = M[r9 + 8];
0x001599        D14B0009                 r2 = M[r9 + 9];
0x00159A        23540000                 r3 = r3 - r2;
0x00159B        DD400008                 if NEG jump $M.frame_sync.update_input_streams_ind.done;
0x00159C        D14B0004                 r2 = M[r9 + 4];
0x00159D        9144007F                 r2 = r2 ASHIFT -1;
0x00159E        03540000                 r3 = r3 + r2;
0x00159F        D14B000C                 r2 = M[r9 + 12];
0x0015A0        23450000                 r2 = r2 - r3;
0x0015A1        D54B000C                 M[r9 + 12] = r2;
0x0015A2        03650000                 r4 = r4 + r3;

 <$M.frame_sync.update_input_streams_ind.done>
0x0015A3        E422002F                 r0 = r0 + 1;
0x0015A4        DC0D000F                 rts;

 <U1yCdKlwdgJe7oyFa8+OagfnQEw0buGD20ZDTskQ6b0=>
0x0015A5        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015A6        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015A7        01990002                 r7 = r7 + 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015A8        99220003                 r0 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015A9        03290000                 r0 = r0 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015AA        99330003                 r1 = r1 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015AB        03390000                 r1 = r1 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015AC        D042000F                 r2 = M[r0 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015AD        2804003F                 Null = r2 - M[r1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015AE        D0430005                 if POS r2 = M[r1 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015AF        1824000F                 M[r0] = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015B0        1834000F                 M[r1] = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015B1        DC0D000F                 rts;

 <$frame_sync.distribute_output_stream_ind>
0x0015B2        501000AF                 I1 = Null + r8;
0x0015B3        238A0000                 r6 = r6 - r8;
0x0015B4        0088003D                 if LE r6 = r6 + r1;
0x0015B5        67890000                 r6 = r6 - M1;
0x0015B6        70A8006F                 M2 = r6 - r4;
0x0015B7        DD500004                 if POS jump $M.frame_sync.distribute_output_stream_ind.done;
0x0015B8        444000AF                 r2 = Null + M2;
0x0015B9        D54B000C                 M[r9 + 12] = r2;
0x0015BA        02004600                 Null = Null + Null, r2 = M[I1,M2];

 <$M.frame_sync.distribute_output_stream_ind.done>
0x0015BB        4480001F                 r6 = Null + I1;
0x0015BC        D5820002                 M[r0 + 2] = r6;
0x0015BD        DC0D000F                 rts;

 <$math.vector_rand>
0x0015BE        09202CA2                 r0 = Null + M[$math.rand_num];
0x0015BF        FD0000BB 01303555        r1 = Null + -4508331;
0x0015C1        E4CC003F                 r10 = r10 - 1;
0x0015C2        9B230000                 r0 = r0 * r1 (int);
0x0015C3        01220011                 r0 = r0 + 17;
0x0015C4        E5F00003                 do $M.math.vector_rand.loop;
0x0015C5        9B23A100                 r0 = r0 * r1 (int), M[I0,1] = r0;
0x0015C6        01220011                 r0 = r0 + 17;

 <$M.math.vector_rand.loop>
0x0015C7        0300A100                 Null = Null + Null, M[I0,1] = r0;
0x0015C8        19202CA2                 M[$math.rand_num] = r0 + Null;
0x0015C9        DC0D000F                 rts;

 <$math.log_add.vector>
0x0015CA        E5F0000B                 do $M.math.misc.log_add.calc_log_add;
0x0015CB        03003100                 Null = Null + Null, r1 = M[I0,1];

 <$math.log_add>
0x0015CC        2043002F                 r2 = r1 - r0;
0x0015CD        20400045                 if POS r2 = Null - r2;
0x0015CE        2944004F                 r2 = r2 - M[$M.math.misc.log_add.table_low];
0x0015CF        91440074                 r2 = r2 ASHIFT -12;
0x0015D0        00400004                 if NEG r2 = Null + Null;
0x0015D1        D1440DA1                 r2 = M[r2 + 3489];
0x0015D2        2003002F                 Null = r1 - r0;
0x0015D3        00320004                 if NEG r1 = r0 + Null;
0x0015D4        0023004F                 r0 = r1 + r2;

 <$M.math.misc.log_add.calc_log_add>
0x0015D5        DC0D000F                 rts;

 <$cbops.copy_op.amount_to_use>
0x0015D6        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015D7        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015D8        01990002                 r7 = r7 + 2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015D9        99220003                 r0 = r0 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015DA        03290000                 r0 = r0 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015DB        99330003                 r1 = r1 * 3 (int);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015DC        03390000                 r1 = r1 + r7;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015DD        D042000F                 r2 = M[r0 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015DE        2804003F                 Null = r2 - M[r1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015DF        D0430005                 if POS r2 = M[r1 + Null];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015E0        1824000F                 M[r0] = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015E1        DC0D000F                 rts;

 <$frame_sync.run_function_table>
0x0015E2        F3D00000                 push rLink;

 <$M.frame_sync.run_function_table.lp_proc_loop>
0x0015E3        D076000F                 r5 = M[r4 + Null];
0x0015E4        DD000089                 if EQ jump $pop_rLink_and_rts;
0x0015E5        D1960001                 r7 = M[r4 + 1];
0x0015E6        D1A60002                 r8 = M[r4 + 2];
0x0015E7        01660003                 r4 = r4 + 3;
0x0015E8        F3600000                 push r4;
0x0015E9        E007000F                 call r5;
0x0015EA        F3640000                 pop r4;
0x0015EB        DDF0FFF8                 jump $M.frame_sync.run_function_table.lp_proc_loop;

 <$math.bitreverse_array>
0x0015EC        51900001                 M1 = Null + 1;
0x0015ED        D82C000F                 r0 = SIGNDET r10;
0x0015EE        E422002F                 r0 = r0 + 1;
0x0015EF        E430002F                 r1 = Null + 1;
0x0015F0        8F320021                 r1 = r1 LSHIFT r0, r0 = M[I4,1];
0x0015F1        50A0003F                 M2 = Null + r1;
0x0015F2        85EE0040                 rFlags = rFlags OR 0x40;
0x0015F3        E5F00002                 do $M.math.bitreverse_array.loop;
0x0015F4        0200A221                 Null = Null + Null, M[I0,M2] = r0, r0 = M[I4,M1];

 <$M.math.bitreverse_array.loop>
0x0015F5        81EEFFBF                 rFlags = rFlags AND 0xffbf;
0x0015F6        DC0D000F                 rts;

 <$iir_resamplev2.SetFilter>
0x0015F7        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015F8        F3200000                 push r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015F9        E1F00035                 call $block_interrupts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015FA        F3240000                 pop r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015FB        D52A0002                 M[r8 + 2] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015FC        D50A000F                 M[r8 + 15] = Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015FD        E1F0001A                 call $interrupt.unblock;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x0015FE        DDF0006F                 jump $pop_rLink_and_rts;

 <$cbuffer.calc_amount_space>
0x0015FF        D802000F                 Null = SIGNDET r0;
0x001600        DD00FB38                 if EQ jump $cbuffer.calc_amount_space.its_a_port;

 <$M.cbuffer.calc_amount_space.its_a_cbuffer>
0x001601        D1420000                 r2 = M[r0 + 0];
0x001602        D1320002                 r1 = M[r0 + 2];
0x001603        D1220001                 r0 = M[r0 + 1];
0x001604        23230000                 r0 = r0 - r1;
0x001605        0022004D                 if LE r0 = r0 + r2;
0x001606        E422003F                 r0 = r0 - 1;
0x001607        DC0D000F                 rts;

 <$frame_sync.distribute_input_stream_ind>
0x001608        F3D00000                 push rLink;
0x001609        23A80000                 r8 = r8 - r6;
0x00160A        00AA0034                 if NEG r8 = r8 + r1;
0x00160B        20CA006F                 r10 = r8 - r4;
0x00160C        E140FF70                 if NEG call $frame_sync.distribute_read_insert_ind;
0x00160D        E1F0FE16                 call $frame_sync.analyze_stream_ind;
0x00160E        DDF0005F                 jump $pop_rLink_and_rts;

 <$cbuffer.calc_amount_data>
0x00160F        D802000F                 Null = SIGNDET r0;
0x001610        DD00FBB1                 if EQ jump 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;

 <$M.cbuffer.calc_amount_data.its_a_cbuffer>
0x001611        D1420000                 r2 = M[r0 + 0];
0x001612        D1320002                 r1 = M[r0 + 2];
0x001613        D1220001                 r0 = M[r0 + 1];
0x001614        2023002F                 r0 = r1 - r0;
0x001615        00220044                 if NEG r0 = r0 + r2;
0x001616        DC0D000F                 rts;

 <$interrupt.unblock>
0x001617        09202C95                 r0 = Null + M[$interrupt.block_count];
0x001618        E1001FBF                 if EQ call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x001619        E422003F                 r0 = r0 - 1;
0x00161A        19202C95                 M[$interrupt.block_count] = r0 + Null;
0x00161B        DC0D0001                 if NE rts;
0x00161C        E420002F                 r0 = Null + 1;
0x00161D        1920FE12                 M[0xfffe12] = r0 + Null;
0x00161E        DC0D000F                 rts;

 <$frame_sync.distribute_sync_stream_ind>
0x00161F        F3D00000                 push rLink;
0x001620        23A80000                 r8 = r8 - r6;
0x001621        00AA0034                 if NEG r8 = r8 + r1;
0x001622        20CA006F                 r10 = r8 - r4;
0x001623        E140FF59                 if NEG call $frame_sync.distribute_read_insert_ind;
0x001624        D5CB0009                 M[r9 + 9] = r10;
0x001625        DDF00048                 jump $pop_rLink_and_rts;

 <$flash.map_page_into_dm>
0x001626        9152007F                 r3 = r0 ASHIFT -1;
0x001627        1945FE5D                 M[0xfffe5d] = r2 + r3;
0x001628        81520001                 r3 = r0 AND 0x1;
0x001629        65251000                 r0 = 4096 - r3;
0x00162A        2023002F                 r0 = r1 - r0;
0x00162B        20330025                 if POS r1 = r1 - r0;
0x00162C        0125D000                 r0 = r3 + -12288;
0x00162D        DC0D000F                 rts;

 <$block_interrupts>
0x00162E        09202C95                 r0 = Null + M[$interrupt.block_count];
0x00162F        E422002F                 r0 = r0 + 1;
0x001630        19202C95                 M[$interrupt.block_count] = r0 + Null;
0x001631        1900FE12                 M[0xfffe12] = Null + Null;
0x001632        03000000                 Null = Null + Null;
0x001633        03000000                 Null = Null + Null;
0x001634        DC0D000F                 rts;

 <$message.send_queue_space>
0x001635        FD0000FF 09205C96        r0 = Null + M[$message.queue_read_ptr];
0x001637        29222C97                 r0 = r0 - M[$message.queue_write_ptr];
0x001638        E422003F                 r0 = r0 - 1;
0x001639        DC0D0005                 if POS rts;
0x00163A        0122006E                 r0 = r0 + 110;
0x00163B        DC0D000F                 rts;

 <$math.pow2_exp_pow2_table>
0x00163C        01320800                 r1 = r0 + 2048;
0x00163D        0030000B                 if LT r1 = Null + Null;
0x00163E        91330074                 r1 = r1 ASHIFT -12;
0x00163F        21230040                 r0 = r1 - 64;
0x001640        2033002C                 if GT r1 = r1 - r0;
0x001641        D1331358                 r1 = M[r1 + 4952];
0x001642        DC0D000F                 rts;

 <$math.exp_int_table>
0x001643        21320040                 r1 = r0 - 64;
0x001644        91330079                 r1 = r1 ASHIFT -7;
0x001645        00300004                 if NEG r1 = Null + Null;
0x001646        2123007F                 r0 = r1 - 127;
0x001647        2033002C                 if GT r1 = r1 - r0;
0x001648        D123122A                 r0 = M[r1 + 4650];
0x001649        DC0D000F                 rts;

 <$cbuffer.get_read_address_and_size>
0x00164A        D802000F                 Null = SIGNDET r0;
0x00164B        DD00F9D0                 if EQ jump $cbuffer.get_read_address_and_size.its_a_port;

 <$M.cbuffer.get_read_address_and_size.its_a_cbuffer>
0x00164C        D1320000                 r1 = M[r0 + 0];
0x00164D        D1220001                 r0 = M[r0 + 1];
0x00164E        DC0D000F                 rts;

 <$cbuffer.get_write_address_and_size>
0x00164F        D802000F                 Null = SIGNDET r0;
0x001650        DD00F94D                 if EQ jump $cbuffer.get_write_address_and_size.its_a_port;

 <$M.cbuffer.get_write_address_and_size.its_a_cbuffer>
0x001651        D1320000                 r1 = M[r0 + 0];
0x001652        D1220002                 r0 = M[r0 + 2];
0x001653        DC0D000F                 rts;

 <$cbuffer.is_it_enabled>
0x001654        D802000F                 Null = SIGNDET r0;
0x001655        DC0D0001                 if NE rts;
0x001656        8122001F                 r0 = r0 AND 0x1f;
0x001657        D1022AAC                 Null = M[r0 + 10924];
0x001658        DC0D000F                 rts;

 <$frmbuffer.get_buffer>
0x001659        D1520002                 r3 = M[r0 + 2];
0x00165A        D1420000                 r2 = M[r0 + 0];
0x00165B        D1220001                 r0 = M[r0 + 1];
0x00165C        D1340000                 r1 = M[r2 + 0];
0x00165D        DC0D000F                 rts;

 <$cbuffer.set_read_address>
0x00165E        D802000F                 Null = SIGNDET r0;
0x00165F        DD00FF00                 if EQ jump $cbuffer.set_read_address.its_a_port;

 <$M.cbuffer.set_read_address.its_a_cbuffer>
0x001660        D5320001                 M[r0 + 1] = r1;
0x001661        DC0D000F                 rts;

 <$cbuffer.set_write_address>
0x001662        D802000F                 Null = SIGNDET r0;
0x001663        DD00FEBD                 if EQ jump $cbuffer.set_write_address.its_a_port;

 <$M.cbuffer.set_write_address.its_a_cbuffer>
0x001664        D5320002                 M[r0 + 2] = r1;
0x001665        DC0D000F                 rts;

 <$timer.schedule_event_in_period>
0x001666        D1230001                 r0 = M[r1 + 1];
0x001667        03420000                 r2 = r2 + r0;
0x001668        DDF0FB13                 jump $timer.schedule_event_at;

 <$timer.schedule_event_in>
0x001669        0944FE71                 r2 = r2 + M[0xfffe71];
0x00166A        DDF0FB11                 jump $timer.schedule_event_at;

 <$frmbuffer.set_frame_size>
0x00166B        D5520002                 M[r0 + 2] = r3;
0x00166C        DC0D000F                 rts;

 <$pop_rLink_and_rts>
0x00166D        F3D40000                 pop rLink;
0x00166E        DC0D000F                 rts;

 <$kal_filter_coef_lib.__warp>
0x00166F        F3D00000                 push rLink;

 <$kal_filter_coef_lib.__warp.jump_entry>
0x001670        F10013F0                 pushm <r2, r3, r4, r5, r6, r7, r10>;
0x001671        F3010000                 push I0;
0x001672        FD0000FF 51005B55        I0 = Null + -42155;
0x001674        E1F00861                 call $kal_float_lib.div;
0x001675        03004100                 Null = Null + Null, r2 = M[I0,1];
0x001676        03005100                 Null = Null + Null, r3 = M[I0,1];
0x001677        E1F0082C                 call $kal_float_lib.mul;
0x001678        0042000F                 r2 = r0 + Null;
0x001679        0053000F                 r3 = r1 + Null;
0x00167A        0062000F                 r4 = r0 + Null;
0x00167B        0073000F                 r5 = r1 + Null;
0x00167C        E1F00827                 call $kal_float_lib.mul;
0x00167D        0082000F                 r6 = r0 + Null;
0x00167E        0093000F                 r7 = r1 + Null;
0x00167F        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001680        03003100                 Null = Null + Null, r1 = M[I0,1];
0x001681        01C00005                 r10 = Null + 5;
0x001682        E5F00007                 do $kal_filter_coef_lib.__warp.tangent_loop;
0x001683        0048000F                 r2 = r6 + Null;
0x001684        0059000F                 r3 = r7 + Null;
0x001685        E1F0081E                 call $kal_float_lib.mul;
0x001686        03004100                 Null = Null + Null, r2 = M[I0,1];
0x001687        03005100                 Null = Null + Null, r3 = M[I0,1];
0x001688        E1F00809                 call $kal_float_lib.add;

 <$kal_filter_coef_lib.__warp.tangent_loop>
0x001689        0046000F                 r2 = r4 + Null;
0x00168A        0057000F                 r3 = r5 + Null;
0x00168B        E1F00818                 call $kal_float_lib.mul;
0x00168C        F3050000                 pop I0;
0x00168D        F10413F0                 popm <r2, r3, r4, r5, r6, r7, r10>;
0x00168E        F3D40000                 pop rLink;
0x00168F        DC0D000F                 rts;

 <$kal_filter_coef_lib.__db2lin>
0x001690        F3D00000                 push rLink;

 <$kal_filter_coef_lib.__db2lin.jump_entry>
0x001691        F10011F0                 pushm <r2, r3, r4, r5, r6, r10>;
0x001692        F3010000                 push I0;
0x001693        51002BBE                 I0 = Null + 11198;
0x001694        0062000F                 r4 = r0 + Null;
0x001695        0073000F                 r5 = r1 + Null;
0x001696        03004100                 Null = Null + Null, r2 = M[I0,1];
0x001697        03005300                 Null = Null + Null, r3 = M[I0,-1];
0x001698        E1F0083D                 call $kal_float_lib.div;
0x001699        0042000F                 r2 = r0 + Null;
0x00169A        0053000F                 r3 = r1 + Null;
0x00169B        E1F007E9                 call $kal_float_lib.float_to_int;
0x00169C        0082000F                 r6 = r0 + Null;
0x00169D        E1F007E1                 call $kal_float_lib.int_to_float;
0x00169E        03004100                 Null = Null + Null, r2 = M[I0,1];
0x00169F        03005100                 Null = Null + Null, r3 = M[I0,1];
0x0016A0        E1F00803                 call $kal_float_lib.mul;
0x0016A1        0042000F                 r2 = r0 + Null;
0x0016A2        0053000F                 r3 = r1 + Null;
0x0016A3        0026000F                 r0 = r4 + Null;
0x0016A4        0037000F                 r1 = r5 + Null;
0x0016A5        E1F007F5                 call $kal_float_lib.sub;
0x0016A6        0062000F                 r4 = r0 + Null;
0x0016A7        0073000F                 r5 = r1 + Null;
0x0016A8        03002100                 Null = Null + Null, r0 = M[I0,1];
0x0016A9        03003100                 Null = Null + Null, r1 = M[I0,1];
0x0016AA        01C00003                 r10 = Null + 3;
0x0016AB        E5F00007                 do $kal_filter_coef_lib.__db2lin.power_series_loop;
0x0016AC        0046000F                 r2 = r4 + Null;
0x0016AD        0057000F                 r3 = r5 + Null;
0x0016AE        E1F007F5                 call $kal_float_lib.mul;
0x0016AF        03004100                 Null = Null + Null, r2 = M[I0,1];
0x0016B0        03005100                 Null = Null + Null, r3 = M[I0,1];
0x0016B1        E1F007E0                 call $kal_float_lib.add;

 <$kal_filter_coef_lib.__db2lin.power_series_loop>
0x0016B2        03280000                 r0 = r0 + r6;
0x0016B3        F3050000                 pop I0;
0x0016B4        F10411F0                 popm <r2, r3, r4, r5, r6, r10>;
0x0016B5        F3D40000                 pop rLink;
0x0016B6        DC0D000F                 rts;

 <$kal_filter_coef_lib.__scale_coefficients>
0x0016B7        F1002001                 pushm <FP(=SP), rLink>;
0x0016B8        012000FF                 r0 = Null + 255;
0x0016B9        F1387FF6                 r1 = M[FP + -0xa];
0x0016BA        83320000                 r1 = r1 AND r0;
0x0016BB        F1487FF8                 r2 = M[FP + -0x8];
0x0016BC        83420000                 r2 = r2 AND r0;
0x0016BD        E434006F                 r1 = MAX r2;
0x0016BE        F1487FFA                 r2 = M[FP + -0x6];
0x0016BF        83420000                 r2 = r2 AND r0;
0x0016C0        E434006F                 r1 = MAX r2;
0x0016C1        F1487FFC                 r2 = M[FP + -0x4];
0x0016C2        83420000                 r2 = r2 AND r0;
0x0016C3        E434006F                 r1 = MAX r2;
0x0016C4        F1487FFE                 r2 = M[FP + -0x2];
0x0016C5        83420000                 r2 = r2 AND r0;
0x0016C6        E434006F                 r1 = MAX r2;
0x0016C7        2143007F                 r2 = r1 - 127;
0x0016C8        F1287FF6                 r0 = M[FP + -0xa];
0x0016C9        F1387FF7                 r1 = M[FP + -0x9];
0x0016CA        23240000                 r0 = r0 - r2;
0x0016CB        E1F007BE                 call $kal_float_lib.float_to_frac;
0x0016CC        F12C7FF0                 M[FP + -0x10] = r0;
0x0016CD        F1287FF8                 r0 = M[FP + -0x8];
0x0016CE        F1387FF9                 r1 = M[FP + -0x7];
0x0016CF        23240000                 r0 = r0 - r2;
0x0016D0        E1F007B9                 call $kal_float_lib.float_to_frac;
0x0016D1        F12C7FF1                 M[FP + -0xf] = r0;
0x0016D2        F1287FFA                 r0 = M[FP + -0x6];
0x0016D3        F1387FFB                 r1 = M[FP + -0x5];
0x0016D4        23240000                 r0 = r0 - r2;
0x0016D5        E1F007B4                 call $kal_float_lib.float_to_frac;
0x0016D6        F12C7FF2                 M[FP + -0xe] = r0;
0x0016D7        F1287FFC                 r0 = M[FP + -0x4];
0x0016D8        F1387FFD                 r1 = M[FP + -0x3];
0x0016D9        23240000                 r0 = r0 - r2;
0x0016DA        E1F007AF                 call $kal_float_lib.float_to_frac;
0x0016DB        F12C7FF3                 M[FP + -0xd] = r0;
0x0016DC        F1287FFE                 r0 = M[FP + -0x2];
0x0016DD        F1387FFF                 r1 = M[FP + -0x1];
0x0016DE        23240000                 r0 = r0 - r2;
0x0016DF        E1F007AA                 call $kal_float_lib.float_to_frac;
0x0016E0        F12C7FF4                 M[FP + -0xc] = r0;
0x0016E1        F14C7FF5                 M[FP + -0xb] = r2;
0x0016E2        F1042001                 popm <FP, rLink>;
0x0016E3        F103FFF6                 SP = SP + -10;
0x0016E4        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_bypass>
0x0016E5        F1002005                 pushm <FP(=SP), r0, rLink>;
0x0016E6        E420002F                 r0 = Null + 1;
0x0016E7        F12C7FFA                 M[FP + -0x6] = r0;
0x0016E8        01200000                 r0 = Null + 0;
0x0016E9        F12C7FFC                 M[FP + -0x4] = r0;
0x0016EA        F12C7FFB                 M[FP + -0x5] = r0;
0x0016EB        F12C7FFF                 M[FP + -0x1] = r0;
0x0016EC        F12C7FFE                 M[FP + -0x2] = r0;
0x0016ED        FD000040 01200000        r0 = Null + 4194304;
0x0016EF        F12C7FFD                 M[FP + -0x3] = r0;
0x0016F0        F1042005                 popm <FP, r0, rLink>;
0x0016F1        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_low_pass_1st>
0x0016F2        F10023FD                 pushm <FP(=SP), r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x0016F3        F1287FFC                 r0 = M[FP + -0x4];
0x0016F4        F1387FFD                 r1 = M[FP + -0x3];
0x0016F5        F1487FFE                 r2 = M[FP + -0x2];
0x0016F6        F1587FFF                 r3 = M[FP + -0x1];
0x0016F7        E1F0FF78                 call $kal_filter_coef_lib.__warp;
0x0016F8        0062000F                 r4 = r0 + Null;
0x0016F9        0073000F                 r5 = r1 + Null;
0x0016FA        01400080                 r2 = Null + 128;
0x0016FB        FD000080 01500000        r3 = Null + -8388608;
0x0016FD        E1F00794                 call $kal_float_lib.add;
0x0016FE        E1F007BA                 call $kal_float_lib.recip;
0x0016FF        0082000F                 r6 = r0 + Null;
0x001700        0093000F                 r7 = r1 + Null;
0x001701        0046000F                 r2 = r4 + Null;
0x001702        0057000F                 r3 = r5 + Null;
0x001703        E1F007A0                 call $kal_float_lib.mul;
0x001704        F1030006                 SP = SP + 6;
0x001705        F100000C                 pushm <r0, r1>;
0x001706        F100000C                 pushm <r0, r1>;
0x001707        01200000                 r0 = Null + 0;
0x001708        01300000                 r1 = Null + 0;
0x001709        F100000C                 pushm <r0, r1>;
0x00170A        0026000F                 r0 = r4 + Null;
0x00170B        0037000F                 r1 = r5 + Null;
0x00170C        01400080                 r2 = Null + 128;
0x00170D        FD000080 01500000        r3 = Null + -8388608;
0x00170F        E1F0078B                 call $kal_float_lib.sub;
0x001710        0048000F                 r2 = r6 + Null;
0x001711        0059000F                 r3 = r7 + Null;
0x001712        E1F00791                 call $kal_float_lib.mul;
0x001713        F100000C                 pushm <r0, r1>;
0x001714        01200000                 r0 = Null + 0;
0x001715        01300000                 r1 = Null + 0;
0x001716        F100000C                 pushm <r0, r1>;
0x001717        E1F0FFA0                 call $kal_filter_coef_lib.__scale_coefficients;
0x001718        F3240000                 pop r0;
0x001719        F12C7FF6                 M[FP + -0xa] = r0;
0x00171A        F3240000                 pop r0;
0x00171B        F12C7FF8                 M[FP + -0x8] = r0;
0x00171C        F3240000                 pop r0;
0x00171D        F12C7FF7                 M[FP + -0x9] = r0;
0x00171E        F3240000                 pop r0;
0x00171F        F12C7FFB                 M[FP + -0x5] = r0;
0x001720        F3240000                 pop r0;
0x001721        F12C7FFA                 M[FP + -0x6] = r0;
0x001722        F3240000                 pop r0;
0x001723        F12C7FF9                 M[FP + -0x7] = r0;
0x001724        F10423FD                 popm <FP, r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x001725        F103FFFC                 SP = SP + -4;
0x001726        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_high_pass_1st>
0x001727        F10023FD                 pushm <FP(=SP), r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x001728        F1287FFC                 r0 = M[FP + -0x4];
0x001729        F1387FFD                 r1 = M[FP + -0x3];
0x00172A        F1487FFE                 r2 = M[FP + -0x2];
0x00172B        F1587FFF                 r3 = M[FP + -0x1];
0x00172C        E1F0FF43                 call $kal_filter_coef_lib.__warp;
0x00172D        0062000F                 r4 = r0 + Null;
0x00172E        0073000F                 r5 = r1 + Null;
0x00172F        01400080                 r2 = Null + 128;
0x001730        FD000080 01500000        r3 = Null + -8388608;
0x001732        E1F0075F                 call $kal_float_lib.add;
0x001733        E1F00785                 call $kal_float_lib.recip;
0x001734        0082000F                 r6 = r0 + Null;
0x001735        0093000F                 r7 = r1 + Null;
0x001736        F1030006                 SP = SP + 6;
0x001737        F100000C                 pushm <r0, r1>;
0x001738        FD000080 89220000        r0 = r0 XOR 0x800000;
0x00173A        F100000C                 pushm <r0, r1>;
0x00173B        01200000                 r0 = Null + 0;
0x00173C        01300000                 r1 = Null + 0;
0x00173D        F100000C                 pushm <r0, r1>;
0x00173E        0026000F                 r0 = r4 + Null;
0x00173F        0037000F                 r1 = r5 + Null;
0x001740        01400080                 r2 = Null + 128;
0x001741        FD000080 01500000        r3 = Null + -8388608;
0x001743        E1F00757                 call $kal_float_lib.sub;
0x001744        0048000F                 r2 = r6 + Null;
0x001745        0059000F                 r3 = r7 + Null;
0x001746        E1F0075D                 call $kal_float_lib.mul;
0x001747        F100000C                 pushm <r0, r1>;
0x001748        01200000                 r0 = Null + 0;
0x001749        01300000                 r1 = Null + 0;
0x00174A        F100000C                 pushm <r0, r1>;
0x00174B        E1F0FF6C                 call $kal_filter_coef_lib.__scale_coefficients;
0x00174C        F3240000                 pop r0;
0x00174D        F12C7FF6                 M[FP + -0xa] = r0;
0x00174E        F3240000                 pop r0;
0x00174F        F12C7FF8                 M[FP + -0x8] = r0;
0x001750        F3240000                 pop r0;
0x001751        F12C7FF7                 M[FP + -0x9] = r0;
0x001752        F3240000                 pop r0;
0x001753        F12C7FFB                 M[FP + -0x5] = r0;
0x001754        F3240000                 pop r0;
0x001755        F12C7FFA                 M[FP + -0x6] = r0;
0x001756        F3240000                 pop r0;
0x001757        F12C7FF9                 M[FP + -0x7] = r0;
0x001758        F10423FD                 popm <FP, r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x001759        F103FFFC                 SP = SP + -4;
0x00175A        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_all_pass_1st>
0x00175B        F10023FD                 pushm <FP(=SP), r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x00175C        F1287FFC                 r0 = M[FP + -0x4];
0x00175D        F1387FFD                 r1 = M[FP + -0x3];
0x00175E        F1487FFE                 r2 = M[FP + -0x2];
0x00175F        F1587FFF                 r3 = M[FP + -0x1];
0x001760        E1F0FF0F                 call $kal_filter_coef_lib.__warp;
0x001761        0062000F                 r4 = r0 + Null;
0x001762        0073000F                 r5 = r1 + Null;
0x001763        01400080                 r2 = Null + 128;
0x001764        FD000080 01500000        r3 = Null + -8388608;
0x001766        E1F0072B                 call $kal_float_lib.add;
0x001767        E1F00751                 call $kal_float_lib.recip;
0x001768        0082000F                 r6 = r0 + Null;
0x001769        0093000F                 r7 = r1 + Null;
0x00176A        F1030006                 SP = SP + 6;
0x00176B        01200080                 r0 = Null + 128;
0x00176C        FD000080 01300000        r1 = Null + -8388608;
0x00176E        0046000F                 r2 = r4 + Null;
0x00176F        0057000F                 r3 = r5 + Null;
0x001770        E1F0072A                 call $kal_float_lib.sub;
0x001771        0048000F                 r2 = r6 + Null;
0x001772        0059000F                 r3 = r7 + Null;
0x001773        E1F00730                 call $kal_float_lib.mul;
0x001774        F100000C                 pushm <r0, r1>;
0x001775        0042000F                 r2 = r0 + Null;
0x001776        0053000F                 r3 = r1 + Null;
0x001777        01200080                 r0 = Null + 128;
0x001778        FD000080 01300000        r1 = Null + -8388608;
0x00177A        FD000080 89220000        r0 = r0 XOR 0x800000;
0x00177C        F100000C                 pushm <r0, r1>;
0x00177D        01200000                 r0 = Null + 0;
0x00177E        01300000                 r1 = Null + 0;
0x00177F        F100000C                 pushm <r0, r1>;
0x001780        0024000F                 r0 = r2 + Null;
0x001781        0035000F                 r1 = r3 + Null;
0x001782        FD000080 89220000        r0 = r0 XOR 0x800000;
0x001784        F100000C                 pushm <r0, r1>;
0x001785        01200000                 r0 = Null + 0;
0x001786        01300000                 r1 = Null + 0;
0x001787        F100000C                 pushm <r0, r1>;
0x001788        E1F0FF2F                 call $kal_filter_coef_lib.__scale_coefficients;
0x001789        F3240000                 pop r0;
0x00178A        F12C7FF6                 M[FP + -0xa] = r0;
0x00178B        F3240000                 pop r0;
0x00178C        F12C7FF8                 M[FP + -0x8] = r0;
0x00178D        F3240000                 pop r0;
0x00178E        F12C7FF7                 M[FP + -0x9] = r0;
0x00178F        F3240000                 pop r0;
0x001790        F12C7FFB                 M[FP + -0x5] = r0;
0x001791        F3240000                 pop r0;
0x001792        F12C7FFA                 M[FP + -0x6] = r0;
0x001793        F3240000                 pop r0;
0x001794        F12C7FF9                 M[FP + -0x7] = r0;
0x001795        F10423FD                 popm <FP, r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x001796        F103FFFC                 SP = SP + -4;
0x001797        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_shelf_1st>
0x001798        F10023FD                 pushm <FP(=SP), r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x001799        F1030004                 SP = SP + 4;
0x00179A        F1287FF8                 r0 = M[FP + -0x8];
0x00179B        F1387FF9                 r1 = M[FP + -0x7];
0x00179C        F1487FFE                 r2 = M[FP + -0x2];
0x00179D        F1587FFF                 r3 = M[FP + -0x1];
0x00179E        E1F0FED1                 call $kal_filter_coef_lib.__warp;
0x00179F        0062000F                 r4 = r0 + Null;
0x0017A0        0073000F                 r5 = r1 + Null;
0x0017A1        F1287FFC                 r0 = M[FP + -0x4];
0x0017A2        F1387FFD                 r1 = M[FP + -0x3];
0x0017A3        E1F0FEED                 call $kal_filter_coef_lib.__db2lin;
0x0017A4        F12C000C                 M[FP + 0xc] = r0;
0x0017A5        F13C000D                 M[FP + 0xd] = r1;
0x0017A6        F1287FFA                 r0 = M[FP + -0x6];
0x0017A7        F1387FFB                 r1 = M[FP + -0x5];
0x0017A8        E422003F                 r0 = r0 - 1;
0x0017A9        E1F0FEE7                 call $kal_filter_coef_lib.__db2lin;
0x0017AA        0042000F                 r2 = r0 + Null;
0x0017AB        0053000F                 r3 = r1 + Null;
0x0017AC        0026000F                 r0 = r4 + Null;
0x0017AD        0037000F                 r1 = r5 + Null;
0x0017AE        E1F00727                 call $kal_float_lib.div;
0x0017AF        0082000F                 r6 = r0 + Null;
0x0017B0        0093000F                 r7 = r1 + Null;
0x0017B1        0026000F                 r0 = r4 + Null;
0x0017B2        0037000F                 r1 = r5 + Null;
0x0017B3        E1F006F0                 call $kal_float_lib.mul;
0x0017B4        0062000F                 r4 = r0 + Null;
0x0017B5        0073000F                 r5 = r1 + Null;
0x0017B6        0028000F                 r0 = r6 + Null;
0x0017B7        0039000F                 r1 = r7 + Null;
0x0017B8        01400080                 r2 = Null + 128;
0x0017B9        FD000080 01500000        r3 = Null + -8388608;
0x0017BB        E1F006D6                 call $kal_float_lib.add;
0x0017BC        E1F006FC                 call $kal_float_lib.recip;
0x0017BD        F12C000A                 M[FP + 0xa] = r0;
0x0017BE        F13C000B                 M[FP + 0xb] = r1;
0x0017BF        F1030006                 SP = SP + 6;
0x0017C0        0026000F                 r0 = r4 + Null;
0x0017C1        0037000F                 r1 = r5 + Null;
0x0017C2        01400080                 r2 = Null + 128;
0x0017C3        FD000080 01500000        r3 = Null + -8388608;
0x0017C5        E1F006CC                 call $kal_float_lib.add;
0x0017C6        F148000A                 r2 = M[FP + 0xa];
0x0017C7        F158000B                 r3 = M[FP + 0xb];
0x0017C8        E1F006DB                 call $kal_float_lib.mul;
0x0017C9        F148000C                 r2 = M[FP + 0xc];
0x0017CA        F158000D                 r3 = M[FP + 0xd];
0x0017CB        E1F006D8                 call $kal_float_lib.mul;
0x0017CC        F100000C                 pushm <r0, r1>;
0x0017CD        0026000F                 r0 = r4 + Null;
0x0017CE        0037000F                 r1 = r5 + Null;
0x0017CF        01400080                 r2 = Null + 128;
0x0017D0        FD000080 01500000        r3 = Null + -8388608;
0x0017D2        E1F006C8                 call $kal_float_lib.sub;
0x0017D3        F148000A                 r2 = M[FP + 0xa];
0x0017D4        F158000B                 r3 = M[FP + 0xb];
0x0017D5        E1F006CE                 call $kal_float_lib.mul;
0x0017D6        F148000C                 r2 = M[FP + 0xc];
0x0017D7        F158000D                 r3 = M[FP + 0xd];
0x0017D8        E1F006CB                 call $kal_float_lib.mul;
0x0017D9        F100000C                 pushm <r0, r1>;
0x0017DA        01200000                 r0 = Null + 0;
0x0017DB        01300000                 r1 = Null + 0;
0x0017DC        F100000C                 pushm <r0, r1>;
0x0017DD        0028000F                 r0 = r6 + Null;
0x0017DE        0039000F                 r1 = r7 + Null;
0x0017DF        01400080                 r2 = Null + 128;
0x0017E0        FD000080 01500000        r3 = Null + -8388608;
0x0017E2        E1F006B8                 call $kal_float_lib.sub;
0x0017E3        F148000A                 r2 = M[FP + 0xa];
0x0017E4        F158000B                 r3 = M[FP + 0xb];
0x0017E5        E1F006BE                 call $kal_float_lib.mul;
0x0017E6        F100000C                 pushm <r0, r1>;
0x0017E7        01200000                 r0 = Null + 0;
0x0017E8        01300000                 r1 = Null + 0;
0x0017E9        F100000C                 pushm <r0, r1>;
0x0017EA        E1F0FECD                 call $kal_filter_coef_lib.__scale_coefficients;
0x0017EB        F3240000                 pop r0;
0x0017EC        F12C7FF7                 M[FP + -0x9] = r0;
0x0017ED        F3240000                 pop r0;
0x0017EE        F12C7FF6                 M[FP + -0xa] = r0;
0x0017EF        F3240000                 pop r0;
0x0017F0        F12C7FF5                 M[FP + -0xb] = r0;
0x0017F1        F3240000                 pop r0;
0x0017F2        F12C7FF4                 M[FP + -0xc] = r0;
0x0017F3        F3240000                 pop r0;
0x0017F4        F12C7FF3                 M[FP + -0xd] = r0;
0x0017F5        F3240000                 pop r0;
0x0017F6        F12C7FF2                 M[FP + -0xe] = r0;
0x0017F7        F103FFFC                 SP = SP + -4;
0x0017F8        F10423FD                 popm <FP, r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x0017F9        F103FFF8                 SP = SP + -8;
0x0017FA        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_low_shelf_1st>
0x0017FB        F100200D                 pushm <FP(=SP), r0, r1, rLink>;
0x0017FC        F1030006                 SP = SP + 6;
0x0017FD        F1287FFA                 r0 = M[FP + -0x6];
0x0017FE        F1387FFB                 r1 = M[FP + -0x5];
0x0017FF        F100000C                 pushm <r0, r1>;
0x001800        F1287FFC                 r0 = M[FP + -0x4];
0x001801        F1387FFD                 r1 = M[FP + -0x3];
0x001802        F100000C                 pushm <r0, r1>;
0x001803        01200000                 r0 = Null + 0;
0x001804        01300000                 r1 = Null + 0;
0x001805        F100000C                 pushm <r0, r1>;
0x001806        F1287FFE                 r0 = M[FP + -0x2];
0x001807        F1387FFF                 r1 = M[FP + -0x1];
0x001808        F100000C                 pushm <r0, r1>;
0x001809        E1F0FF8F                 call $kal_filter_coef_lib.calc_shelf_1st;
0x00180A        F3240000                 pop r0;
0x00180B        F12C7FF4                 M[FP + -0xc] = r0;
0x00180C        F3240000                 pop r0;
0x00180D        F12C7FF6                 M[FP + -0xa] = r0;
0x00180E        F3240000                 pop r0;
0x00180F        F12C7FF5                 M[FP + -0xb] = r0;
0x001810        F3240000                 pop r0;
0x001811        F12C7FF9                 M[FP + -0x7] = r0;
0x001812        F3240000                 pop r0;
0x001813        F12C7FF8                 M[FP + -0x8] = r0;
0x001814        F3240000                 pop r0;
0x001815        F12C7FF7                 M[FP + -0x9] = r0;
0x001816        F104200D                 popm <FP, r0, r1, rLink>;
0x001817        F103FFFA                 SP = SP + -6;
0x001818        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_high_shelf_1st>
0x001819        F100200D                 pushm <FP(=SP), r0, r1, rLink>;
0x00181A        F1030006                 SP = SP + 6;
0x00181B        F1287FFA                 r0 = M[FP + -0x6];
0x00181C        F1387FFB                 r1 = M[FP + -0x5];
0x00181D        F100000C                 pushm <r0, r1>;
0x00181E        F1287FFC                 r0 = M[FP + -0x4];
0x00181F        FD000080 89220000        r0 = r0 XOR 0x800000;
0x001821        F1387FFD                 r1 = M[FP + -0x3];
0x001822        F100000C                 pushm <r0, r1>;
0x001823        FD000080 89220000        r0 = r0 XOR 0x800000;
0x001825        F100000C                 pushm <r0, r1>;
0x001826        F1287FFE                 r0 = M[FP + -0x2];
0x001827        F1387FFF                 r1 = M[FP + -0x1];
0x001828        F100000C                 pushm <r0, r1>;
0x001829        E1F0FF6F                 call $kal_filter_coef_lib.calc_shelf_1st;
0x00182A        F3240000                 pop r0;
0x00182B        F12C7FF4                 M[FP + -0xc] = r0;
0x00182C        F3240000                 pop r0;
0x00182D        F12C7FF6                 M[FP + -0xa] = r0;
0x00182E        F3240000                 pop r0;
0x00182F        F12C7FF5                 M[FP + -0xb] = r0;
0x001830        F3240000                 pop r0;
0x001831        F12C7FF9                 M[FP + -0x7] = r0;
0x001832        F3240000                 pop r0;
0x001833        F12C7FF8                 M[FP + -0x8] = r0;
0x001834        F3240000                 pop r0;
0x001835        F12C7FF7                 M[FP + -0x9] = r0;
0x001836        F104200D                 popm <FP, r0, r1, rLink>;
0x001837        F103FFFA                 SP = SP + -6;
0x001838        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_tilt_1st>
0x001839        F100200D                 pushm <FP(=SP), r0, r1, rLink>;
0x00183A        F1030006                 SP = SP + 6;
0x00183B        F1287FFA                 r0 = M[FP + -0x6];
0x00183C        F1387FFB                 r1 = M[FP + -0x5];
0x00183D        F100000C                 pushm <r0, r1>;
0x00183E        F1287FFC                 r0 = M[FP + -0x4];
0x00183F        FD000080 89220000        r0 = r0 XOR 0x800000;
0x001841        F1387FFD                 r1 = M[FP + -0x3];
0x001842        F100000C                 pushm <r0, r1>;
0x001843        FD000080 89220000        r0 = r0 XOR 0x800000;
0x001845        E422003F                 r0 = r0 - 1;
0x001846        F100000C                 pushm <r0, r1>;
0x001847        F1287FFE                 r0 = M[FP + -0x2];
0x001848        F1387FFF                 r1 = M[FP + -0x1];
0x001849        F100000C                 pushm <r0, r1>;
0x00184A        E1F0FF4E                 call $kal_filter_coef_lib.calc_shelf_1st;
0x00184B        F3240000                 pop r0;
0x00184C        F12C7FF4                 M[FP + -0xc] = r0;
0x00184D        F3240000                 pop r0;
0x00184E        F12C7FF6                 M[FP + -0xa] = r0;
0x00184F        F3240000                 pop r0;
0x001850        F12C7FF5                 M[FP + -0xb] = r0;
0x001851        F3240000                 pop r0;
0x001852        F12C7FF9                 M[FP + -0x7] = r0;
0x001853        F3240000                 pop r0;
0x001854        F12C7FF8                 M[FP + -0x8] = r0;
0x001855        F3240000                 pop r0;
0x001856        F12C7FF7                 M[FP + -0x9] = r0;
0x001857        F104200D                 popm <FP, r0, r1, rLink>;
0x001858        F103FFFA                 SP = SP + -6;
0x001859        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_low_pass_2nd>
0x00185A        F10023FD                 pushm <FP(=SP), r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x00185B        F1030002                 SP = SP + 2;
0x00185C        F1287FFA                 r0 = M[FP + -0x6];
0x00185D        F1387FFB                 r1 = M[FP + -0x5];
0x00185E        F1487FFE                 r2 = M[FP + -0x2];
0x00185F        F1587FFF                 r3 = M[FP + -0x1];
0x001860        E1F0FE0F                 call $kal_filter_coef_lib.__warp;
0x001861        0042000F                 r2 = r0 + Null;
0x001862        0053000F                 r3 = r1 + Null;
0x001863        E1F00640                 call $kal_float_lib.mul;
0x001864        0082000F                 r6 = r0 + Null;
0x001865        0093000F                 r7 = r1 + Null;
0x001866        0024000F                 r0 = r2 + Null;
0x001867        0035000F                 r1 = r3 + Null;
0x001868        F1487FFC                 r2 = M[FP + -0x4];
0x001869        F1587FFD                 r3 = M[FP + -0x3];
0x00186A        E1F0066B                 call $kal_float_lib.div;
0x00186B        0062000F                 r4 = r0 + Null;
0x00186C        0073000F                 r5 = r1 + Null;
0x00186D        0048000F                 r2 = r6 + Null;
0x00186E        0059000F                 r3 = r7 + Null;
0x00186F        E1F00622                 call $kal_float_lib.add;
0x001870        01400080                 r2 = Null + 128;
0x001871        FD000080 01500000        r3 = Null + -8388608;
0x001873        E1F0061E                 call $kal_float_lib.add;
0x001874        E1F00644                 call $kal_float_lib.recip;
0x001875        F12C000A                 M[FP + 0xa] = r0;
0x001876        F13C000B                 M[FP + 0xb] = r1;
0x001877        F1030006                 SP = SP + 6;
0x001878        0028000F                 r0 = r6 + Null;
0x001879        0039000F                 r1 = r7 + Null;
0x00187A        F148000A                 r2 = M[FP + 0xa];
0x00187B        F158000B                 r3 = M[FP + 0xb];
0x00187C        E1F00627                 call $kal_float_lib.mul;
0x00187D        F100000C                 pushm <r0, r1>;
0x00187E        E422002F                 r0 = r0 + 1;
0x00187F        F100000C                 pushm <r0, r1>;
0x001880        E422003F                 r0 = r0 - 1;
0x001881        F100000C                 pushm <r0, r1>;
0x001882        0028000F                 r0 = r6 + Null;
0x001883        0039000F                 r1 = r7 + Null;
0x001884        01400081                 r2 = Null + 129;
0x001885        FD000080 01500000        r3 = Null + -8388608;
0x001887        E1F0061C                 call $kal_float_lib.mul;
0x001888        E1F00612                 call $kal_float_lib.sub;
0x001889        F148000A                 r2 = M[FP + 0xa];
0x00188A        F158000B                 r3 = M[FP + 0xb];
0x00188B        E1F00618                 call $kal_float_lib.mul;
0x00188C        F100000C                 pushm <r0, r1>;
0x00188D        0028000F                 r0 = r6 + Null;
0x00188E        0039000F                 r1 = r7 + Null;
0x00188F        0046000F                 r2 = r4 + Null;
0x001890        0057000F                 r3 = r5 + Null;
0x001891        E1F00609                 call $kal_float_lib.sub;
0x001892        01400080                 r2 = Null + 128;
0x001893        FD000080 01500000        r3 = Null + -8388608;
0x001895        E1F005FC                 call $kal_float_lib.add;
0x001896        F148000A                 r2 = M[FP + 0xa];
0x001897        F158000B                 r3 = M[FP + 0xb];
0x001898        E1F0060B                 call $kal_float_lib.mul;
0x001899        F100000C                 pushm <r0, r1>;
0x00189A        E1F0FE1D                 call $kal_filter_coef_lib.__scale_coefficients;
0x00189B        F3240000                 pop r0;
0x00189C        F12C7FF4                 M[FP + -0xc] = r0;
0x00189D        F3240000                 pop r0;
0x00189E        F12C7FF6                 M[FP + -0xa] = r0;
0x00189F        F3240000                 pop r0;
0x0018A0        F12C7FF5                 M[FP + -0xb] = r0;
0x0018A1        F3240000                 pop r0;
0x0018A2        F12C7FF9                 M[FP + -0x7] = r0;
0x0018A3        F3240000                 pop r0;
0x0018A4        F12C7FF8                 M[FP + -0x8] = r0;
0x0018A5        F3240000                 pop r0;
0x0018A6        F12C7FF7                 M[FP + -0x9] = r0;
0x0018A7        F103FFFE                 SP = SP + -2;
0x0018A8        F10423FD                 popm <FP, r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x0018A9        F103FFFA                 SP = SP + -6;
0x0018AA        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_high_pass_2nd>
0x0018AB        F10023FD                 pushm <FP(=SP), r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x0018AC        F1030002                 SP = SP + 2;
0x0018AD        F1287FFA                 r0 = M[FP + -0x6];
0x0018AE        F1387FFB                 r1 = M[FP + -0x5];
0x0018AF        F1487FFE                 r2 = M[FP + -0x2];
0x0018B0        F1587FFF                 r3 = M[FP + -0x1];
0x0018B1        E1F0FDBE                 call $kal_filter_coef_lib.__warp;
0x0018B2        0042000F                 r2 = r0 + Null;
0x0018B3        0053000F                 r3 = r1 + Null;
0x0018B4        E1F005EF                 call $kal_float_lib.mul;
0x0018B5        0082000F                 r6 = r0 + Null;
0x0018B6        0093000F                 r7 = r1 + Null;
0x0018B7        0024000F                 r0 = r2 + Null;
0x0018B8        0035000F                 r1 = r3 + Null;
0x0018B9        F1487FFC                 r2 = M[FP + -0x4];
0x0018BA        F1587FFD                 r3 = M[FP + -0x3];
0x0018BB        E1F0061A                 call $kal_float_lib.div;
0x0018BC        0062000F                 r4 = r0 + Null;
0x0018BD        0073000F                 r5 = r1 + Null;
0x0018BE        0048000F                 r2 = r6 + Null;
0x0018BF        0059000F                 r3 = r7 + Null;
0x0018C0        E1F005D1                 call $kal_float_lib.add;
0x0018C1        01400080                 r2 = Null + 128;
0x0018C2        FD000080 01500000        r3 = Null + -8388608;
0x0018C4        E1F005CD                 call $kal_float_lib.add;
0x0018C5        E1F005F3                 call $kal_float_lib.recip;
0x0018C6        F12C000A                 M[FP + 0xa] = r0;
0x0018C7        F13C000B                 M[FP + 0xb] = r1;
0x0018C8        F1030006                 SP = SP + 6;
0x0018C9        F100000C                 pushm <r0, r1>;
0x0018CA        FD000080 89220000        r0 = r0 XOR 0x800000;
0x0018CC        E422002F                 r0 = r0 + 1;
0x0018CD        F100000C                 pushm <r0, r1>;
0x0018CE        FD000080 89220000        r0 = r0 XOR 0x800000;
0x0018D0        E422003F                 r0 = r0 - 1;
0x0018D1        F100000C                 pushm <r0, r1>;
0x0018D2        0028000F                 r0 = r6 + Null;
0x0018D3        0039000F                 r1 = r7 + Null;
0x0018D4        01400081                 r2 = Null + 129;
0x0018D5        FD000080 01500000        r3 = Null + -8388608;
0x0018D7        E1F005CC                 call $kal_float_lib.mul;
0x0018D8        E1F005C2                 call $kal_float_lib.sub;
0x0018D9        F148000A                 r2 = M[FP + 0xa];
0x0018DA        F158000B                 r3 = M[FP + 0xb];
0x0018DB        E1F005C8                 call $kal_float_lib.mul;
0x0018DC        F100000C                 pushm <r0, r1>;
0x0018DD        0028000F                 r0 = r6 + Null;
0x0018DE        0039000F                 r1 = r7 + Null;
0x0018DF        0046000F                 r2 = r4 + Null;
0x0018E0        0057000F                 r3 = r5 + Null;
0x0018E1        E1F005B9                 call $kal_float_lib.sub;
0x0018E2        01400080                 r2 = Null + 128;
0x0018E3        FD000080 01500000        r3 = Null + -8388608;
0x0018E5        E1F005AC                 call $kal_float_lib.add;
0x0018E6        F148000A                 r2 = M[FP + 0xa];
0x0018E7        F158000B                 r3 = M[FP + 0xb];
0x0018E8        E1F005BB                 call $kal_float_lib.mul;
0x0018E9        F100000C                 pushm <r0, r1>;
0x0018EA        E1F0FDCD                 call $kal_filter_coef_lib.__scale_coefficients;
0x0018EB        F3240000                 pop r0;
0x0018EC        F12C7FF4                 M[FP + -0xc] = r0;
0x0018ED        F3240000                 pop r0;
0x0018EE        F12C7FF6                 M[FP + -0xa] = r0;
0x0018EF        F3240000                 pop r0;
0x0018F0        F12C7FF5                 M[FP + -0xb] = r0;
0x0018F1        F3240000                 pop r0;
0x0018F2        F12C7FF9                 M[FP + -0x7] = r0;
0x0018F3        F3240000                 pop r0;
0x0018F4        F12C7FF8                 M[FP + -0x8] = r0;
0x0018F5        F3240000                 pop r0;
0x0018F6        F12C7FF7                 M[FP + -0x9] = r0;
0x0018F7        F103FFFE                 SP = SP + -2;
0x0018F8        F10423FD                 popm <FP, r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x0018F9        F103FFFA                 SP = SP + -6;
0x0018FA        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_all_pass_2nd>
0x0018FB        F10023FD                 pushm <FP(=SP), r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x0018FC        F1030002                 SP = SP + 2;
0x0018FD        F1287FFA                 r0 = M[FP + -0x6];
0x0018FE        F1387FFB                 r1 = M[FP + -0x5];
0x0018FF        F1487FFE                 r2 = M[FP + -0x2];
0x001900        F1587FFF                 r3 = M[FP + -0x1];
0x001901        E1F0FD6E                 call $kal_filter_coef_lib.__warp;
0x001902        0042000F                 r2 = r0 + Null;
0x001903        0053000F                 r3 = r1 + Null;
0x001904        E1F0059F                 call $kal_float_lib.mul;
0x001905        0082000F                 r6 = r0 + Null;
0x001906        0093000F                 r7 = r1 + Null;
0x001907        0024000F                 r0 = r2 + Null;
0x001908        0035000F                 r1 = r3 + Null;
0x001909        F1487FFC                 r2 = M[FP + -0x4];
0x00190A        F1587FFD                 r3 = M[FP + -0x3];
0x00190B        E1F005CA                 call $kal_float_lib.div;
0x00190C        0062000F                 r4 = r0 + Null;
0x00190D        0073000F                 r5 = r1 + Null;
0x00190E        0048000F                 r2 = r6 + Null;
0x00190F        0059000F                 r3 = r7 + Null;
0x001910        E1F00581                 call $kal_float_lib.add;
0x001911        01400080                 r2 = Null + 128;
0x001912        FD000080 01500000        r3 = Null + -8388608;
0x001914        E1F0057D                 call $kal_float_lib.add;
0x001915        E1F005A3                 call $kal_float_lib.recip;
0x001916        F12C000A                 M[FP + 0xa] = r0;
0x001917        F13C000B                 M[FP + 0xb] = r1;
0x001918        F1030006                 SP = SP + 6;
0x001919        0028000F                 r0 = r6 + Null;
0x00191A        0039000F                 r1 = r7 + Null;
0x00191B        0046000F                 r2 = r4 + Null;
0x00191C        0057000F                 r3 = r5 + Null;
0x00191D        E1F0057D                 call $kal_float_lib.sub;
0x00191E        01400080                 r2 = Null + 128;
0x00191F        FD000080 01500000        r3 = Null + -8388608;
0x001921        E1F00570                 call $kal_float_lib.add;
0x001922        F148000A                 r2 = M[FP + 0xa];
0x001923        F158000B                 r3 = M[FP + 0xb];
0x001924        E1F0057F                 call $kal_float_lib.mul;
0x001925        F100000C                 pushm <r0, r1>;
0x001926        0062000F                 r4 = r0 + Null;
0x001927        0073000F                 r5 = r1 + Null;
0x001928        0028000F                 r0 = r6 + Null;
0x001929        0039000F                 r1 = r7 + Null;
0x00192A        01400081                 r2 = Null + 129;
0x00192B        FD000080 01500000        r3 = Null + -8388608;
0x00192D        E1F00576                 call $kal_float_lib.mul;
0x00192E        E1F0056C                 call $kal_float_lib.sub;
0x00192F        F148000A                 r2 = M[FP + 0xa];
0x001930        F158000B                 r3 = M[FP + 0xb];
0x001931        E1F00572                 call $kal_float_lib.mul;
0x001932        F100000C                 pushm <r0, r1>;
0x001933        0082000F                 r6 = r0 + Null;
0x001934        0093000F                 r7 = r1 + Null;
0x001935        01200080                 r0 = Null + 128;
0x001936        FD000080 01300000        r1 = Null + -8388608;
0x001938        F100000C                 pushm <r0, r1>;
0x001939        F1000300                 pushm <r6, r7>;
0x00193A        F10000C0                 pushm <r4, r5>;
0x00193B        E1F0FD7C                 call $kal_filter_coef_lib.__scale_coefficients;
0x00193C        F3240000                 pop r0;
0x00193D        F12C7FF4                 M[FP + -0xc] = r0;
0x00193E        F3240000                 pop r0;
0x00193F        F12C7FF6                 M[FP + -0xa] = r0;
0x001940        F3240000                 pop r0;
0x001941        F12C7FF5                 M[FP + -0xb] = r0;
0x001942        F3240000                 pop r0;
0x001943        F12C7FF9                 M[FP + -0x7] = r0;
0x001944        F3240000                 pop r0;
0x001945        F12C7FF8                 M[FP + -0x8] = r0;
0x001946        F3240000                 pop r0;
0x001947        F12C7FF7                 M[FP + -0x9] = r0;
0x001948        F103FFFE                 SP = SP + -2;
0x001949        F10423FD                 popm <FP, r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x00194A        F103FFFA                 SP = SP + -6;
0x00194B        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_shelf_2nd>
0x00194C        F10023FD                 pushm <FP(=SP), r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x00194D        F1030008                 SP = SP + 8;
0x00194E        F1287FF6                 r0 = M[FP + -0xa];
0x00194F        F1387FF7                 r1 = M[FP + -0x9];
0x001950        F1487FFE                 r2 = M[FP + -0x2];
0x001951        F1587FFF                 r3 = M[FP + -0x1];
0x001952        E1F0FD1D                 call $kal_filter_coef_lib.__warp;
0x001953        0062000F                 r4 = r0 + Null;
0x001954        0073000F                 r5 = r1 + Null;
0x001955        F1287FFC                 r0 = M[FP + -0x4];
0x001956        F1387FFD                 r1 = M[FP + -0x3];
0x001957        E1F0FD39                 call $kal_filter_coef_lib.__db2lin;
0x001958        F12C000C                 M[FP + 0xc] = r0;
0x001959        F13C000D                 M[FP + 0xd] = r1;
0x00195A        F1287FF8                 r0 = M[FP + -0x8];
0x00195B        F1387FF9                 r1 = M[FP + -0x7];
0x00195C        21220002                 r0 = r0 - 2;
0x00195D        E1F0FD33                 call $kal_filter_coef_lib.__db2lin;
0x00195E        0042000F                 r2 = r0 + Null;
0x00195F        0053000F                 r3 = r1 + Null;
0x001960        0026000F                 r0 = r4 + Null;
0x001961        0037000F                 r1 = r5 + Null;
0x001962        E1F00573                 call $kal_float_lib.div;
0x001963        0082000F                 r6 = r0 + Null;
0x001964        0093000F                 r7 = r1 + Null;
0x001965        0026000F                 r0 = r4 + Null;
0x001966        0037000F                 r1 = r5 + Null;
0x001967        E1F0053C                 call $kal_float_lib.mul;
0x001968        0062000F                 r4 = r0 + Null;
0x001969        0073000F                 r5 = r1 + Null;
0x00196A        F1487FFA                 r2 = M[FP + -0x6];
0x00196B        F1587FFB                 r3 = M[FP + -0x5];
0x00196C        E1F00569                 call $kal_float_lib.div;
0x00196D        F12C000E                 M[FP + 0xe] = r0;
0x00196E        F13C000F                 M[FP + 0xf] = r1;
0x00196F        0028000F                 r0 = r6 + Null;
0x001970        0039000F                 r1 = r7 + Null;
0x001971        E1F00564                 call $kal_float_lib.div;
0x001972        F12C0010                 M[FP + 0x10] = r0;
0x001973        F13C0011                 M[FP + 0x11] = r1;
0x001974        0028000F                 r0 = r6 + Null;
0x001975        0039000F                 r1 = r7 + Null;
0x001976        0048000F                 r2 = r6 + Null;
0x001977        0059000F                 r3 = r7 + Null;
0x001978        E1F0052B                 call $kal_float_lib.mul;
0x001979        0082000F                 r6 = r0 + Null;
0x00197A        0093000F                 r7 = r1 + Null;
0x00197B        F1480010                 r2 = M[FP + 0x10];
0x00197C        F1580011                 r3 = M[FP + 0x11];
0x00197D        E1F00514                 call $kal_float_lib.add;
0x00197E        01400080                 r2 = Null + 128;
0x00197F        FD000080 01500000        r3 = Null + -8388608;
0x001981        E1F00510                 call $kal_float_lib.add;
0x001982        E1F00536                 call $kal_float_lib.recip;
0x001983        F12C000A                 M[FP + 0xa] = r0;
0x001984        F13C000B                 M[FP + 0xb] = r1;
0x001985        F1030006                 SP = SP + 6;
0x001986        0026000F                 r0 = r4 + Null;
0x001987        0037000F                 r1 = r5 + Null;
0x001988        0046000F                 r2 = r4 + Null;
0x001989        0057000F                 r3 = r5 + Null;
0x00198A        E1F00519                 call $kal_float_lib.mul;
0x00198B        0062000F                 r4 = r0 + Null;
0x00198C        0073000F                 r5 = r1 + Null;
0x00198D        F148000E                 r2 = M[FP + 0xe];
0x00198E        F158000F                 r3 = M[FP + 0xf];
0x00198F        E1F00502                 call $kal_float_lib.add;
0x001990        01400080                 r2 = Null + 128;
0x001991        FD000080 01500000        r3 = Null + -8388608;
0x001993        E1F004FE                 call $kal_float_lib.add;
0x001994        F148000A                 r2 = M[FP + 0xa];
0x001995        F158000B                 r3 = M[FP + 0xb];
0x001996        E1F0050D                 call $kal_float_lib.mul;
0x001997        F148000C                 r2 = M[FP + 0xc];
0x001998        F158000D                 r3 = M[FP + 0xd];
0x001999        E1F0050A                 call $kal_float_lib.mul;
0x00199A        F100000C                 pushm <r0, r1>;
0x00199B        0026000F                 r0 = r4 + Null;
0x00199C        0037000F                 r1 = r5 + Null;
0x00199D        01400081                 r2 = Null + 129;
0x00199E        FD000080 01500000        r3 = Null + -8388608;
0x0019A0        E1F00503                 call $kal_float_lib.mul;
0x0019A1        E1F004F9                 call $kal_float_lib.sub;
0x0019A2        F148000A                 r2 = M[FP + 0xa];
0x0019A3        F158000B                 r3 = M[FP + 0xb];
0x0019A4        E1F004FF                 call $kal_float_lib.mul;
0x0019A5        F148000C                 r2 = M[FP + 0xc];
0x0019A6        F158000D                 r3 = M[FP + 0xd];
0x0019A7        E1F004FC                 call $kal_float_lib.mul;
0x0019A8        F100000C                 pushm <r0, r1>;
0x0019A9        0026000F                 r0 = r4 + Null;
0x0019AA        0037000F                 r1 = r5 + Null;
0x0019AB        F148000E                 r2 = M[FP + 0xe];
0x0019AC        F158000F                 r3 = M[FP + 0xf];
0x0019AD        E1F004ED                 call $kal_float_lib.sub;
0x0019AE        01400080                 r2 = Null + 128;
0x0019AF        FD000080 01500000        r3 = Null + -8388608;
0x0019B1        E1F004E0                 call $kal_float_lib.add;
0x0019B2        F148000A                 r2 = M[FP + 0xa];
0x0019B3        F158000B                 r3 = M[FP + 0xb];
0x0019B4        E1F004EF                 call $kal_float_lib.mul;
0x0019B5        F148000C                 r2 = M[FP + 0xc];
0x0019B6        F158000D                 r3 = M[FP + 0xd];
0x0019B7        E1F004EC                 call $kal_float_lib.mul;
0x0019B8        F100000C                 pushm <r0, r1>;
0x0019B9        0028000F                 r0 = r6 + Null;
0x0019BA        0039000F                 r1 = r7 + Null;
0x0019BB        01400081                 r2 = Null + 129;
0x0019BC        FD000080 01500000        r3 = Null + -8388608;
0x0019BE        E1F004E5                 call $kal_float_lib.mul;
0x0019BF        E1F004DB                 call $kal_float_lib.sub;
0x0019C0        F148000A                 r2 = M[FP + 0xa];
0x0019C1        F158000B                 r3 = M[FP + 0xb];
0x0019C2        E1F004E1                 call $kal_float_lib.mul;
0x0019C3        F100000C                 pushm <r0, r1>;
0x0019C4        0028000F                 r0 = r6 + Null;
0x0019C5        0039000F                 r1 = r7 + Null;
0x0019C6        F1480010                 r2 = M[FP + 0x10];
0x0019C7        F1580011                 r3 = M[FP + 0x11];
0x0019C8        E1F004D2                 call $kal_float_lib.sub;
0x0019C9        01400080                 r2 = Null + 128;
0x0019CA        FD000080 01500000        r3 = Null + -8388608;
0x0019CC        E1F004C5                 call $kal_float_lib.add;
0x0019CD        F148000A                 r2 = M[FP + 0xa];
0x0019CE        F158000B                 r3 = M[FP + 0xb];
0x0019CF        E1F004D4                 call $kal_float_lib.mul;
0x0019D0        F100000C                 pushm <r0, r1>;
0x0019D1        E1F0FCE6                 call $kal_filter_coef_lib.__scale_coefficients;
0x0019D2        F3240000                 pop r0;
0x0019D3        F12C7FF5                 M[FP + -0xb] = r0;
0x0019D4        F3240000                 pop r0;
0x0019D5        F12C7FF4                 M[FP + -0xc] = r0;
0x0019D6        F3240000                 pop r0;
0x0019D7        F12C7FF3                 M[FP + -0xd] = r0;
0x0019D8        F3240000                 pop r0;
0x0019D9        F12C7FF2                 M[FP + -0xe] = r0;
0x0019DA        F3240000                 pop r0;
0x0019DB        F12C7FF1                 M[FP + -0xf] = r0;
0x0019DC        F3240000                 pop r0;
0x0019DD        F12C7FF0                 M[FP + -0x10] = r0;
0x0019DE        F103FFF8                 SP = SP + -8;
0x0019DF        F10423FD                 popm <FP, r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x0019E0        F103FFF6                 SP = SP + -10;
0x0019E1        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_low_shelf_2nd>
0x0019E2        F100200D                 pushm <FP(=SP), r0, r1, rLink>;
0x0019E3        F1030006                 SP = SP + 6;
0x0019E4        F1287FF8                 r0 = M[FP + -0x8];
0x0019E5        F1387FF9                 r1 = M[FP + -0x7];
0x0019E6        F100000C                 pushm <r0, r1>;
0x0019E7        F1287FFA                 r0 = M[FP + -0x6];
0x0019E8        F1387FFB                 r1 = M[FP + -0x5];
0x0019E9        F100000C                 pushm <r0, r1>;
0x0019EA        F1287FFC                 r0 = M[FP + -0x4];
0x0019EB        F1387FFD                 r1 = M[FP + -0x3];
0x0019EC        F100000C                 pushm <r0, r1>;
0x0019ED        01200000                 r0 = Null + 0;
0x0019EE        01300000                 r1 = Null + 0;
0x0019EF        F100000C                 pushm <r0, r1>;
0x0019F0        F1287FFE                 r0 = M[FP + -0x2];
0x0019F1        F1387FFF                 r1 = M[FP + -0x1];
0x0019F2        F100000C                 pushm <r0, r1>;
0x0019F3        E1F0FF59                 call $kal_filter_coef_lib.calc_shelf_2nd;
0x0019F4        F3240000                 pop r0;
0x0019F5        F12C7FF2                 M[FP + -0xe] = r0;
0x0019F6        F3240000                 pop r0;
0x0019F7        F12C7FF4                 M[FP + -0xc] = r0;
0x0019F8        F3240000                 pop r0;
0x0019F9        F12C7FF3                 M[FP + -0xd] = r0;
0x0019FA        F3240000                 pop r0;
0x0019FB        F12C7FF7                 M[FP + -0x9] = r0;
0x0019FC        F3240000                 pop r0;
0x0019FD        F12C7FF6                 M[FP + -0xa] = r0;
0x0019FE        F3240000                 pop r0;
0x0019FF        F12C7FF5                 M[FP + -0xb] = r0;
0x001A00        F104200D                 popm <FP, r0, r1, rLink>;
0x001A01        F103FFF8                 SP = SP + -8;
0x001A02        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_high_shelf_2nd>
0x001A03        F100200D                 pushm <FP(=SP), r0, r1, rLink>;
0x001A04        F1030006                 SP = SP + 6;
0x001A05        F1287FF8                 r0 = M[FP + -0x8];
0x001A06        F1387FF9                 r1 = M[FP + -0x7];
0x001A07        F100000C                 pushm <r0, r1>;
0x001A08        F1287FFA                 r0 = M[FP + -0x6];
0x001A09        FD000080 89220000        r0 = r0 XOR 0x800000;
0x001A0B        F1387FFB                 r1 = M[FP + -0x5];
0x001A0C        F100000C                 pushm <r0, r1>;
0x001A0D        F1287FFC                 r0 = M[FP + -0x4];
0x001A0E        F1387FFD                 r1 = M[FP + -0x3];
0x001A0F        F100000C                 pushm <r0, r1>;
0x001A10        F1287FFA                 r0 = M[FP + -0x6];
0x001A11        F1387FFB                 r1 = M[FP + -0x5];
0x001A12        F100000C                 pushm <r0, r1>;
0x001A13        F1287FFE                 r0 = M[FP + -0x2];
0x001A14        F1387FFF                 r1 = M[FP + -0x1];
0x001A15        F100000C                 pushm <r0, r1>;
0x001A16        E1F0FF36                 call $kal_filter_coef_lib.calc_shelf_2nd;
0x001A17        F3240000                 pop r0;
0x001A18        F12C7FF2                 M[FP + -0xe] = r0;
0x001A19        F3240000                 pop r0;
0x001A1A        F12C7FF4                 M[FP + -0xc] = r0;
0x001A1B        F3240000                 pop r0;
0x001A1C        F12C7FF3                 M[FP + -0xd] = r0;
0x001A1D        F3240000                 pop r0;
0x001A1E        F12C7FF7                 M[FP + -0x9] = r0;
0x001A1F        F3240000                 pop r0;
0x001A20        F12C7FF6                 M[FP + -0xa] = r0;
0x001A21        F3240000                 pop r0;
0x001A22        F12C7FF5                 M[FP + -0xb] = r0;
0x001A23        F104200D                 popm <FP, r0, r1, rLink>;
0x001A24        F103FFF8                 SP = SP + -8;
0x001A25        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_tilt_2nd>
0x001A26        F100200D                 pushm <FP(=SP), r0, r1, rLink>;
0x001A27        F1030006                 SP = SP + 6;
0x001A28        F1287FF8                 r0 = M[FP + -0x8];
0x001A29        F1387FF9                 r1 = M[FP + -0x7];
0x001A2A        F100000C                 pushm <r0, r1>;
0x001A2B        F1287FFA                 r0 = M[FP + -0x6];
0x001A2C        FD000080 89220000        r0 = r0 XOR 0x800000;
0x001A2E        F1387FFB                 r1 = M[FP + -0x5];
0x001A2F        F100000C                 pushm <r0, r1>;
0x001A30        F1287FFC                 r0 = M[FP + -0x4];
0x001A31        F1387FFD                 r1 = M[FP + -0x3];
0x001A32        F100000C                 pushm <r0, r1>;
0x001A33        F1287FFA                 r0 = M[FP + -0x6];
0x001A34        E422003F                 r0 = r0 - 1;
0x001A35        F1387FFB                 r1 = M[FP + -0x5];
0x001A36        F100000C                 pushm <r0, r1>;
0x001A37        F1287FFE                 r0 = M[FP + -0x2];
0x001A38        F1387FFF                 r1 = M[FP + -0x1];
0x001A39        F100000C                 pushm <r0, r1>;
0x001A3A        E1F0FF12                 call $kal_filter_coef_lib.calc_shelf_2nd;
0x001A3B        F3240000                 pop r0;
0x001A3C        F12C7FF2                 M[FP + -0xe] = r0;
0x001A3D        F3240000                 pop r0;
0x001A3E        F12C7FF4                 M[FP + -0xc] = r0;
0x001A3F        F3240000                 pop r0;
0x001A40        F12C7FF3                 M[FP + -0xd] = r0;
0x001A41        F3240000                 pop r0;
0x001A42        F12C7FF7                 M[FP + -0x9] = r0;
0x001A43        F3240000                 pop r0;
0x001A44        F12C7FF6                 M[FP + -0xa] = r0;
0x001A45        F3240000                 pop r0;
0x001A46        F12C7FF5                 M[FP + -0xb] = r0;
0x001A47        F104200D                 popm <FP, r0, r1, rLink>;
0x001A48        F103FFF8                 SP = SP + -8;
0x001A49        DC0D000F                 rts;

 <$kal_filter_coef_lib.calc_peq>
0x001A4A        F10023FD                 pushm <FP(=SP), r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x001A4B        F1030004                 SP = SP + 4;
0x001A4C        F1287FFC                 r0 = M[FP + -0x4];
0x001A4D        E422002F                 r0 = r0 + 1;
0x001A4E        F1387FFD                 r1 = M[FP + -0x3];
0x001A4F        E1F00469                 call $kal_float_lib.recip;
0x001A50        FD000080 85220000        r0 = r0 OR 0x800000;
0x001A52        0042000F                 r2 = r0 + Null;
0x001A53        0053000F                 r3 = r1 + Null;
0x001A54        0062000F                 r4 = r0 + Null;
0x001A55        0073000F                 r5 = r1 + Null;
0x001A56        E1F0044D                 call $kal_float_lib.mul;
0x001A57        01400080                 r2 = Null + 128;
0x001A58        FD000080 01500000        r3 = Null + -8388608;
0x001A5A        E1F00437                 call $kal_float_lib.add;
0x001A5B        E1F00486                 call $kal_float_lib.rsqrt;
0x001A5C        E1F0045C                 call $kal_float_lib.recip;
0x001A5D        0046000F                 r2 = r4 + Null;
0x001A5E        0057000F                 r3 = r5 + Null;
0x001A5F        E1F00432                 call $kal_float_lib.add;
0x001A60        F1487FF8                 r2 = M[FP + -0x8];
0x001A61        F1587FF9                 r3 = M[FP + -0x7];
0x001A62        E1F00441                 call $kal_float_lib.mul;
0x001A63        F1487FFE                 r2 = M[FP + -0x2];
0x001A64        F1587FFF                 r3 = M[FP + -0x1];
0x001A65        E1F0FC0A                 call $kal_filter_coef_lib.__warp;
0x001A66        0062000F                 r4 = r0 + Null;
0x001A67        0073000F                 r5 = r1 + Null;
0x001A68        F1287FF8                 r0 = M[FP + -0x8];
0x001A69        F1387FF9                 r1 = M[FP + -0x7];
0x001A6A        E1F0FC05                 call $kal_filter_coef_lib.__warp;
0x001A6B        F12C000A                 M[FP + 0xa] = r0;
0x001A6C        F13C000B                 M[FP + 0xb] = r1;
0x001A6D        0042000F                 r2 = r0 + Null;
0x001A6E        0053000F                 r3 = r1 + Null;
0x001A6F        E1F00434                 call $kal_float_lib.mul;
0x001A70        F1000030                 pushm <r2, r3>;
0x001A71        F100000C                 pushm <r0, r1>;
0x001A72        0026000F                 r0 = r4 + Null;
0x001A73        0037000F                 r1 = r5 + Null;
0x001A74        0046000F                 r2 = r4 + Null;
0x001A75        0057000F                 r3 = r5 + Null;
0x001A76        E1F0042D                 call $kal_float_lib.mul;
0x001A77        F1040030                 popm <r2, r3>;
0x001A78        E1F00422                 call $kal_float_lib.sub;
0x001A79        FD000080 89220000        r0 = r0 XOR 0x800000;
0x001A7B        E1F0043D                 call $kal_float_lib.recip;
0x001A7C        F1040030                 popm <r2, r3>;
0x001A7D        E1F00426                 call $kal_float_lib.mul;
0x001A7E        0046000F                 r2 = r4 + Null;
0x001A7F        0057000F                 r3 = r5 + Null;
0x001A80        E1F00423                 call $kal_float_lib.mul;
0x001A81        0062000F                 r4 = r0 + Null;
0x001A82        0073000F                 r5 = r1 + Null;
0x001A83        F1287FFA                 r0 = M[FP + -0x6];
0x001A84        F1387FFB                 r1 = M[FP + -0x5];
0x001A85        0140007F                 r2 = Null + 127;
0x001A86        FD000080 01500000        r3 = Null + -8388608;
0x001A88        E1F0041B                 call $kal_float_lib.mul;
0x001A89        E1F0FC07                 call $kal_filter_coef_lib.__db2lin;
0x001A8A        0042000F                 r2 = r0 + Null;
0x001A8B        0053000F                 r3 = r1 + Null;
0x001A8C        0026000F                 r0 = r4 + Null;
0x001A8D        0037000F                 r1 = r5 + Null;
0x001A8E        E1F00415                 call $kal_float_lib.mul;
0x001A8F        0082000F                 r6 = r0 + Null;
0x001A90        0093000F                 r7 = r1 + Null;
0x001A91        0026000F                 r0 = r4 + Null;
0x001A92        0037000F                 r1 = r5 + Null;
0x001A93        E1F00442                 call $kal_float_lib.div;
0x001A94        0042000F                 r2 = r0 + Null;
0x001A95        0053000F                 r3 = r1 + Null;
0x001A96        F128000A                 r0 = M[FP + 0xa];
0x001A97        F138000B                 r1 = M[FP + 0xb];
0x001A98        E1F0043D                 call $kal_float_lib.div;
0x001A99        0062000F                 r4 = r0 + Null;
0x001A9A        0073000F                 r5 = r1 + Null;
0x001A9B        F128000A                 r0 = M[FP + 0xa];
0x001A9C        F138000B                 r1 = M[FP + 0xb];
0x001A9D        0048000F                 r2 = r6 + Null;
0x001A9E        0059000F                 r3 = r7 + Null;
0x001A9F        E1F00436                 call $kal_float_lib.div;
0x001AA0        0082000F                 r6 = r0 + Null;
0x001AA1        0093000F                 r7 = r1 + Null;
0x001AA2        F128000A                 r0 = M[FP + 0xa];
0x001AA3        F138000B                 r1 = M[FP + 0xb];
0x001AA4        0042000F                 r2 = r0 + Null;
0x001AA5        0053000F                 r3 = r1 + Null;
0x001AA6        E1F003FD                 call $kal_float_lib.mul;
0x001AA7        F12C000A                 M[FP + 0xa] = r0;
0x001AA8        F13C000B                 M[FP + 0xb] = r1;
0x001AA9        0048000F                 r2 = r6 + Null;
0x001AAA        0059000F                 r3 = r7 + Null;
0x001AAB        E1F003E6                 call $kal_float_lib.add;
0x001AAC        01400080                 r2 = Null + 128;
0x001AAD        FD000080 01500000        r3 = Null + -8388608;
0x001AAF        E1F003E2                 call $kal_float_lib.add;
0x001AB0        E1F00408                 call $kal_float_lib.recip;
0x001AB1        F12C000C                 M[FP + 0xc] = r0;
0x001AB2        F13C000D                 M[FP + 0xd] = r1;
0x001AB3        F1030006                 SP = SP + 6;
0x001AB4        F128000A                 r0 = M[FP + 0xa];
0x001AB5        F138000B                 r1 = M[FP + 0xb];
0x001AB6        0046000F                 r2 = r4 + Null;
0x001AB7        0057000F                 r3 = r5 + Null;
0x001AB8        E1F003D9                 call $kal_float_lib.add;
0x001AB9        01400080                 r2 = Null + 128;
0x001ABA        FD000080 01500000        r3 = Null + -8388608;
0x001ABC        E1F003D5                 call $kal_float_lib.add;
0x001ABD        F148000C                 r2 = M[FP + 0xc];
0x001ABE        F158000D                 r3 = M[FP + 0xd];
0x001ABF        E1F003E4                 call $kal_float_lib.mul;
0x001AC0        F100000C                 pushm <r0, r1>;
0x001AC1        F128000A                 r0 = M[FP + 0xa];
0x001AC2        F138000B                 r1 = M[FP + 0xb];
0x001AC3        01400081                 r2 = Null + 129;
0x001AC4        FD000080 01500000        r3 = Null + -8388608;
0x001AC6        E1F003DD                 call $kal_float_lib.mul;
0x001AC7        E1F003D3                 call $kal_float_lib.sub;
0x001AC8        F148000C                 r2 = M[FP + 0xc];
0x001AC9        F158000D                 r3 = M[FP + 0xd];
0x001ACA        E1F003D9                 call $kal_float_lib.mul;
0x001ACB        F100000C                 pushm <r0, r1>;
0x001ACC        F128000A                 r0 = M[FP + 0xa];
0x001ACD        F138000B                 r1 = M[FP + 0xb];
0x001ACE        0046000F                 r2 = r4 + Null;
0x001ACF        0057000F                 r3 = r5 + Null;
0x001AD0        E1F003CA                 call $kal_float_lib.sub;
0x001AD1        01400080                 r2 = Null + 128;
0x001AD2        FD000080 01500000        r3 = Null + -8388608;
0x001AD4        E1F003BD                 call $kal_float_lib.add;
0x001AD5        F148000C                 r2 = M[FP + 0xc];
0x001AD6        F158000D                 r3 = M[FP + 0xd];
0x001AD7        E1F003CC                 call $kal_float_lib.mul;
0x001AD8        F100000C                 pushm <r0, r1>;
0x001AD9        F128000A                 r0 = M[FP + 0xa];
0x001ADA        F138000B                 r1 = M[FP + 0xb];
0x001ADB        01400081                 r2 = Null + 129;
0x001ADC        FD000080 01500000        r3 = Null + -8388608;
0x001ADE        E1F003C5                 call $kal_float_lib.mul;
0x001ADF        E1F003BB                 call $kal_float_lib.sub;
0x001AE0        F148000C                 r2 = M[FP + 0xc];
0x001AE1        F158000D                 r3 = M[FP + 0xd];
0x001AE2        E1F003C1                 call $kal_float_lib.mul;
0x001AE3        F100000C                 pushm <r0, r1>;
0x001AE4        F128000A                 r0 = M[FP + 0xa];
0x001AE5        F138000B                 r1 = M[FP + 0xb];
0x001AE6        0048000F                 r2 = r6 + Null;
0x001AE7        0059000F                 r3 = r7 + Null;
0x001AE8        E1F003B2                 call $kal_float_lib.sub;
0x001AE9        01400080                 r2 = Null + 128;
0x001AEA        FD000080 01500000        r3 = Null + -8388608;
0x001AEC        E1F003A5                 call $kal_float_lib.add;
0x001AED        F148000C                 r2 = M[FP + 0xc];
0x001AEE        F158000D                 r3 = M[FP + 0xd];
0x001AEF        E1F003B4                 call $kal_float_lib.mul;
0x001AF0        F100000C                 pushm <r0, r1>;
0x001AF1        E1F0FBC6                 call $kal_filter_coef_lib.__scale_coefficients;
0x001AF2        F3240000                 pop r0;
0x001AF3        F12C7FF2                 M[FP + -0xe] = r0;
0x001AF4        F3240000                 pop r0;
0x001AF5        F12C7FF4                 M[FP + -0xc] = r0;
0x001AF6        F3240000                 pop r0;
0x001AF7        F12C7FF3                 M[FP + -0xd] = r0;
0x001AF8        F3240000                 pop r0;
0x001AF9        F12C7FF7                 M[FP + -0x9] = r0;
0x001AFA        F3240000                 pop r0;
0x001AFB        F12C7FF6                 M[FP + -0xa] = r0;
0x001AFC        F3240000                 pop r0;
0x001AFD        F12C7FF5                 M[FP + -0xb] = r0;
0x001AFE        F103FFFC                 SP = SP + -4;
0x001AFF        F10423FD                 popm <FP, r0, r1, r2, r3, r4, r5, r6, r7, rLink>;
0x001B00        F103FFF8                 SP = SP + -8;
0x001B01        DC0D000F                 rts;

 <$user_eq.userEqInitialize>
0x001B02        F3D00000                 push rLink;
0x001B03        09402546                 r2 = Null + M[$M.CVC.data.CurParams];
0x001B04        81440007                 r2 = r2 AND 0x7;
0x001B05        D1390000                 r1 = M[r7 + 0];
0x001B06        E443005F                 r2 = MIN r1;
0x001B07        D1290004                 r0 = M[r7 + 4];
0x001B08        D1390005                 r1 = M[r7 + 5];
0x001B09        03A40000                 r8 = r8 + r2;
0x001B0A        D3A00000                 r8 = M[r8 + Null];
0x001B0B        E45A002F                 r3 = r8 + 1;
0x001B0C        DD10002A                 if NE jump $user_eq.calcBankCoefs.jump_entry;
0x001B0D        E444003F                 r2 = r2 - 1;
0x001B0E        D1590000                 r3 = M[r7 + 0];
0x001B0F        FD0000FF 09305C8B        r1 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001B11        FD000000 2103BB80        Null = r1 - 48000;
0x001B13        00440050                 if EQ r2 = r2 + r3;
0x001B14        D1590001                 r3 = M[r7 + 1];
0x001B15        99550006                 r3 = r3 * 6 (int);
0x001B16        01550003                 r3 = r3 + 3;
0x001B17        9B540000                 r3 = r3 * r2 (int);
0x001B18        03250000                 r0 = r0 + r3;
0x001B19        F1000204                 pushm <r0, r7>;
0x001B1A        D1990002                 r7 = M[r7 + 2];
0x001B1B        D5290003                 M[r7 + 3] = r0;
0x001B1C        E1F01A39                 call $audio_proc.hq_peq.initialize;
0x001B1D        F1040204                 popm <r0, r7>;
0x001B1E        D1990003                 r7 = M[r7 + 3];
0x001B1F        D5290003                 M[r7 + 3] = r0;
0x001B20        E1F01A35                 call $audio_proc.hq_peq.initialize;
0x001B21        DDF0FB4C                 jump $pop_rLink_and_rts;

 <$user_eq.eqInitialize>
0x001B22        F3D00000                 push rLink;
0x001B23        D1290004                 r0 = M[r7 + 4];
0x001B24        D1390005                 r1 = M[r7 + 5];
0x001B25        D3A00000                 r8 = M[r8 + Null];
0x001B26        DD100010                 if NE jump $user_eq.calcBankCoefs.jump_entry;
0x001B27        FD0000FF 09405C8B        r2 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001B29        FD000000 2104BB80        Null = r2 - 48000;
0x001B2B        00230000                 if EQ r0 = r1 + Null;
0x001B2C        F1000204                 pushm <r0, r7>;
0x001B2D        D1990002                 r7 = M[r7 + 2];
0x001B2E        D5290003                 M[r7 + 3] = r0;
0x001B2F        E1F01A26                 call $audio_proc.hq_peq.initialize;
0x001B30        F1040204                 popm <r0, r7>;
0x001B31        D1990003                 r7 = M[r7 + 3];
0x001B32        D5290003                 M[r7 + 3] = r0;
0x001B33        E1F01A22                 call $audio_proc.hq_peq.initialize;
0x001B34        DDF0FB39                 jump $pop_rLink_and_rts;

 <$user_eq.calcBankCoefs.call_entry>
0x001B35        F3D00000                 push rLink;

 <$user_eq.calcBankCoefs.jump_entry>
0x001B36        D1490002                 r2 = M[r7 + 2];
0x001B37        D1440003                 r2 = M[r2 + 3];
0x001B38        2004002F                 Null = r2 - r0;
0x001B39        00230000                 if EQ r0 = r1 + Null;
0x001B3A        F1000204                 pushm <r0, r7>;
0x001B3B        500000AF                 I0 = Null + r8;
0x001B3C        5010002F                 I1 = Null + r0;
0x001B3D        000A000F                 Null = r8 + Null;
0x001B3E        DD100009                 if NE jump $user_eq.calcBankCoefs.NotNullBank;
0x001B3F        01200000                 r0 = Null + 0;
0x001B40        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001B41        E420002F                 r0 = Null + 1;
0x001B42        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001B43        FD000040 01200000        r0 = Null + 4194304;
0x001B45        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001B46        DDF00018                 jump $user_eq.calcBankCoefs.switchToNewCoefs;

 <$user_eq.calcBankCoefs.NotNullBank>
0x001B47        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001B48        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001B49        F3200000                 push r0;
0x001B4A        E1F000AC                 call $user_eq.calcPreGain.call_entry;
0x001B4B        4420001F                 r0 = Null + I1;
0x001B4C        D1390001                 r1 = M[r7 + 1];
0x001B4D        99330005                 r1 = r1 * 5 (int);
0x001B4E        03230000                 r0 = r0 + r1;
0x001B4F        5020002F                 I2 = Null + r0;

 <$user_eq.calcBandLoop>
0x001B50        F3240000                 pop r0;
0x001B51        E422003F                 r0 = r0 - 1;
0x001B52        DD40000C                 if NEG jump $user_eq.calcBankCoefs.switchToNewCoefs;
0x001B53        F3200000                 push r0;
0x001B54        F1010007                 pushm <I0, I1, I2>;
0x001B55        E1F00070                 call $user_eq.coefCalcBiquadBand.call_entry;
0x001B56        F104001C                 popm <r0, r1, r2>;
0x001B57        01220004                 r0 = r0 + 4;
0x001B58        5000002F                 I0 = Null + r0;
0x001B59        01330005                 r1 = r1 + 5;
0x001B5A        5010003F                 I1 = Null + r1;
0x001B5B        E444002F                 r2 = r2 + 1;
0x001B5C        5020004F                 I2 = Null + r2;
0x001B5D        DDF0FFF3                 jump $user_eq.calcBandLoop;

 <$user_eq.calcBankCoefs.switchToNewCoefs>
0x001B5E        F1040204                 popm <r0, r7>;
0x001B5F        F1000204                 pushm <r0, r7>;
0x001B60        D1990002                 r7 = M[r7 + 2];
0x001B61        D5290003                 M[r7 + 3] = r0;
0x001B62        E1F019F3                 call $audio_proc.hq_peq.initialize;
0x001B63        F1040204                 popm <r0, r7>;
0x001B64        D1990003                 r7 = M[r7 + 3];
0x001B65        D5290003                 M[r7 + 3] = r0;
0x001B66        E1F019EF                 call $audio_proc.hq_peq.initialize;
0x001B67        DDF0FB06                 jump $pop_rLink_and_rts;

 <$user_eq.calcBandCoefs>
0x001B68        F3D00000                 push rLink;
0x001B69        0062000F                 r4 = r0 + Null;
0x001B6A        8122FFF0                 r0 = r0 AND 0xfff0;
0x001B6B        E1F00026                 call $user_eq.calcParamAddrOffset;
0x001B6C        00A2005F                 r8 = r0 + r3;
0x001B6D        D1890002                 r6 = M[r7 + 2];
0x001B6E        D1880003                 r6 = M[r6 + 3];
0x001B6F        2008003F                 Null = r6 - r1;
0x001B70        DD000004                 if EQ jump $user_eq.calcBandCoefsB;
0x001B71        0054000F                 r3 = r2 + Null;
0x001B72        0043000F                 r2 = r1 + Null;
0x001B73        DDF00002                 jump $user_eq.calcBandCoefsAorB;

 <$user_eq.calcBandCoefsB>
0x001B74        0053000F                 r3 = r1 + Null;

 <$user_eq.calcBandCoefsAorB>
0x001B75        5000005F                 I0 = Null + r3;
0x001B76        5010004F                 I1 = Null + r2;
0x001B77        D1C90001                 r10 = M[r7 + 1];
0x001B78        99CC0006                 r10 = r10 * 6 (int);
0x001B79        01CC0003                 r10 = r10 + 3;
0x001B7A        E5F00003                 do $user_eq.copyCurrentCoefsLoop;
0x001B7B        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001B7C        0300A500                 Null = Null + Null, M[I1,1] = r0;

 <$user_eq.copyCurrentCoefsLoop>
0x001B7D        500000AF                 I0 = Null + r8;
0x001B7E        0026000F                 r0 = r4 + Null;
0x001B7F        E1F0002A                 call $user_eq.calcCoefAddrOffset;
0x001B80        00A2004F                 r8 = r0 + r2;
0x001B81        501000AF                 I1 = Null + r8;
0x001B82        00A3004F                 r8 = r1 + r2;
0x001B83        502000AF                 I2 = Null + r8;
0x001B84        F1000210                 pushm <r2, r7>;
0x001B85        0026000F                 r0 = r4 + Null;
0x001B86        E1F00033                 call $user_eq.coefCalc;
0x001B87        F1040210                 popm <r2, r7>;
0x001B88        F1000210                 pushm <r2, r7>;
0x001B89        D1990002                 r7 = M[r7 + 2];
0x001B8A        D5490003                 M[r7 + 3] = r2;
0x001B8B        E1F019CA                 call $audio_proc.hq_peq.initialize;
0x001B8C        F1040210                 popm <r2, r7>;
0x001B8D        D1990003                 r7 = M[r7 + 3];
0x001B8E        D5490003                 M[r7 + 3] = r2;
0x001B8F        E1F019C6                 call $audio_proc.hq_peq.initialize;
0x001B90        DDF0FADD                 jump $pop_rLink_and_rts;

 <$user_eq.calcParamAddrOffset>
0x001B91        F1000038                 pushm <r1, r2, r3>;
0x001B92        81320F00                 r1 = r0 AND 0xf00;
0x001B93        91330078                 r1 = r1 ASHIFT -8;
0x001B94        814200F0                 r2 = r0 AND 0xf0;
0x001B95        9144007C                 r2 = r2 ASHIFT -4;
0x001B96        8152000F                 r3 = r0 AND 0xf;
0x001B97        0025000F                 r0 = r3 + Null;
0x001B98        21030000                 Null = r1 - 0;
0x001B99        DD00000E                 if EQ jump $user_eq.completedParamAddrCalculation;
0x001B9A        E433003F                 r1 = r1 - 1;
0x001B9B        D1290001                 r0 = M[r7 + 1];
0x001B9C        99220004                 r0 = r0 * 4 (int);
0x001B9D        01220002                 r0 = r0 + 2;
0x001B9E        9B320000                 r1 = r1 * r0 (int);
0x001B9F        0023005F                 r0 = r1 + r3;
0x001BA0        E422002F                 r0 = r0 + 1;
0x001BA1        21040000                 Null = r2 - 0;
0x001BA2        DD000005                 if EQ jump $user_eq.completedParamAddrCalculation;
0x001BA3        E444003F                 r2 = r2 - 1;
0x001BA4        99440004                 r2 = r2 * 4 (int);
0x001BA5        03240000                 r0 = r0 + r2;
0x001BA6        01220002                 r0 = r0 + 2;

 <$user_eq.completedParamAddrCalculation>
0x001BA7        F1040038                 popm <r1, r2, r3>;
0x001BA8        DC0D000F                 rts;

 <$user_eq.calcCoefAddrOffset>
0x001BA9        F1000030                 pushm <r2, r3>;
0x001BAA        814200F0                 r2 = r0 AND 0xf0;
0x001BAB        9144007C                 r2 = r2 ASHIFT -4;
0x001BAC        8152000F                 r3 = r0 AND 0xf;
0x001BAD        0025000F                 r0 = r3 + Null;
0x001BAE        21040000                 Null = r2 - 0;
0x001BAF        DD000008                 if EQ jump $user_eq.completedCoefAddrCalculation;
0x001BB0        E444003F                 r2 = r2 - 1;
0x001BB1        D1290001                 r0 = M[r7 + 1];
0x001BB2        99220005                 r0 = r0 * 5 (int);
0x001BB3        01220003                 r0 = r0 + 3;
0x001BB4        0034002F                 r1 = r2 + r0;
0x001BB5        99240005                 r0 = r2 * 5 (int);
0x001BB6        01220003                 r0 = r0 + 3;

 <$user_eq.completedCoefAddrCalculation>
0x001BB7        F1040030                 popm <r2, r3>;
0x001BB8        DC0D000F                 rts;

 <$user_eq.coefCalc>
0x001BB9        F3D00000                 push rLink;
0x001BBA        814200F0                 r2 = r0 AND 0xf0;
0x001BBB        9144007C                 r2 = r2 ASHIFT -4;
0x001BBC        DD10000A                 if NE jump $user_eq.coefCalcBiquadBand.jump_entry;
0x001BBD        8122000F                 r0 = r0 AND 0xf;
0x001BBE        21020000                 Null = r0 - 0;
0x001BBF        DD000033                 if EQ jump $user_eq.calcNumBands.jump_entry;
0x001BC0        03004100                 Null = Null + Null, r2 = M[I0,1];
0x001BC1        E402003F                 Null = r0 - 1;
0x001BC2        DD000035                 if EQ jump $user_eq.calcPreGain.jump_entry;
0x001BC3        F3D40000                 pop rLink;
0x001BC4        DC0D000F                 rts;

 <$user_eq.coefCalcBiquadBand.call_entry>
0x001BC5        F3D00000                 push rLink;

 <$user_eq.coefCalcBiquadBand.jump_entry>
0x001BC6        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001BC7        21020000                 Null = r0 - 0;
0x001BC8        DD000044                 if EQ jump $user_eq.calcBypass.jump_entry;
0x001BC9        019016F2                 r7 = Null + 5874;
0x001BCA        E402003F                 Null = r0 - 1;
0x001BCB        DD000044                 if EQ jump $user_eq.calcXP1.jump_entry;
0x001BCC        01901727                 r7 = Null + 5927;
0x001BCD        21020002                 Null = r0 - 2;
0x001BCE        DD000041                 if EQ jump $user_eq.calcXP1.jump_entry;
0x001BCF        0190175B                 r7 = Null + 5979;
0x001BD0        21020003                 Null = r0 - 3;
0x001BD1        DD00003E                 if EQ jump $user_eq.calcXP1.jump_entry;
0x001BD2        0190185A                 r7 = Null + 6234;
0x001BD3        21020007                 Null = r0 - 7;
0x001BD4        DD00005D                 if EQ jump $user_eq.calcXP2.jump_entry;
0x001BD5        019018AB                 r7 = Null + 6315;
0x001BD6        21020008                 Null = r0 - 8;
0x001BD7        DD00005A                 if EQ jump $user_eq.calcXP2.jump_entry;
0x001BD8        019018FB                 r7 = Null + 6395;
0x001BD9        21020009                 Null = r0 - 9;
0x001BDA        DD000057                 if EQ jump $user_eq.calcXP2.jump_entry;
0x001BDB        019017FB                 r7 = Null + 6139;
0x001BDC        21020004                 Null = r0 - 4;
0x001BDD        DD00007F                 if EQ jump $user_eq.calcShelf1.jump_entry;
0x001BDE        01901819                 r7 = Null + 6169;
0x001BDF        21020005                 Null = r0 - 5;
0x001BE0        DD00007C                 if EQ jump $user_eq.calcShelf1.jump_entry;
0x001BE1        01901839                 r7 = Null + 6201;
0x001BE2        21020006                 Null = r0 - 6;
0x001BE3        DD000079                 if EQ jump $user_eq.calcShelf1.jump_entry;
0x001BE4        019019E2                 r7 = Null + 6626;
0x001BE5        2102000A                 Null = r0 - 10;
0x001BE6        DD0000A6                 if EQ jump $user_eq.calcShelf2.jump_entry;
0x001BE7        01901A03                 r7 = Null + 6659;
0x001BE8        2102000B                 Null = r0 - 11;
0x001BE9        DD0000A3                 if EQ jump $user_eq.calcShelf2.jump_entry;
0x001BEA        01901A26                 r7 = Null + 6694;
0x001BEB        2102000C                 Null = r0 - 12;
0x001BEC        DD0000A0                 if EQ jump $user_eq.calcShelf2.jump_entry;
0x001BED        2102000D                 Null = r0 - 13;
0x001BEE        DD0000D6                 if EQ jump $user_eq.calcPEQ.jump_entry;

 <$user_eq.coefCalcInvalid>
0x001BEF        F3D40000                 pop rLink;
0x001BF0        DC0D000F                 rts;

 <$user_eq.calcNumBands.call_entry>
0x001BF1        F3D00000                 push rLink;

 <$user_eq.calcNumBands.jump_entry>
0x001BF2        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001BF3        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001BF4        F3D40000                 pop rLink;
0x001BF5        DC0D000F                 rts;

 <$user_eq.calcPreGain.call_entry>
0x001BF6        F3D00000                 push rLink;

 <$user_eq.calcPreGain.jump_entry>
0x001BF7        0120003C                 r0 = Null + 60;
0x001BF8        E1F00286                 call $kal_float_lib.int_to_float;
0x001BF9        0042000F                 r2 = r0 + Null;
0x001BFA        0053000F                 r3 = r1 + Null;
0x001BFB        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001BFC        8D220008                 r0 = r0 LSHIFT 8;
0x001BFD        91220078                 r0 = r0 ASHIFT -8;
0x001BFE        0130F790                 r1 = Null + -2160;
0x001BFF        E423006F                 r0 = MAX r1;
0x001C00        013002D0                 r1 = Null + 720;
0x001C01        E423005F                 r0 = MIN r1;
0x001C02        E1F0027C                 call $kal_float_lib.int_to_float;
0x001C03        E1F002D2                 call $kal_float_lib.div;
0x001C04        E1F0FA8C                 call $kal_filter_coef_lib.__db2lin;
0x001C05        812200FF                 r0 = r0 AND 0xff;
0x001C06        2122007F                 r0 = r0 - 127;
0x001C07        8D33007F                 r1 = r1 LSHIFT -1;
0x001C08        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001C09        0300B500                 Null = Null + Null, M[I1,1] = r1;
0x001C0A        F3D40000                 pop rLink;
0x001C0B        DC0D000F                 rts;

 <$user_eq.calcBypass.jump_entry>
0x001C0C        F1030006                 SP = SP + 6;
0x001C0D        E1F0FAD8                 call $kal_filter_coef_lib.calc_bypass;
0x001C0E        DDF000F1                 jump $user_eq.pop_biquad_coefs_and_rts;

 <$user_eq.calcXP1.jump_entry>
0x001C0F        F1030006                 SP = SP + 6;
0x001C10        01200003                 r0 = Null + 3;
0x001C11        E1F0026D                 call $kal_float_lib.int_to_float;
0x001C12        0042000F                 r2 = r0 + Null;
0x001C13        0053000F                 r3 = r1 + Null;
0x001C14        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001C15        FD000000 0170BB80        r5 = Null + 48000;
0x001C17        FD0000FF 09605C8B        r4 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001C19        00670000                 if EQ r4 = r5 + Null;
0x001C1A        FD00003A 01700CC8        r5 = Null + 3804360;
0x001C1C        CC66007F                 r4 = r4 * r5 (SS);
0x001C1D        99660003                 r4 = r4 * 3 (int);
0x001C1E        2002006F                 Null = r0 - r4;
0x001C1F        DDC000DE                 if GT jump $user_eq.substituteBypassFilter.jump_entry;
0x001C20        E430002F                 r1 = Null + 1;
0x001C21        E423006F                 r0 = MAX r1;
0x001C22        FD000000 0130EA60        r1 = Null + 60000;
0x001C24        E423005F                 r0 = MIN r1;
0x001C25        E1F00259                 call $kal_float_lib.int_to_float;
0x001C26        E1F002AF                 call $kal_float_lib.div;
0x001C27        F100000C                 pushm <r0, r1>;
0x001C28        FD000000 0130BB80        r1 = Null + 48000;
0x001C2A        FD0000FF 09205C8B        r0 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001C2C        00230000                 if EQ r0 = r1 + Null;
0x001C2D        E1F00251                 call $kal_float_lib.int_to_float;
0x001C2E        F100000C                 pushm <r0, r1>;
0x001C2F        E009000F                 call r7;
0x001C30        DDF000CF                 jump $user_eq.pop_biquad_coefs_and_rts;

 <$user_eq.calcXP2.jump_entry>
0x001C31        F1030006                 SP = SP + 6;
0x001C32        01200003                 r0 = Null + 3;
0x001C33        E1F0024B                 call $kal_float_lib.int_to_float;
0x001C34        0042000F                 r2 = r0 + Null;
0x001C35        0053000F                 r3 = r1 + Null;
0x001C36        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001C37        FD000000 0170BB80        r5 = Null + 48000;
0x001C39        FD0000FF 09605C8B        r4 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001C3B        00670000                 if EQ r4 = r5 + Null;
0x001C3C        FD00003A 01700CC8        r5 = Null + 3804360;
0x001C3E        CC66007F                 r4 = r4 * r5 (SS);
0x001C3F        99660003                 r4 = r4 * 3 (int);
0x001C40        2002006F                 Null = r0 - r4;
0x001C41        DDC000BC                 if GT jump $user_eq.substituteBypassFilter.jump_entry;
0x001C42        01300078                 r1 = Null + 120;
0x001C43        E423006F                 r0 = MAX r1;
0x001C44        FD000000 0130EA60        r1 = Null + 60000;
0x001C46        E423005F                 r0 = MIN r1;
0x001C47        E1F00237                 call $kal_float_lib.int_to_float;
0x001C48        E1F0028D                 call $kal_float_lib.div;
0x001C49        F100000C                 pushm <r0, r1>;
0x001C4A        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001C4B        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001C4C        01300400                 r1 = Null + 1024;
0x001C4D        E423006F                 r0 = MAX r1;
0x001C4E        01302000                 r1 = Null + 8192;
0x001C4F        E423005F                 r0 = MIN r1;
0x001C50        0130000C                 r1 = Null + 12;
0x001C51        E1F00212                 call $kal_float_lib.q_to_float;
0x001C52        F100000C                 pushm <r0, r1>;
0x001C53        FD000000 0130BB80        r1 = Null + 48000;
0x001C55        FD0000FF 09205C8B        r0 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001C57        00230000                 if EQ r0 = r1 + Null;
0x001C58        E1F00226                 call $kal_float_lib.int_to_float;
0x001C59        F100000C                 pushm <r0, r1>;
0x001C5A        E009000F                 call r7;
0x001C5B        DDF000A4                 jump $user_eq.pop_biquad_coefs_and_rts;

 <$user_eq.calcShelf1.jump_entry>
0x001C5C        F1030006                 SP = SP + 6;
0x001C5D        01200003                 r0 = Null + 3;
0x001C5E        E1F00220                 call $kal_float_lib.int_to_float;
0x001C5F        0042000F                 r2 = r0 + Null;
0x001C60        0053000F                 r3 = r1 + Null;
0x001C61        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001C62        FD000000 0170BB80        r5 = Null + 48000;
0x001C64        FD0000FF 09605C8B        r4 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001C66        00670000                 if EQ r4 = r5 + Null;
0x001C67        FD00003A 01700CC8        r5 = Null + 3804360;
0x001C69        CC66007F                 r4 = r4 * r5 (SS);
0x001C6A        99660003                 r4 = r4 * 3 (int);
0x001C6B        2002006F                 Null = r0 - r4;
0x001C6C        DDC00091                 if GT jump $user_eq.substituteBypassFilter.jump_entry;
0x001C6D        0130003C                 r1 = Null + 60;
0x001C6E        E423006F                 r0 = MAX r1;
0x001C6F        FD000000 0130EA60        r1 = Null + 60000;
0x001C71        E423005F                 r0 = MIN r1;
0x001C72        E1F0020C                 call $kal_float_lib.int_to_float;
0x001C73        E1F00262                 call $kal_float_lib.div;
0x001C74        F100000C                 pushm <r0, r1>;
0x001C75        0120003C                 r0 = Null + 60;
0x001C76        E1F00208                 call $kal_float_lib.int_to_float;
0x001C77        0042000F                 r2 = r0 + Null;
0x001C78        0053000F                 r3 = r1 + Null;
0x001C79        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001C7A        8D220008                 r0 = r0 LSHIFT 8;
0x001C7B        91220078                 r0 = r0 ASHIFT -8;
0x001C7C        0130FD30                 r1 = Null + -720;
0x001C7D        E423006F                 r0 = MAX r1;
0x001C7E        013002D0                 r1 = Null + 720;
0x001C7F        E423005F                 r0 = MIN r1;
0x001C80        E1F001FE                 call $kal_float_lib.int_to_float;
0x001C81        E1F00254                 call $kal_float_lib.div;
0x001C82        F100000C                 pushm <r0, r1>;
0x001C83        FD000000 0130BB80        r1 = Null + 48000;
0x001C85        FD0000FF 09205C8B        r0 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001C87        00230000                 if EQ r0 = r1 + Null;
0x001C88        E1F001F6                 call $kal_float_lib.int_to_float;
0x001C89        F100000C                 pushm <r0, r1>;
0x001C8A        E009000F                 call r7;
0x001C8B        DDF00074                 jump $user_eq.pop_biquad_coefs_and_rts;

 <$user_eq.calcShelf2.jump_entry>
0x001C8C        F1030006                 SP = SP + 6;
0x001C8D        01200003                 r0 = Null + 3;
0x001C8E        E1F001F0                 call $kal_float_lib.int_to_float;
0x001C8F        0042000F                 r2 = r0 + Null;
0x001C90        0053000F                 r3 = r1 + Null;
0x001C91        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001C92        FD000000 0170BB80        r5 = Null + 48000;
0x001C94        FD0000FF 09605C8B        r4 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001C96        00670000                 if EQ r4 = r5 + Null;
0x001C97        FD00003A 01700CC8        r5 = Null + 3804360;
0x001C99        CC66007F                 r4 = r4 * r5 (SS);
0x001C9A        99660003                 r4 = r4 * 3 (int);
0x001C9B        2002006F                 Null = r0 - r4;
0x001C9C        DDC00061                 if GT jump $user_eq.substituteBypassFilter.jump_entry;
0x001C9D        01300078                 r1 = Null + 120;
0x001C9E        E423006F                 r0 = MAX r1;
0x001C9F        FD000000 0130EA60        r1 = Null + 60000;
0x001CA1        E423005F                 r0 = MIN r1;
0x001CA2        E1F001DC                 call $kal_float_lib.int_to_float;
0x001CA3        E1F00232                 call $kal_float_lib.div;
0x001CA4        F100000C                 pushm <r0, r1>;
0x001CA5        0120003C                 r0 = Null + 60;
0x001CA6        E1F001D8                 call $kal_float_lib.int_to_float;
0x001CA7        0042000F                 r2 = r0 + Null;
0x001CA8        0053000F                 r3 = r1 + Null;
0x001CA9        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001CAA        8D220008                 r0 = r0 LSHIFT 8;
0x001CAB        91220078                 r0 = r0 ASHIFT -8;
0x001CAC        0130FD30                 r1 = Null + -720;
0x001CAD        E423006F                 r0 = MAX r1;
0x001CAE        013002D0                 r1 = Null + 720;
0x001CAF        E423005F                 r0 = MIN r1;
0x001CB0        E1F001CE                 call $kal_float_lib.int_to_float;
0x001CB1        E1F00224                 call $kal_float_lib.div;
0x001CB2        F100000C                 pushm <r0, r1>;
0x001CB3        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001CB4        01300400                 r1 = Null + 1024;
0x001CB5        E423006F                 r0 = MAX r1;
0x001CB6        01302000                 r1 = Null + 8192;
0x001CB7        E423005F                 r0 = MIN r1;
0x001CB8        0130000C                 r1 = Null + 12;
0x001CB9        E1F001AA                 call $kal_float_lib.q_to_float;
0x001CBA        F100000C                 pushm <r0, r1>;
0x001CBB        FD000000 0130BB80        r1 = Null + 48000;
0x001CBD        FD0000FF 09205C8B        r0 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001CBF        00230000                 if EQ r0 = r1 + Null;
0x001CC0        E1F001BE                 call $kal_float_lib.int_to_float;
0x001CC1        F100000C                 pushm <r0, r1>;
0x001CC2        E009000F                 call r7;
0x001CC3        DDF0003C                 jump $user_eq.pop_biquad_coefs_and_rts;

 <$user_eq.calcPEQ.jump_entry>
0x001CC4        F1030006                 SP = SP + 6;
0x001CC5        01200003                 r0 = Null + 3;
0x001CC6        E1F001B8                 call $kal_float_lib.int_to_float;
0x001CC7        0042000F                 r2 = r0 + Null;
0x001CC8        0053000F                 r3 = r1 + Null;
0x001CC9        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001CCA        FD000000 0170BB80        r5 = Null + 48000;
0x001CCC        FD0000FF 09605C8B        r4 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001CCE        00670000                 if EQ r4 = r5 + Null;
0x001CCF        FD00003A 01700CC8        r5 = Null + 3804360;
0x001CD1        CC66007F                 r4 = r4 * r5 (SS);
0x001CD2        99660003                 r4 = r4 * 3 (int);
0x001CD3        2002006F                 Null = r0 - r4;
0x001CD4        DDC00029                 if GT jump $user_eq.substituteBypassFilter.jump_entry;
0x001CD5        0130003C                 r1 = Null + 60;
0x001CD6        E423006F                 r0 = MAX r1;
0x001CD7        FD000000 0130EA60        r1 = Null + 60000;
0x001CD9        E423005F                 r0 = MIN r1;
0x001CDA        E1F001A4                 call $kal_float_lib.int_to_float;
0x001CDB        E1F001FA                 call $kal_float_lib.div;
0x001CDC        F100000C                 pushm <r0, r1>;
0x001CDD        0120003C                 r0 = Null + 60;
0x001CDE        E1F001A0                 call $kal_float_lib.int_to_float;
0x001CDF        0042000F                 r2 = r0 + Null;
0x001CE0        0053000F                 r3 = r1 + Null;
0x001CE1        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001CE2        8D220008                 r0 = r0 LSHIFT 8;
0x001CE3        91220078                 r0 = r0 ASHIFT -8;
0x001CE4        0130F790                 r1 = Null + -2160;
0x001CE5        E423006F                 r0 = MAX r1;
0x001CE6        013002D0                 r1 = Null + 720;
0x001CE7        E423005F                 r0 = MIN r1;
0x001CE8        E1F00196                 call $kal_float_lib.int_to_float;
0x001CE9        E1F001EC                 call $kal_float_lib.div;
0x001CEA        F100000C                 pushm <r0, r1>;
0x001CEB        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001CEC        01300400                 r1 = Null + 1024;
0x001CED        E423006F                 r0 = MAX r1;
0x001CEE        FD000000 01308000        r1 = Null + 32768;
0x001CF0        E423005F                 r0 = MIN r1;
0x001CF1        0130000C                 r1 = Null + 12;
0x001CF2        E1F00171                 call $kal_float_lib.q_to_float;
0x001CF3        F100000C                 pushm <r0, r1>;
0x001CF4        FD000000 0130BB80        r1 = Null + 48000;
0x001CF6        FD0000FF 09205C8B        r0 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001CF8        00230000                 if EQ r0 = r1 + Null;
0x001CF9        E1F00185                 call $kal_float_lib.int_to_float;
0x001CFA        F100000C                 pushm <r0, r1>;
0x001CFB        E1F0FD4F                 call $kal_filter_coef_lib.calc_peq;
0x001CFC        DDF00003                 jump $user_eq.pop_biquad_coefs_and_rts;

 <$user_eq.substituteBypassFilter.jump_entry>
0x001CFD        E1F0F9E8                 call $kal_filter_coef_lib.calc_bypass;
0x001CFE        DDF00001                 jump $user_eq.pop_biquad_coefs_and_rts;

 <$user_eq.pop_biquad_coefs_and_rts>
0x001CFF        F3240000                 pop r0;
0x001D00        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001D01        F3240000                 pop r0;
0x001D02        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001D03        F3240000                 pop r0;
0x001D04        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001D05        F3240000                 pop r0;
0x001D06        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001D07        F3240000                 pop r0;
0x001D08        0300A500                 Null = Null + Null, M[I1,1] = r0;
0x001D09        F3240000                 pop r0;
0x001D0A        0300A900                 Null = Null + Null, M[I2,1] = r0;
0x001D0B        F3D40000                 pop rLink;
0x001D0C        DC0D000F                 rts;

 <$sbc.calc_bit_allocation>
0x001D0D        F3D00000                 push rLink;
0x001D0E        51900001                 M1 = Null + 1;
0x001D0F        D12B001E                 r0 = M[r9 + 30];
0x001D10        81220002                 r0 = r0 AND 0x2;
0x001D11        DD10005E                 if NE jump $M.sbc.calc_bit_allocation.stereo_joint;
0x001D12        01200000                 r0 = Null + 0;

 <$M.sbc.calc_bit_allocation.md_chan_loop>
0x001D13        D13B0020                 r1 = M[r9 + 32];
0x001D14        DD00000C                 if EQ jump $M.sbc.calc_bit_allocation.md_loudness;
0x001D15        D1CB0021                 r10 = M[r9 + 33];
0x001D16        983200CF                 r1 = r0 * r10 (int);
0x001D17        D1CB0018                 r10 = M[r9 + 24];
0x001D18        501300CF                 I1 = r1 + r10;
0x001D19        D1CB001A                 r10 = M[r9 + 26];
0x001D1A        502300CF                 I2 = r1 + r10;
0x001D1B        D1CB0021                 r10 = M[r9 + 33];
0x001D1C        E5F00003                 do $M.sbc.calc_bit_allocation.md_snr_loop;
0x001D1D        03003500                 Null = Null + Null, r1 = M[I1,1];
0x001D1E        0300B900                 Null = Null + Null, M[I2,1] = r1;

 <$M.sbc.calc_bit_allocation.md_snr_loop>
0x001D1F        DDF00017                 jump $M.sbc.calc_bit_allocation.md_loudness_loop;

 <$M.sbc.calc_bit_allocation.md_loudness>
0x001D20        D1CB0021                 r10 = M[r9 + 33];
0x001D21        983200CF                 r1 = r0 * r10 (int);
0x001D22        D16B0018                 r4 = M[r9 + 24];
0x001D23        5013006F                 I1 = r1 + r4;
0x001D24        D16B001A                 r4 = M[r9 + 26];
0x001D25        5023006F                 I2 = r1 + r4;
0x001D26        E460003F                 r4 = Null - 1;
0x001D27        D13B001C                 r1 = M[r9 + 28];
0x001D28        9B3C0000                 r1 = r1 * r10 (int);
0x001D29        D14B0017                 r2 = M[r9 + 23];
0x001D2A        5033004F                 I3 = r1 + r2;
0x001D2B        51440010                 I4 = r2 + 16;
0x001D2C        210C0008                 Null = r10 - 8;
0x001D2D        54330040                 if EQ I3 = r1 + I4;
0x001D2E        E5F00008                 do $M.sbc.calc_bit_allocation.md_loudness_loop;
0x001D2F        0140FFFB                 r2 = Null + -5;
0x001D30        03003500                 Null = Null + Null, r1 = M[I1,1];
0x001D31        03035D00                 Null = Null + r1, r3 = M[I3,1];
0x001D32        DD000003                 if EQ jump $M.sbc.calc_bit_allocation.md_loudness_endif;
0x001D33        2043005F                 r2 = r1 - r3;
0x001D34        90440065                 if POS r2 = r2 ASHIFT r4;

 <$M.sbc.calc_bit_allocation.md_loudness_endif>
0x001D35        0300C900                 Null = Null + Null, M[I2,1] = r2;

 <$M.sbc.calc_bit_allocation.md_loudness_loop>
0x001D36        D1CB0021                 r10 = M[r9 + 33];
0x001D37        983200CF                 r1 = r0 * r10 (int);
0x001D38        D14B001A                 r2 = M[r9 + 26];
0x001D39        5023004F                 I2 = r1 + r2;
0x001D3A        E1F0009B                 call $M.sbc.calc_bit_allocation.share_code_1;

 <$M.sbc.calc_bit_allocation.md_findbitslice_loop1>
0x001D3B        D1CB0021                 r10 = M[r9 + 33];
0x001D3C        983200CF                 r1 = r0 * r10 (int);
0x001D3D        D17B001A                 r5 = M[r9 + 26];
0x001D3E        5023007F                 I2 = r1 + r5;
0x001D3F        E1F0009F                 call $M.sbc.calc_bit_allocation.share_code_2;
0x001D40        DD40FFFB                 if NEG jump $M.sbc.calc_bit_allocation.md_findbitslice_loop1;
0x001D41        D1CB0021                 r10 = M[r9 + 33];
0x001D42        983200CF                 r1 = r0 * r10 (int);
0x001D43        D1CB001B                 r10 = M[r9 + 27];
0x001D44        501300CF                 I1 = r1 + r10;
0x001D45        D1CB001A                 r10 = M[r9 + 26];
0x001D46        502300CF                 I2 = r1 + r10;
0x001D47        D1CB0021                 r10 = M[r9 + 33];
0x001D48        E1F000A9                 call $M.sbc.calc_bit_allocation.share_code_3;
0x001D49        D1CB0021                 r10 = M[r9 + 33];
0x001D4A        983200CF                 r1 = r0 * r10 (int);
0x001D4B        D16B001B                 r4 = M[r9 + 27];
0x001D4C        5013006F                 I1 = r1 + r4;
0x001D4D        D16B001A                 r4 = M[r9 + 26];
0x001D4E        5023006F                 I2 = r1 + r4;
0x001D4F        01600000                 r4 = Null + 0;

 <$M.sbc.calc_bit_allocation.md_remainingbits_loop>
0x001D50        D13B0022                 r1 = M[r9 + 34];
0x001D51        2005003F                 Null = r3 - r1;
0x001D52        DD500005                 if POS jump $M.sbc.calc_bit_allocation.md_remainingbits_end;
0x001D53        E1F000AE                 call $M.sbc.calc_bit_allocation.share_code_4;
0x001D54        E466002F                 r4 = r4 + 1;
0x001D55        200600CF                 Null = r4 - r10;
0x001D56        DD10FFFA                 if NE jump $M.sbc.calc_bit_allocation.md_remainingbits_loop;

 <$M.sbc.calc_bit_allocation.md_remainingbits_end>
0x001D57        983200CF                 r1 = r0 * r10 (int);
0x001D58        D16B001B                 r4 = M[r9 + 27];
0x001D59        5013006F                 I1 = r1 + r4;
0x001D5A        D16B001A                 r4 = M[r9 + 26];
0x001D5B        5023006F                 I2 = r1 + r4;
0x001D5C        01600000                 r4 = Null + 0;

 <$M.sbc.calc_bit_allocation.md_remainingbits_extra_loop>
0x001D5D        D13B0022                 r1 = M[r9 + 34];
0x001D5E        2005003F                 Null = r3 - r1;
0x001D5F        DD50000B                 if POS jump $M.sbc.calc_bit_allocation.md_remainingbits_extra_end;
0x001D60        03003400                 Null = Null + Null, r1 = M[I1,0];
0x001D61        03007900                 Null = Null + Null, r5 = M[I2,1];
0x001D62        21030010                 Null = r1 - 16;
0x001D63        DD500003                 if POS jump $M.sbc.calc_bit_allocation.md_remainingbits_extra_endif;
0x001D64        E433002F                 r1 = r1 + 1;
0x001D65        E455002F                 r3 = r3 + 1;

 <$M.sbc.calc_bit_allocation.md_remainingbits_extra_endif>
0x001D66        0300B500                 Null = Null + Null, M[I1,1] = r1;
0x001D67        E466002F                 r4 = r4 + 1;
0x001D68        200600CF                 Null = r4 - r10;
0x001D69        DD10FFF4                 if NE jump $M.sbc.calc_bit_allocation.md_remainingbits_extra_loop;

 <$M.sbc.calc_bit_allocation.md_remainingbits_extra_end>
0x001D6A        E422002F                 r0 = r0 + 1;
0x001D6B        D13B001F                 r1 = M[r9 + 31];
0x001D6C        2002003F                 Null = r0 - r1;
0x001D6D        DD10FFA6                 if NE jump $M.sbc.calc_bit_allocation.md_chan_loop;
0x001D6E        DDF0F8FF                 jump $pop_rLink_and_rts;

 <$M.sbc.calc_bit_allocation.stereo_joint>
0x001D6F        D13B0020                 r1 = M[r9 + 32];
0x001D70        DD00000B                 if EQ jump $M.sbc.calc_bit_allocation.sj_loudness;
0x001D71        D1CB0021                 r10 = M[r9 + 33];
0x001D72        99CC0002                 r10 = r10 * 2 (int);
0x001D73        D13B0018                 r1 = M[r9 + 24];
0x001D74        5010003F                 I1 = Null + r1;
0x001D75        D13B001A                 r1 = M[r9 + 26];
0x001D76        5020003F                 I2 = Null + r1;
0x001D77        E5F00003                 do $M.sbc.calc_bit_allocation.sj_snr_loop2;
0x001D78        03003500                 Null = Null + Null, r1 = M[I1,1];
0x001D79        0300B900                 Null = Null + Null, M[I2,1] = r1;

 <$M.sbc.calc_bit_allocation.sj_snr_loop2>
0x001D7A        DDF0001B                 jump $M.sbc.calc_bit_allocation.sj_maxbitneedindex;

 <$M.sbc.calc_bit_allocation.sj_loudness>
0x001D7B        D12B0021                 r0 = M[r9 + 33];
0x001D7C        E460003F                 r4 = Null - 1;
0x001D7D        D13B0018                 r1 = M[r9 + 24];
0x001D7E        5010003F                 I1 = Null + r1;
0x001D7F        D13B001A                 r1 = M[r9 + 26];
0x001D80        5020003F                 I2 = Null + r1;
0x001D81        D13B001C                 r1 = M[r9 + 28];
0x001D82        9B320000                 r1 = r1 * r0 (int);
0x001D83        D14B0017                 r2 = M[r9 + 23];
0x001D84        5043004F                 I4 = r1 + r2;
0x001D85        51340010                 I3 = r2 + 16;
0x001D86        21020008                 Null = r0 - 8;
0x001D87        54430030                 if EQ I4 = r1 + I3;
0x001D88        01200002                 r0 = Null + 2;
0x001D89        0170FFF6                 r5 = Null + -10;
0x001D8A        0047350F                 r2 = r5 + Null, r1 = M[I1,M1];

 <$M.sbc.calc_bit_allocation.sj_loudness_chan_loop>
0x001D8B        D1CB0021                 r10 = M[r9 + 33];
0x001D8C        59340001                 I3 = I4 + 1;
0x001D8D        03000050                 Null = Null + Null, r3 = M[I4,0];
0x001D8E        E5F00005                 do $M.sbc.calc_bit_allocation.sj_loudness_sb_loop;
0x001D8F        0003000F                 Null = r1 + Null;
0x001D90        20433551                 if NE r2 = r1 - r3, r1 = M[I1,M1];
0x001D91        90445D65                 if POS r2 = r2 ASHIFT r4, r3 = M[I3,M1];
0x001D92        0047C90F                 r2 = r5 + Null, M[I2,M1] = r2;

 <$M.sbc.calc_bit_allocation.sj_loudness_sb_loop>
0x001D93        E422003F                 r0 = r0 - 1;
0x001D94        DD10FFF7                 if NE jump $M.sbc.calc_bit_allocation.sj_loudness_chan_loop;

 <$M.sbc.calc_bit_allocation.sj_maxbitneedindex>
0x001D95        D1CB0021                 r10 = M[r9 + 33];
0x001D96        99CC0002                 r10 = r10 * 2 (int);
0x001D97        D14B001A                 r2 = M[r9 + 26];
0x001D98        5020004F                 I2 = Null + r2;
0x001D99        E1F0003C                 call $M.sbc.calc_bit_allocation.share_code_1;

 <$M.sbc.calc_bit_allocation.sj_findbitslice_loop1>
0x001D9A        D1CB0021                 r10 = M[r9 + 33];
0x001D9B        99CC0002                 r10 = r10 * 2 (int);
0x001D9C        D17B001A                 r5 = M[r9 + 26];
0x001D9D        5020007F                 I2 = Null + r5;
0x001D9E        E1F00040                 call $M.sbc.calc_bit_allocation.share_code_2;
0x001D9F        DD40FFFB                 if NEG jump $M.sbc.calc_bit_allocation.sj_findbitslice_loop1;
0x001DA0        D1CB001B                 r10 = M[r9 + 27];
0x001DA1        501000CF                 I1 = Null + r10;
0x001DA2        D1CB001A                 r10 = M[r9 + 26];
0x001DA3        502000CF                 I2 = Null + r10;
0x001DA4        D1CB0021                 r10 = M[r9 + 33];
0x001DA5        99CC0002                 r10 = r10 * 2 (int);
0x001DA6        E1F0004B                 call $M.sbc.calc_bit_allocation.share_code_3;
0x001DA7        D1CB0021                 r10 = M[r9 + 33];
0x001DA8        01600000                 r4 = Null + 0;
0x001DA9        01200000                 r0 = Null + 0;

 <$M.sbc.calc_bit_allocation.sj_remainingbits_loop>
0x001DAA        5022006F                 I2 = r0 + r4;
0x001DAB        D13B001B                 r1 = M[r9 + 27];
0x001DAC        5812003F                 I1 = I2 + r1;
0x001DAD        D13B001A                 r1 = M[r9 + 26];
0x001DAE        5B230000                 I2 = I2 + r1;
0x001DAF        D13B0022                 r1 = M[r9 + 34];
0x001DB0        2005003F                 Null = r3 - r1;
0x001DB1        DD50000A                 if POS jump $M.sbc.calc_bit_allocation.sj_remainingbits_end;
0x001DB2        E1F0004F                 call $M.sbc.calc_bit_allocation.share_code_4;
0x001DB3        200200CF                 Null = r0 - r10;
0x001DB4        DD000003                 if EQ jump $M.sbc.calc_bit_allocation.sj_remainingbits_chanchange;
0x001DB5        002C000F                 r0 = r10 + Null;
0x001DB6        DDF0FFF4                 jump $M.sbc.calc_bit_allocation.sj_remainingbits_loop;

 <$M.sbc.calc_bit_allocation.sj_remainingbits_chanchange>
0x001DB7        01200000                 r0 = Null + 0;
0x001DB8        E466002F                 r4 = r4 + 1;
0x001DB9        200600CF                 Null = r4 - r10;
0x001DBA        DD10FFF0                 if NE jump $M.sbc.calc_bit_allocation.sj_remainingbits_loop;

 <$M.sbc.calc_bit_allocation.sj_remainingbits_end>
0x001DBB        01600000                 r4 = Null + 0;
0x001DBC        01200000                 r0 = Null + 0;

 <$M.sbc.calc_bit_allocation.sj_remainingbits_extra_loop>
0x001DBD        5022006F                 I2 = r0 + r4;
0x001DBE        D13B001B                 r1 = M[r9 + 27];
0x001DBF        5812003F                 I1 = I2 + r1;
0x001DC0        D13B001A                 r1 = M[r9 + 26];
0x001DC1        5B230000                 I2 = I2 + r1;
0x001DC2        D13B0022                 r1 = M[r9 + 34];
0x001DC3        2005003F                 Null = r3 - r1;
0x001DC4        DD500010                 if POS jump $M.sbc.calc_bit_allocation.sj_remainingbits_extra_end;
0x001DC5        03003400                 Null = Null + Null, r1 = M[I1,0];
0x001DC6        03007800                 Null = Null + Null, r5 = M[I2,0];
0x001DC7        21030010                 Null = r1 - 16;
0x001DC8        DD500003                 if POS jump $M.sbc.calc_bit_allocation.sj_remainingbits_extra_endif;
0x001DC9        E433002F                 r1 = r1 + 1;
0x001DCA        E455002F                 r3 = r3 + 1;

 <$M.sbc.calc_bit_allocation.sj_remainingbits_extra_endif>
0x001DCB        0300B500                 Null = Null + Null, M[I1,1] = r1;
0x001DCC        200200CF                 Null = r0 - r10;
0x001DCD        DD000003                 if EQ jump $M.sbc.calc_bit_allocation.sj_remainingbits_extra_chanchange;
0x001DCE        002C000F                 r0 = r10 + Null;
0x001DCF        DDF0FFEE                 jump $M.sbc.calc_bit_allocation.sj_remainingbits_extra_loop;

 <$M.sbc.calc_bit_allocation.sj_remainingbits_extra_chanchange>
0x001DD0        01200000                 r0 = Null + 0;
0x001DD1        E466002F                 r4 = r4 + 1;
0x001DD2        200600CF                 Null = r4 - r10;
0x001DD3        DD10FFEA                 if NE jump $M.sbc.calc_bit_allocation.sj_remainingbits_extra_loop;

 <$M.sbc.calc_bit_allocation.sj_remainingbits_extra_end>
0x001DD4        DDF0F899                 jump $pop_rLink_and_rts;

 <$M.sbc.calc_bit_allocation.share_code_1>
0x001DD5        01400000                 r2 = Null + 0;
0x001DD6        E5F00004                 do $M.sbc.calc_bit_allocation.maxbitneed_loop;
0x001DD7        03003900                 Null = Null + Null, r1 = M[I2,1];
0x001DD8        2004003F                 Null = r2 - r1;
0x001DD9        00430004                 if NEG r2 = r1 + Null;

 <$M.sbc.calc_bit_allocation.maxbitneed_loop>
0x001DDA        01500000                 r3 = Null + 0;
0x001DDB        01600000                 r4 = Null + 0;
0x001DDC        E444002F                 r2 = r2 + 1;
0x001DDD        DC0D000F                 rts;

 <$M.sbc.calc_bit_allocation.share_code_2>
0x001DDE        E444003F                 r2 = r2 - 1;
0x001DDF        03560000                 r3 = r3 + r4;
0x001DE0        01600000                 r4 = Null + 0;
0x001DE1        E5F0000C                 do $M.sbc.calc_bit_allocation.findbitslice_loop2;
0x001DE2        03003900                 Null = Null + Null, r1 = M[I2,1];
0x001DE3        2073004F                 r5 = r1 - r2;
0x001DE4        21070002                 Null = r5 - 2;
0x001DE5        DD400004                 if NEG jump $M.sbc.calc_bit_allocation.findbitslice_elseif1;
0x001DE6        21070010                 Null = r5 - 16;
0x001DE7        DD500002                 if POS jump $M.sbc.calc_bit_allocation.findbitslice_elseif1;
0x001DE8        E466002F                 r4 = r4 + 1;

 <$M.sbc.calc_bit_allocation.findbitslice_elseif1>
0x001DE9        E407003F                 Null = r5 - 1;
0x001DEA        DD100002                 if NE jump $M.sbc.calc_bit_allocation.findbitslice_endif1;
0x001DEB        01660002                 r4 = r4 + 2;

 <$M.sbc.calc_bit_allocation.findbitslice_endif1>
0x001DEC        03000000                 Null = Null + Null;

 <$M.sbc.calc_bit_allocation.findbitslice_loop2>
0x001DED        0075006F                 r5 = r3 + r4;
0x001DEE        D1CB0022                 r10 = M[r9 + 34];
0x001DEF        200700CF                 Null = r5 - r10;
0x001DF0        DC0D000F                 rts;

 <$M.sbc.calc_bit_allocation.share_code_3>
0x001DF1        D13B0022                 r1 = M[r9 + 34];
0x001DF2        2007003F                 Null = r5 - r1;
0x001DF3        DD100003                 if NE jump $M.sbc.calc_bit_allocation.findbitslice_endif2;
0x001DF4        03560000                 r3 = r3 + r4;
0x001DF5        E444003F                 r2 = r2 - 1;

 <$M.sbc.calc_bit_allocation.findbitslice_endif2>
0x001DF6        E5F0000A                 do $M.sbc.calc_bit_allocation.distbits_loop;
0x001DF7        03003900                 Null = Null + Null, r1 = M[I2,1];
0x001DF8        2073004F                 r5 = r1 - r2;
0x001DF9        01300000                 r1 = Null + 0;
0x001DFA        21070002                 Null = r5 - 2;
0x001DFB        00370005                 if POS r1 = r5 + Null;
0x001DFC        01700010                 r5 = Null + 16;
0x001DFD        21030010                 Null = r1 - 16;
0x001DFE        00370005                 if POS r1 = r5 + Null;
0x001DFF        0300B500                 Null = Null + Null, M[I1,1] = r1;

 <$M.sbc.calc_bit_allocation.distbits_loop>
0x001E00        DC0D000F                 rts;

 <$M.sbc.calc_bit_allocation.share_code_4>
0x001E01        03003400                 Null = Null + Null, r1 = M[I1,0];
0x001E02        03007900                 Null = Null + Null, r5 = M[I2,1];
0x001E03        21030002                 Null = r1 - 2;
0x001E04        DD400006                 if NEG jump $M.sbc.calc_bit_allocation.remainingbits_elseif;
0x001E05        21030010                 Null = r1 - 16;
0x001E06        DD500004                 if POS jump $M.sbc.calc_bit_allocation.remainingbits_elseif;
0x001E07        E433002F                 r1 = r1 + 1;
0x001E08        E455002F                 r3 = r3 + 1;
0x001E09        DDF0000A                 jump $M.sbc.calc_bit_allocation.remainingbits_endif;

 <$M.sbc.calc_bit_allocation.remainingbits_elseif>
0x001E0A        23740000                 r5 = r5 - r2;
0x001E0B        E407003F                 Null = r5 - 1;
0x001E0C        DD100007                 if NE jump $M.sbc.calc_bit_allocation.remainingbits_endif;
0x001E0D        D17B0022                 r5 = M[r9 + 34];
0x001E0E        23750000                 r5 = r5 - r3;
0x001E0F        21070002                 Null = r5 - 2;
0x001E10        DD400003                 if NEG jump $M.sbc.calc_bit_allocation.remainingbits_endif;
0x001E11        01300002                 r1 = Null + 2;
0x001E12        01550002                 r3 = r3 + 2;

 <$M.sbc.calc_bit_allocation.remainingbits_endif>
0x001E13        0300B500                 Null = Null + Null, M[I1,1] = r1;
0x001E14        DC0D000F                 rts;

 <$M.sbc.calc_bit_allocation.corrupt_frame_error>
0x001E15        E420002F                 r0 = Null + 1;
0x001E16        D52B0036                 M[r9 + 54] = r0;
0x001E17        DDF0F856                 jump $pop_rLink_and_rts;

 <$kal_float_lib.__zero.call_entry>
0x001E18        F3D00000                 push rLink;

 <$kal_float_lib.__zero.jump_entry>
0x001E19        01200000                 r0 = Null + 0;
0x001E1A        01300000                 r1 = Null + 0;
0x001E1B        F3D40000                 pop rLink;
0x001E1C        DC0D000F                 rts;

 <$kal_float_lib.__renorm.call_entry>
0x001E1D        F3D00000                 push rLink;

 <$kal_float_lib.__renorm.jump_entry>
0x001E1E        0003000F                 Null = r1 + Null;
0x001E1F        DD00FFFA                 if EQ jump $kal_float_lib.__zero.jump_entry;
0x001E20        F3600000                 push r4;
0x001E21        816200FF                 r4 = r0 AND 0xff;
0x001E22        FD000080 81220000        r0 = r0 AND 0x800000;
0x001E24        0003000F                 Null = r1 + Null;
0x001E25        DD400004                 if NEG jump $kal_float_lib.__renorm_rebuild_and_exit;

 <$kal_float_lib.__renorm_loop>
0x001E26        E466003F                 r4 = r4 - 1;
0x001E27        8D330001                 r1 = r1 LSHIFT 1;
0x001E28        DD50FFFE                 if POS jump $kal_float_lib.__renorm_loop;

 <$kal_float_lib.__renorm_rebuild_and_exit>
0x001E29        816600FF                 r4 = r4 AND 0xff;
0x001E2A        87260000                 r0 = r0 OR r4;
0x001E2B        F3640000                 pop r4;
0x001E2C        F3D40000                 pop rLink;
0x001E2D        DC0D000F                 rts;

 <$kal_float_lib.__add.jump_entry>
0x001E2E        F1000330                 pushm <r2, r3, r6, r7>;
0x001E2F        0003000F                 Null = r1 + Null;
0x001E30        00240000                 if EQ r0 = r2 + Null;
0x001E31        0005000F                 Null = r3 + Null;
0x001E32        00420000                 if EQ r2 = r0 + Null;
0x001E33        817200FF                 r5 = r0 AND 0xff;
0x001E34        818400FF                 r6 = r2 AND 0xff;
0x001E35        2097008F                 r7 = r5 - r6;
0x001E36        DD400005                 if NEG jump $kal_float_lib.__add_shift_op1;
0x001E37        2090009F                 r7 = Null - r7;
0x001E38        8F590000                 r3 = r3 LSHIFT r7;
0x001E39        E427002F                 r0 = r5 + 1;
0x001E3A        DDF00003                 jump $kal_float_lib.__add_add_and_exit;

 <$kal_float_lib.__add_shift_op1>
0x001E3B        8F390000                 r1 = r1 LSHIFT r7;
0x001E3C        E428002F                 r0 = r6 + 1;

 <$kal_float_lib.__add_add_and_exit>
0x001E3D        8D33007F                 r1 = r1 LSHIFT -1;
0x001E3E        8D55007F                 r3 = r3 LSHIFT -1;
0x001E3F        03350000                 r1 = r1 + r3;
0x001E40        87260000                 r0 = r0 OR r4;
0x001E41        F1040330                 popm <r2, r3, r6, r7>;
0x001E42        F10400C0                 popm <r4, r5>;
0x001E43        DDF0FFDB                 jump $kal_float_lib.__renorm.jump_entry;

 <$kal_float_lib.__sub.jump_entry>
0x001E44        F1000330                 pushm <r2, r3, r6, r7>;
0x001E45        0003000F                 Null = r1 + Null;
0x001E46        00240000                 if EQ r0 = r2 + Null;
0x001E47        0005000F                 Null = r3 + Null;
0x001E48        00420000                 if EQ r2 = r0 + Null;
0x001E49        817200FF                 r5 = r0 AND 0xff;
0x001E4A        818400FF                 r6 = r2 AND 0xff;
0x001E4B        2097008F                 r7 = r5 - r6;
0x001E4C        DD400005                 if NEG jump $kal_float_lib.__sub_shift_op1;
0x001E4D        2090009F                 r7 = Null - r7;
0x001E4E        8F590000                 r3 = r3 LSHIFT r7;
0x001E4F        E427002F                 r0 = r5 + 1;
0x001E50        DDF00003                 jump $kal_float_lib.__sub_sub_and_exit;

 <$kal_float_lib.__sub_shift_op1>
0x001E51        8F390000                 r1 = r1 LSHIFT r7;
0x001E52        E428002F                 r0 = r6 + 1;

 <$kal_float_lib.__sub_sub_and_exit>
0x001E53        8D33007F                 r1 = r1 LSHIFT -1;
0x001E54        8D55007F                 r3 = r3 LSHIFT -1;
0x001E55        2003005F                 Null = r1 - r3;
0x001E56        DD400006                 if NEG jump $kal_float_lib.__sub_sub_a_from_b;
0x001E57        23350000                 r1 = r1 - r3;
0x001E58        87260000                 r0 = r0 OR r4;
0x001E59        F1040330                 popm <r2, r3, r6, r7>;
0x001E5A        F10400C0                 popm <r4, r5>;
0x001E5B        DDF0FFC3                 jump $kal_float_lib.__renorm.jump_entry;

 <$kal_float_lib.__sub_sub_a_from_b>
0x001E5C        2035003F                 r1 = r3 - r1;
0x001E5D        FD000080 89660000        r4 = r4 XOR 0x800000;
0x001E5F        87260000                 r0 = r0 OR r4;
0x001E60        F1040330                 popm <r2, r3, r6, r7>;
0x001E61        F10400C0                 popm <r4, r5>;
0x001E62        DDF0FFBC                 jump $kal_float_lib.__renorm.jump_entry;

 <$kal_float_lib.q_to_float>
0x001E63        F3D00000                 push rLink;

 <$kal_float_lib.q_to_float.jump_entry>
0x001E64        0002000F                 Null = r0 + Null;
0x001E65        DD00FFB4                 if EQ jump $kal_float_lib.__zero.jump_entry;
0x001E66        F1000050                 pushm <r2, r4>;
0x001E67        0042000F                 r2 = r0 + Null;
0x001E68        FD000080 81620000        r4 = r0 AND 0x800000;
0x001E6A        20400041                 if NE r2 = Null - r2;
0x001E6B        0123007F                 r0 = r1 + 127;
0x001E6C        87260000                 r0 = r0 OR r4;
0x001E6D        0034000F                 r1 = r2 + Null;
0x001E6E        F1040050                 popm <r2, r4>;
0x001E6F        DDF0FFAF                 jump $kal_float_lib.__renorm.jump_entry;

 <$kal_float_lib.float_to_q>
0x001E70        F3D00000                 push rLink;

 <$kal_float_lib.float_to_q.jump_entry>
0x001E71        F1000060                 pushm <r3, r4>;
0x001E72        8D33007F                 r1 = r1 LSHIFT -1;
0x001E73        815200FF                 r3 = r0 AND 0xff;
0x001E74        E455003F                 r3 = r3 - 1;
0x001E75        FD000080 81620000        r4 = r0 AND 0x800000;
0x001E77        20300031                 if NE r1 = Null - r1;
0x001E78        21550097                 r3 = r3 - 151;
0x001E79        03540000                 r3 = r3 + r2;
0x001E7A        9023005F                 r0 = r1 ASHIFT r3;
0x001E7B        F1040060                 popm <r3, r4>;
0x001E7C        F3D40000                 pop rLink;
0x001E7D        DC0D000F                 rts;

 <$kal_float_lib.int_to_float>
0x001E7E        F3D00000                 push rLink;
0x001E7F        01300018                 r1 = Null + 24;
0x001E80        DDF0FFE4                 jump $kal_float_lib.q_to_float.jump_entry;

 <$kal_float_lib.frac_to_float>
0x001E81        F3D00000                 push rLink;
0x001E82        E430002F                 r1 = Null + 1;
0x001E83        DDF0FFE1                 jump $kal_float_lib.q_to_float.jump_entry;

 <$kal_float_lib.float_to_int>
0x001E84        F1002010                 pushm <r2, rLink>;
0x001E85        01400002                 r2 = Null + 2;
0x001E86        E1F0FFEA                 call $kal_float_lib.float_to_q;
0x001E87        F1042010                 popm <r2, rLink>;
0x001E88        DC0D000F                 rts;

 <$kal_float_lib.float_to_frac>
0x001E89        F1002010                 pushm <r2, rLink>;
0x001E8A        01400019                 r2 = Null + 25;
0x001E8B        E1F0FFE5                 call $kal_float_lib.float_to_q;
0x001E8C        F1042010                 popm <r2, rLink>;
0x001E8D        DC0D000F                 rts;

 <$kal_float_lib.neg>
0x001E8E        FD000080 89220000        r0 = r0 XOR 0x800000;
0x001E90        DC0D000F                 rts;

 <$kal_float_lib.add>
0x001E91        F3D00000                 push rLink;
0x001E92        F10000C0                 pushm <r4, r5>;
0x001E93        FD000080 81620000        r4 = r0 AND 0x800000;
0x001E95        FD000080 81740000        r5 = r2 AND 0x800000;
0x001E97        2006007F                 Null = r4 - r5;
0x001E98        DD00FF96                 if EQ jump $kal_float_lib.__add.jump_entry;
0x001E99        DDF0FFAB                 jump $kal_float_lib.__sub.jump_entry;

 <$kal_float_lib.sub>
0x001E9A        F3D00000                 push rLink;
0x001E9B        F10000C0                 pushm <r4, r5>;
0x001E9C        FD000080 81620000        r4 = r0 AND 0x800000;
0x001E9E        FD000080 81740000        r5 = r2 AND 0x800000;
0x001EA0        2006007F                 Null = r4 - r5;
0x001EA1        DD00FFA3                 if EQ jump $kal_float_lib.__sub.jump_entry;
0x001EA2        DDF0FF8C                 jump $kal_float_lib.__add.jump_entry;

 <$kal_float_lib.mul>
0x001EA3        F3D00000                 push rLink;
0x001EA4        0003000F                 Null = r1 + Null;
0x001EA5        DD00FF74                 if EQ jump $kal_float_lib.__zero.jump_entry;
0x001EA6        0005000F                 Null = r3 + Null;
0x001EA7        DD00FF72                 if EQ jump $kal_float_lib.__zero.jump_entry;
0x001EA8        F10000E0                 pushm <r3, r4, r5>;
0x001EA9        816200FF                 r4 = r0 AND 0xff;
0x001EAA        817400FF                 r5 = r2 AND 0xff;
0x001EAB        03670000                 r4 = r4 + r5;
0x001EAC        2166007F                 r4 = r4 - 127;
0x001EAD        8872004F                 r5 = r0 XOR r2;
0x001EAE        FD000080 81770000        r5 = r5 AND 0x800000;
0x001EB0        8426007F                 r0 = r4 OR r5;
0x001EB1        8D33007F                 r1 = r1 LSHIFT -1;
0x001EB2        8D55007F                 r3 = r3 LSHIFT -1;
0x001EB3        CC13005F                 rMAC = r1 * r3 (SS);
0x001EB4        0031000F                 r1 = rMAC + Null;
0x001EB5        8D330001                 r1 = r1 LSHIFT 1;
0x001EB6        F10400E0                 popm <r3, r4, r5>;
0x001EB7        DDF0FF67                 jump $kal_float_lib.__renorm.jump_entry;

 <$kal_float_lib.recip>
0x001EB8        F3D00000                 push rLink;
0x001EB9        F10010F0                 pushm <r2, r3, r4, r5, r10>;
0x001EBA        654200FF                 r2 = 255 - r0;
0x001EBB        91530017                 r3 = r1 ASHIFT 23;
0x001EBC        F100000C                 pushm <r0, r1>;
0x001EBD        01C00006                 r10 = Null + 6;
0x001EBE        E5F00012                 do $kal_float_lib._recip_iteration_loop;
0x001EBF        F104000C                 popm <r0, r1>;
0x001EC0        F100000C                 pushm <r0, r1>;
0x001EC1        E1F0FFE2                 call $kal_float_lib.mul;
0x001EC2        F100003C                 pushm <r0, r1, r2, r3>;
0x001EC3        F10400F0                 popm <r2, r3, r4, r5>;
0x001EC4        01200080                 r0 = Null + 128;
0x001EC5        FD000080 01300000        r1 = Null + -8388608;
0x001EC7        E1F0FFD3                 call $kal_float_lib.sub;
0x001EC8        0046000F                 r2 = r4 + Null;
0x001EC9        0057000F                 r3 = r5 + Null;
0x001ECA        E1F0FFD9                 call $kal_float_lib.mul;
0x001ECB        0046000F                 r2 = r4 + Null;
0x001ECC        0057000F                 r3 = r5 + Null;
0x001ECD        E1F0FFC4                 call $kal_float_lib.add;
0x001ECE        0042000F                 r2 = r0 + Null;
0x001ECF        0053000F                 r3 = r1 + Null;

 <$kal_float_lib._recip_iteration_loop>
0x001ED0        F104000C                 popm <r0, r1>;
0x001ED1        0024000F                 r0 = r2 + Null;
0x001ED2        0035000F                 r1 = r3 + Null;
0x001ED3        F10410F0                 popm <r2, r3, r4, r5, r10>;
0x001ED4        DDF0FF4A                 jump $kal_float_lib.__renorm.jump_entry;

 <$kal_float_lib.div>
0x001ED5        F3D00000                 push rLink;
0x001ED6        F1000030                 pushm <r2, r3>;
0x001ED7        F100000C                 pushm <r0, r1>;
0x001ED8        0024000F                 r0 = r2 + Null;
0x001ED9        0035000F                 r1 = r3 + Null;
0x001EDA        E1F0FFDE                 call $kal_float_lib.recip;
0x001EDB        0042000F                 r2 = r0 + Null;
0x001EDC        0053000F                 r3 = r1 + Null;
0x001EDD        F104000C                 popm <r0, r1>;
0x001EDE        E1F0FFC5                 call $kal_float_lib.mul;
0x001EDF        F1040030                 popm <r2, r3>;
0x001EE0        DDF0FF3E                 jump $kal_float_lib.__renorm.jump_entry;

 <$kal_float_lib.rsqrt>
0x001EE1        F3D00000                 push rLink;
0x001EE2        0002000F                 Null = r0 + Null;
0x001EE3        DD40FF36                 if NEG jump $kal_float_lib.__zero.jump_entry;
0x001EE4        F10013F0                 pushm <r2, r3, r4, r5, r6, r7, r10>;
0x001EE5        0062000F                 r4 = r0 + Null;
0x001EE6        0073000F                 r5 = r1 + Null;
0x001EE7        E482003F                 r6 = r0 - 1;
0x001EE8        0093000F                 r7 = r1 + Null;
0x001EE9        E466003F                 r4 = r4 - 1;
0x001EEA        FD00007F 8177FFFF        r5 = r5 AND 0x7fffff;
0x001EEC        8D66000E                 r4 = r4 LSHIFT 14;
0x001EED        8D770077                 r5 = r5 LSHIFT -9;
0x001EEE        87670000                 r4 = r4 OR r5;
0x001EEF        FD00005F 01703759        r5 = Null + 6240089;
0x001EF1        2067006F                 r4 = r5 - r4;
0x001EF2        8D760008                 r5 = r4 LSHIFT 8;
0x001EF3        FD000080 85770000        r5 = r5 OR 0x800000;
0x001EF5        8D660071                 r4 = r4 LSHIFT -15;
0x001EF6        E466002F                 r4 = r4 + 1;
0x001EF7        01C00003                 r10 = Null + 3;
0x001EF8        E5F00014                 do $kal_float_lib._rsqrt_iteration_loop;
0x001EF9        0026000F                 r0 = r4 + Null;
0x001EFA        0037000F                 r1 = r5 + Null;
0x001EFB        0046000F                 r2 = r4 + Null;
0x001EFC        0057000F                 r3 = r5 + Null;
0x001EFD        E1F0FFA6                 call $kal_float_lib.mul;
0x001EFE        0048000F                 r2 = r6 + Null;
0x001EFF        0059000F                 r3 = r7 + Null;
0x001F00        E1F0FFA3                 call $kal_float_lib.mul;
0x001F01        0042000F                 r2 = r0 + Null;
0x001F02        0053000F                 r3 = r1 + Null;
0x001F03        01200080                 r0 = Null + 128;
0x001F04        FD0000C0 01300000        r1 = Null + -4194304;
0x001F06        E1F0FF94                 call $kal_float_lib.sub;
0x001F07        0046000F                 r2 = r4 + Null;
0x001F08        0057000F                 r3 = r5 + Null;
0x001F09        E1F0FF9A                 call $kal_float_lib.mul;
0x001F0A        0062000F                 r4 = r0 + Null;
0x001F0B        0073000F                 r5 = r1 + Null;

 <$kal_float_lib._rsqrt_iteration_loop>
0x001F0C        F10413F0                 popm <r2, r3, r4, r5, r6, r7, r10>;
0x001F0D        DDF0FF11                 jump $kal_float_lib.__renorm.jump_entry;

 <$ConfigureBackEnd>
0x001F0E        F3D00000                 push rLink;
0x001F0F        09302C8A                 r1 = Null + M[$app_config.io];
0x001F10        21030004                 Null = r1 - 4;
0x001F11        DD100047                 if NE jump $M.back_end.skip_faststream;
0x001F12        01200BB8                 r0 = Null + 3000;
0x001F13        FD0000FF 19205A2C        M[$sra_struct] = r0 + Null;
0x001F15        FD00008C 01200002        r0 = Null + -7602174;
0x001F17        FD0000FF 19205A2D        M[0xff5a2d] = r0 + Null;
0x001F19        FD0000FF 01205C62        r0 = Null + -41886;
0x001F1B        FD0000FF 19205A2E        M[0xff5a2e] = r0 + Null;
0x001F1D        FD0000FF 01205C5F        r0 = Null + -41889;
0x001F1F        FD0000FF 19205A2F        M[0xff5a2f] = r0 + Null;
0x001F21        FD0000FF 09305C8B        r1 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001F23        FD000000 2103AC44        Null = r1 - 44100;
0x001F25        DD100010                 if NE jump $M.back_end.not_44100_fs;
0x001F26        FD000000 0120A3D7        r0 = Null + 41943;
0x001F28        FD0000FF 19205A30        M[0xff5a30] = r0 + Null;
0x001F2A        99230003                 r0 = r1 * 3 (int);
0x001F2B        FD0000FF 19205A31        M[0xff5a31] = r0 + Null;
0x001F2D        01200144                 r0 = Null + 324;
0x001F2E        FD0000FF 19205C8D        M[$M.back_end.monitor_level] = r0 + Null;
0x001F30        FD000014 0120FDF4        r0 = Null + 1375732;
0x001F32        FD0000FF 19205A32        M[0xff5a32] = r0 + Null;
0x001F34        DDF00014                 jump $M.back_end.sra_conf_done_fs;

 <$M.back_end.not_44100_fs>
0x001F35        FD000000 2103BB80        Null = r1 - 48000;
0x001F37        DD100010                 if NE jump $M.back_end.not_48000_fs;
0x001F38        FD000000 0120A3D7        r0 = Null + 41943;
0x001F3A        FD0000FF 19205A30        M[0xff5a30] = r0 + Null;
0x001F3C        99230003                 r0 = r1 * 3 (int);
0x001F3D        FD0000FF 19205A31        M[0xff5a31] = r0 + Null;
0x001F3F        01200168                 r0 = Null + 360;
0x001F40        FD0000FF 19205C8D        M[$M.back_end.monitor_level] = r0 + Null;
0x001F42        FD000016 0120D902        r0 = Null + 1497346;
0x001F44        FD0000FF 19205A32        M[0xff5a32] = r0 + Null;
0x001F46        DDF00002                 jump $M.back_end.sra_conf_done_fs;

 <$M.back_end.not_48000_fs>
0x001F47        DDF01690                 jump 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;

 <$M.back_end.sra_conf_done_fs>
0x001F48        01202044                 r0 = Null + 8260;
0x001F49        19201426                 M[$M.A2DP_IN.decoder_codec_stream_struc] = r0 + Null;
0x001F4A        01202735                 r0 = Null + 10037;
0x001F4B        19201427                 M[0x1427] = r0 + Null;
0x001F4C        01202677                 r0 = Null + 9847;
0x001F4D        19201428                 M[0x1428] = r0 + Null;
0x001F4E        01701429                 r5 = Null + 5161;
0x001F4F        E1F00564                 call $sbcdec.init_static_decoder;
0x001F50        01201FB8                 r0 = Null + 8120;
0x001F51        192014A4                 M[$M.A2DP_OUT.encoder_codec_stream_struc] = r0 + Null;
0x001F52        012026B0                 r0 = Null + 9904;
0x001F53        192014A5                 M[0x14a5] = r0 + Null;
0x001F54        017014A6                 r5 = Null + 5286;
0x001F55        E1F003F1                 call $sbcenc.init_static_encoder;
0x001F56        01200048                 r0 = Null + 72;
0x001F57        19202C05                 M[0x2c05] = r0 + Null;

 <$M.back_end.skip_faststream>
0x001F58        21030007                 Null = r1 - 7;
0x001F59        DD100001                 if NE jump $M.back_end.skip_aptx_acl_sprint;

 <$M.back_end.skip_aptx_acl_sprint>
0x001F5A        DDF0F713                 jump $pop_rLink_and_rts;

 <$BackEndStart>
0x001F5B        F3D00000                 push rLink;
0x001F5C        FD0000FF 09305C8B        r1 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x001F5E        99330003                 r1 = r1 * 3 (int);
0x001F5F        FD0000FF 19305A31        M[0xff5a31] = r1 + Null;
0x001F61        8144007F                 r2 = r2 AND 0x7f;
0x001F62        21340003                 r1 = r2 - 3;
0x001F63        20440034                 if NEG r2 = r2 - r1;
0x001F64        994420C5                 r2 = r2 * 8389 (int);
0x001F65        95342000                 r1 = r2 * 0.25 (frac);
0x001F66        03430000                 r2 = r2 + r1;
0x001F67        FD000003 2134D70A        r1 = r2 - 251658;
0x001F69        20440035                 if POS r2 = r2 - r1;
0x001F6A        FD0000FF 19405A30        M[0xff5a30] = r2 + Null;
0x001F6C        FD000040 01400000        r2 = Null + 4194304;
0x001F6E        FD0000FF 19405A46        M[0xff5a46] = r2 + Null;
0x001F70        FD0000FF 095041FF        r3 = Null + M[$M.set_dac_rate.long_term_mismatch];
0x001F72        81250001                 r0 = r3 AND 0x1;
0x001F73        DD00001A                 if EQ jump $M.back_end.end;
0x001F74        9155007F                 r3 = r3 ASHIFT -1;
0x001F75        91550006                 r3 = r3 ASHIFT 6;
0x001F76        FD0000FF 29055A30        Null = r3 - M[0xff5a30];
0x001F78        DD500015                 if POS jump $M.back_end.end;
0x001F79        FD0000FF 09055A30        Null = r3 + M[0xff5a30];
0x001F7B        DD400012                 if NEG jump $M.back_end.end;
0x001F7C        FD0000FF 19505A45        M[0xff5a45] = r3 + Null;
0x001F7E        FD0000FF 19505A3E        M[0xff5a3e] = r3 + Null;
0x001F80        FD0000FF 09205A31        r0 = Null + M[0xff5a31];
0x001F82        97250000                 r0 = r0 * r3 (frac);
0x001F83        FD0000FF 19205A49        M[0xff5a49] = r0 + Null;
0x001F85        FD0000FF 19205A4A        M[0xff5a4a] = r0 + Null;
0x001F87        01200002                 r0 = Null + 2;
0x001F88        FD0000FF 19205A40        M[0xff5a40] = r0 + Null;
0x001F8A        E420002F                 r0 = Null + 1;
0x001F8B        FD0000FF 19205A47        M[0xff5a47] = r0 + Null;

 <$M.back_end.end>
0x001F8D        FD0000FF 01305C32        r1 = Null + -41934;
0x001F8F        014003E8                 r2 = Null + 1000;
0x001F90        015008E5                 r3 = Null + 2277;
0x001F91        E1F0F6D8                 call $timer.schedule_event_in;
0x001F92        09302C8A                 r1 = Null + M[$app_config.io];
0x001F93        21030007                 Null = r1 - 7;
0x001F94        DD100001                 if NE jump $M.back_end.skip_aptx_acl_sprint1;

 <$M.back_end.skip_aptx_acl_sprint1>
0x001F95        DDF0F6D8                 jump $pop_rLink_and_rts;

 <$EncodeOutput>
0x001F96        F3D00000                 push rLink;
0x001F97        09002C8D                 Null = Null + M[$M.back_end.codec_reset_needed];
0x001F98        DD000006                 if EQ jump $M.back_end.no_codec_reset;
0x001F99        017014A4                 r5 = Null + 5284;
0x001F9A        D1270001                 r0 = M[r5 + 1];
0x001F9B        01770002                 r5 = r5 + 2;
0x001F9C        E002000F                 call r0;
0x001F9D        19002C8D                 M[$M.back_end.codec_reset_needed] = Null + Null;

 <$M.back_end.no_codec_reset>
0x001F9E        FD0000FF 01A05BC2        r8 = Null + -42046;
0x001FA0        E1F0EF99                 call $M.mips_profile.mainstart;
0x001FA1        017014A4                 r5 = Null + 5284;
0x001FA2        E1F00429                 call $codec.av_encode;
0x001FA3        FD0000FF 01A05BC2        r8 = Null + -42046;
0x001FA5        E1F0EFA1                 call $M.mips_profile.mainend;
0x001FA6        D12A0006                 r0 = M[r8 + 6];
0x001FA7        FD0000FF 19205C8E        M[$M.back_end.PeakMipsEncoder] = r0 + Null;
0x001FA9        DDF0F6C4                 jump $pop_rLink_and_rts;

 <$DecodeInput>
0x001FAA        F3D00000                 push rLink;
0x001FAB        01A02BB4                 r8 = Null + 11188;
0x001FAC        E1F0EF8D                 call $M.mips_profile.mainstart;
0x001FAD        01701426                 r5 = Null + 5158;
0x001FAE        E1F00112                 call $codec.av_decode;
0x001FAF        01A02BB4                 r8 = Null + 11188;
0x001FB0        E1F0EF96                 call $M.mips_profile.mainend;
0x001FB1        D12A0006                 r0 = M[r8 + 6];
0x001FB2        19202C8E                 M[$M.back_end.PeakMipsDecoder] = r0 + Null;
0x001FB3        E1F0E64F                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x001FB4        0920142C                 r0 = Null + M[0x142c];
0x001FB5        21020000                 Null = r0 - 0;
0x001FB6        DD10F6B7                 if NE jump $pop_rLink_and_rts;
0x001FB7        DDF0F6B6                 jump $pop_rLink_and_rts;

 <$sbcenc.frame_encode>
0x001FB8        F3D00000                 push rLink;
0x001FB9        19700095                 M[$sbcenc.codec_struc] = r5 + Null;
0x001FBA        D1B70004                 r9 = M[r5 + 4];
0x001FBB        E1F005AF                 call $sbcenc.encoder_set_parameters;
0x001FBC        D12B0021                 r0 = M[r9 + 33];
0x001FBD        D13B001D                 r1 = M[r9 + 29];
0x001FBE        9862003F                 r4 = r0 * r1 (int);
0x001FBF        D1270001                 r0 = M[r5 + 1];
0x001FC0        DD000005                 if EQ jump $M.sbcenc.frame_encode.enough_input_data_left;
0x001FC1        E1F0F64E                 call $cbuffer.calc_amount_data;
0x001FC2        2002006F                 Null = r0 - r4;
0x001FC3        DD500002                 if POS jump $M.sbcenc.frame_encode.enough_input_data_left;
0x001FC4        DDF00006                 jump $M.sbcenc.frame_encode.not_enough_data;

 <$M.sbcenc.frame_encode.enough_input_data_left>
0x001FC5        D1270002                 r0 = M[r5 + 2];
0x001FC6        DD000007                 if EQ jump $M.sbcenc.frame_encode.enough_input_data_right;
0x001FC7        E1F0F648                 call $cbuffer.calc_amount_data;
0x001FC8        2002006F                 Null = r0 - r4;
0x001FC9        DD500004                 if POS jump $M.sbcenc.frame_encode.enough_input_data_right;

 <$M.sbcenc.frame_encode.not_enough_data>
0x001FCA        E420002F                 r0 = Null + 1;
0x001FCB        D5270003                 M[r5 + 3] = r0;
0x001FCC        DDF00050                 jump $M.sbcenc.frame_encode.exit;

 <$M.sbcenc.frame_encode.enough_input_data_right>
0x001FCD        E1F0067A                 call $sbc.calc_frame_length;
0x001FCE        9162007F                 r4 = r0 ASHIFT -1;
0x001FCF        01660003                 r4 = r4 + 3;
0x001FD0        D1270000                 r0 = M[r5 + 0];
0x001FD1        E1F0F62E                 call $cbuffer.calc_amount_space;
0x001FD2        2002006F                 Null = r0 - r4;
0x001FD3        DD500004                 if POS jump $M.sbcenc.frame_encode.enough_output_space;
0x001FD4        01200002                 r0 = Null + 2;
0x001FD5        D5270003                 M[r5 + 3] = r0;
0x001FD6        DDF00046                 jump $M.sbcenc.frame_encode.exit;

 <$M.sbcenc.frame_encode.enough_output_space>
0x001FD7        D1270001                 r0 = M[r5 + 1];
0x001FD8        1920149A                 M[$scratch.s] = r0 + Null;
0x001FD9        D1270002                 r0 = M[r5 + 2];
0x001FDA        1920149B                 M[$scratch.s1] = r0 + Null;
0x001FDB        01200000                 r0 = Null + 0;
0x001FDC        1920149C                 M[$scratch.s2] = r0 + Null;
0x001FDD        E1F00040                 call $M.sbcenc.frame_encode.channel_processing;
0x001FDE        D1270001                 r0 = M[r5 + 1];
0x001FDF        1920149B                 M[$scratch.s1] = r0 + Null;
0x001FE0        D1270002                 r0 = M[r5 + 2];
0x001FE1        1920149A                 M[$scratch.s] = r0 + Null;
0x001FE2        E420002F                 r0 = Null + 1;
0x001FE3        1920149C                 M[$scratch.s2] = r0 + Null;
0x001FE4        E1F00039                 call $M.sbcenc.frame_encode.channel_processing;
0x001FE5        D12B001F                 r0 = M[r9 + 31];
0x001FE6        E402003F                 Null = r0 - 1;
0x001FE7        DD100017                 if NE jump $M.sbcenc.frame_encode.dont_merge_left_and_right;
0x001FE8        D1270001                 r0 = M[r5 + 1];
0x001FE9        DD000015                 if EQ jump $M.sbcenc.frame_encode.dont_merge_left_and_right;
0x001FEA        D1270002                 r0 = M[r5 + 2];
0x001FEB        DD000013                 if EQ jump $M.sbcenc.frame_encode.dont_merge_left_and_right;
0x001FEC        D14B0014                 r2 = M[r9 + 20];
0x001FED        5000004F                 I0 = Null + r2;
0x001FEE        D1CB0021                 r10 = M[r9 + 33];
0x001FEF        581000CF                 I1 = I0 + r10;
0x001FF0        5820000F                 I2 = I0 + Null;
0x001FF1        D14B001D                 r2 = M[r9 + 29];

 <$M.sbcenc.frame_encode.mono_merge_block_loop>
0x001FF2        E5F00007                 do $M.sbcenc.frame_encode.mono_merge_subband_loop;
0x001FF3        03002100                 Null = Null + Null, r0 = M[I0,1];
0x001FF4        95224000                 r0 = r0 * 0.5 (frac);
0x001FF5        03003500                 Null = Null + Null, r1 = M[I1,1];
0x001FF6        95334000                 r1 = r1 * 0.5 (frac);
0x001FF7        03230000                 r0 = r0 + r1;
0x001FF8        0300A900                 Null = Null + Null, M[I2,1] = r0;

 <$M.sbcenc.frame_encode.mono_merge_subband_loop>
0x001FF9        D1CB0021                 r10 = M[r9 + 33];
0x001FFA        5B0C0000                 I0 = I0 + r10;
0x001FFB        5B1C0000                 I1 = I1 + r10;
0x001FFC        E444003F                 r2 = r2 - 1;
0x001FFD        DD10FFF5                 if NE jump $M.sbcenc.frame_encode.mono_merge_block_loop;

 <$M.sbcenc.frame_encode.dont_merge_left_and_right>
0x001FFE        E1F0059A                 call $sbc.calc_scale_factors;
0x001FFF        D12B001E                 r0 = M[r9 + 30];
0x002000        21020003                 Null = r0 - 3;
0x002001        E100019A                 if EQ call $sbcenc.joint_stereo_encode;
0x002002        09700095                 r5 = Null + M[$sbcenc.codec_struc];
0x002003        D1270000                 r0 = M[r5 + 0];
0x002004        E1F0F64B                 call $cbuffer.get_write_address_and_size;
0x002005        5000002F                 I0 = Null + r0;
0x002006        50C0003F                 L0 = Null + r1;
0x002007        09700095                 r5 = Null + M[$sbcenc.codec_struc];
0x002008        D13B0007                 r1 = M[r9 + 7];
0x002009        D1230000                 r0 = M[r1 + 0];
0x00200A        E0020001                 if NE call r0;
0x00200B        E1F002B1                 call $sbcenc.write_frame_header;
0x00200C        E1F006F9                 call $sbcenc.write_scale_factors;
0x00200D        E1F0FD00                 call $sbc.calc_bit_allocation;
0x00200E        E1F004CA                 call $sbcenc.quantize_samples;
0x00200F        E1F0064B                 call $sbcenc.write_audio_samples;
0x002010        E1F0070B                 call $sbcenc.write_padding_bits;
0x002011        D13B0007                 r1 = M[r9 + 7];
0x002012        09700095                 r5 = Null + M[$sbcenc.codec_struc];
0x002013        D1230003                 r0 = M[r1 + 3];
0x002014        E0020001                 if NE call r0;
0x002015        09700095                 r5 = Null + M[$sbcenc.codec_struc];
0x002016        4430000F                 r1 = Null + I0;
0x002017        D1270000                 r0 = M[r5 + 0];
0x002018        E1F0F64A                 call $cbuffer.set_write_address;
0x002019        51C00000                 L0 = Null + 0;
0x00201A        01200000                 r0 = Null + 0;
0x00201B        D5270003                 M[r5 + 3] = r0;

 <$M.sbcenc.frame_encode.exit>
0x00201C        DDF0F651                 jump $pop_rLink_and_rts;

 <$M.sbcenc.frame_encode.channel_processing>
0x00201D        F3D00000                 push rLink;
0x00201E        0920149A                 r0 = Null + M[$scratch.s];
0x00201F        DD000024                 if EQ jump $M.sbcenc.frame_encode.dont_repeat_cur_channel;
0x002020        E1F0F62A                 call $cbuffer.get_read_address_and_size;
0x002021        5010002F                 I1 = Null + r0;
0x002022        50D0003F                 L1 = Null + r1;
0x002023        01800000                 r6 = Null + 0;
0x002024        D13B0021                 r1 = M[r9 + 33];
0x002025        D12B001F                 r0 = M[r9 + 31];
0x002026        21020002                 Null = r0 - 2;
0x002027        00830000                 if EQ r6 = r1 + Null;
0x002028        0920149B                 r0 = Null + M[$scratch.s1];
0x002029        00830001                 if NE r6 = r1 + Null;
0x00202A        0970149C                 r5 = Null + M[$scratch.s2];
0x00202B        E1F00104                 call $sbcenc.analysis_subband_filter;
0x00202C        09700095                 r5 = Null + M[$sbcenc.codec_struc];
0x00202D        4430001F                 r1 = Null + I1;
0x00202E        0920149A                 r0 = Null + M[$scratch.s];
0x00202F        E1F0F62F                 call $cbuffer.set_read_address;
0x002030        51D00000                 L1 = Null + 0;
0x002031        D12B001F                 r0 = M[r9 + 31];
0x002032        E402003F                 Null = r0 - 1;
0x002033        DD000010                 if EQ jump $M.sbcenc.frame_encode.dont_repeat_cur_channel;
0x002034        0920149B                 r0 = Null + M[$scratch.s1];
0x002035        DD10000E                 if NE jump $M.sbcenc.frame_encode.dont_repeat_cur_channel;
0x002036        D16B0021                 r4 = M[r9 + 33];
0x002037        D15B0014                 r3 = M[r9 + 20];
0x002038        5010005F                 I1 = Null + r3;
0x002039        5821006F                 I2 = I1 + r4;
0x00203A        D15B001D                 r3 = M[r9 + 29];

 <$M.sbcenc.frame_encode.repeat_cur_channel_block_loop>
0x00203B        D1CB0021                 r10 = M[r9 + 33];
0x00203C        E5F00003                 do $M.sbcenc.frame_encode.repeat_cur_channel_subband_loop;
0x00203D        03002500                 Null = Null + Null, r0 = M[I1,1];
0x00203E        0300A900                 Null = Null + Null, M[I2,1] = r0;

 <$M.sbcenc.frame_encode.repeat_cur_channel_subband_loop>
0x00203F        5B160000                 I1 = I1 + r4;
0x002040        5B260000                 I2 = I2 + r4;
0x002041        E455003F                 r3 = r3 - 1;
0x002042        DD10FFF9                 if NE jump $M.sbcenc.frame_encode.repeat_cur_channel_block_loop;

 <$M.sbcenc.frame_encode.dont_repeat_cur_channel>
0x002043        DDF0F62A                 jump $pop_rLink_and_rts;

 <$sbcdec.frame_decode>
0x002044        F3D00000                 push rLink;
0x002045        1970008F                 M[$sbcdec.codec_struc] = r5 + Null;
0x002046        D1B70005                 r9 = M[r5 + 5];

 <$M.sbcdec.frame_decode.reattempt_decode>
0x002047        0970008F                 r5 = Null + M[$sbcdec.codec_struc];
0x002048        D1270000                 r0 = M[r5 + 0];
0x002049        E1F0F601                 call $cbuffer.get_read_address_and_size;
0x00204A        5000002F                 I0 = Null + r0;
0x00204B        50C0003F                 L0 = Null + r1;
0x00204C        D1270000                 r0 = M[r5 + 0];
0x00204D        E1F0F5C2                 call $cbuffer.calc_amount_data;
0x00204E        00C2002F                 r10 = r0 + r0;
0x00204F        21CC0002                 r10 = r10 - 2;
0x002050        DDD0001D                 if LE jump $M.sbcdec.frame_decode.buffer_underflow;
0x002051        006C000F                 r4 = r10 + Null;
0x002052        E1F00618                 call $sbcdec.find_sync;
0x002053        21080063                 Null = r6 - 99;
0x002054        DD000019                 if EQ jump $M.sbcdec.frame_decode.buffer_underflow;
0x002055        236C0000                 r4 = r4 - r10;
0x002056        D1270003                 r0 = M[r5 + 3];
0x002057        21020002                 Null = r0 - 2;
0x002058        DD00000F                 if EQ jump $M.sbcdec.frame_decode.enough_output_space_right;
0x002059        D1270001                 r0 = M[r5 + 1];
0x00205A        DD000005                 if EQ jump $M.sbcdec.frame_decode.enough_output_space_left;
0x00205B        E1F0F5A4                 call $cbuffer.calc_amount_space;
0x00205C        21020080                 Null = r0 - 128;
0x00205D        DD500002                 if POS jump $M.sbcdec.frame_decode.enough_output_space_left;
0x00205E        DDF00006                 jump $M.sbcdec.frame_decode.not_enough_data_exit;

 <$M.sbcdec.frame_decode.enough_output_space_left>
0x00205F        D1270002                 r0 = M[r5 + 2];
0x002060        DD000007                 if EQ jump $M.sbcdec.frame_decode.enough_output_space_right;
0x002061        E1F0F59E                 call $cbuffer.calc_amount_space;
0x002062        21020080                 Null = r0 - 128;
0x002063        DD500004                 if POS jump $M.sbcdec.frame_decode.enough_output_space_right;

 <$M.sbcdec.frame_decode.not_enough_data_exit>
0x002064        01200002                 r0 = Null + 2;
0x002065        D5270003                 M[r5 + 3] = r0;
0x002066        DDF00058                 jump $M.sbcdec.frame_decode.exit;

 <$M.sbcdec.frame_decode.enough_output_space_right>
0x002067        D1270000                 r0 = M[r5 + 0];
0x002068        E1F0F5A7                 call $cbuffer.calc_amount_data;
0x002069        03220000                 r0 = r0 + r0;
0x00206A        23260000                 r0 = r0 - r4;
0x00206B        21020016                 Null = r0 - 22;
0x00206C        DD500008                 if POS jump $M.sbcdec.frame_decode.no_buffer_underflow;

 <$M.sbcdec.frame_decode.buffer_underflow>
0x00206D        0970008F                 r5 = Null + M[$sbcdec.codec_struc];
0x00206E        E420002F                 r0 = Null + 1;
0x00206F        D5270003                 M[r5 + 3] = r0;
0x002070        D1270000                 r0 = M[r5 + 0];
0x002071        4430000F                 r1 = Null + I0;
0x002072        E1F0F5EC                 call $cbuffer.set_read_address;
0x002073        DDF0004B                 jump $M.sbcdec.frame_decode.exit;

 <$M.sbcdec.frame_decode.no_buffer_underflow>
0x002074        D52B0037                 M[r9 + 55] = r0;
0x002075        E1F0028E                 call $sbcdec.read_frame_header;
0x002076        D12B0039                 r0 = M[r9 + 57];
0x002077        D13B0037                 r1 = M[r9 + 55];
0x002078        2002003F                 Null = r0 - r1;
0x002079        DDD00004                 if LE jump $M.sbcdec.frame_decode.enough_frame_data;
0x00207A        5802000F                 I0 = I2 + Null;
0x00207B        D58B003B                 M[r9 + 59] = r6;
0x00207C        DDF0FFF1                 jump $M.sbcdec.frame_decode.buffer_underflow;

 <$M.sbcdec.frame_decode.enough_frame_data>
0x00207D        D10B0036                 Null = M[r9 + 54];
0x00207E        DD100007                 if NE jump $M.sbcdec.frame_decode.crc_fail_or_corrupt;
0x00207F        E1F00624                 call $sbcdec.read_scale_factors;
0x002080        D12B0023                 r0 = M[r9 + 35];
0x002081        D13B0024                 r1 = M[r9 + 36];
0x002082        23230000                 r0 = r0 - r1;
0x002083        812200FF                 r0 = r0 AND 0xff;
0x002084        DD00000B                 if EQ jump $M.sbcdec.frame_decode.crc_correct;

 <$M.sbcdec.frame_decode.crc_fail_or_corrupt>
0x002085        0970008F                 r5 = Null + M[$sbcdec.codec_struc];
0x002086        4430000F                 r1 = Null + I0;
0x002087        D1270000                 r0 = M[r5 + 0];
0x002088        E1F0F5D6                 call $cbuffer.set_read_address;
0x002089        51C00000                 L0 = Null + 0;
0x00208A        D12B003A                 r0 = M[r9 + 58];
0x00208B        DD00FFBC                 if EQ jump $M.sbcdec.frame_decode.reattempt_decode;
0x00208C        01200005                 r0 = Null + 5;
0x00208D        D5270003                 M[r5 + 3] = r0;
0x00208E        DDF00030                 jump $M.sbcdec.frame_decode.exit;

 <$M.sbcdec.frame_decode.crc_correct>
0x00208F        E1F0FC7E                 call $sbc.calc_bit_allocation;
0x002090        E1F005A5                 call $sbcdec.read_audio_samples;
0x002091        E1F006B4                 call $sbcdec.byte_align;
0x002092        0970008F                 r5 = Null + M[$sbcdec.codec_struc];
0x002093        4430000F                 r1 = Null + I0;
0x002094        D1270000                 r0 = M[r5 + 0];
0x002095        E1F0F5C9                 call $cbuffer.set_read_address;
0x002096        51C00000                 L0 = Null + 0;
0x002097        D1270003                 r0 = M[r5 + 3];
0x002098        21020000                 Null = r0 - 0;
0x002099        DD10001F                 if NE jump $M.sbcdec.frame_decode.all_done;
0x00209A        E1F003C7                 call $sbcdec.sample_reconstruction;
0x00209B        D12B001E                 r0 = M[r9 + 30];
0x00209C        21020003                 Null = r0 - 3;
0x00209D        E10004B2                 if EQ call $sbcdec.joint_stereo_decode;
0x00209E        0970008F                 r5 = Null + M[$sbcdec.codec_struc];
0x00209F        D1270001                 r0 = M[r5 + 1];
0x0020A0        DD00000B                 if EQ jump $M.sbcdec.frame_decode.no_left_buffer;
0x0020A1        E1F0F5AE                 call $cbuffer.get_write_address_and_size;
0x0020A2        5010002F                 I1 = Null + r0;
0x0020A3        50D0003F                 L1 = Null + r1;
0x0020A4        01700000                 r5 = Null + 0;
0x0020A5        E1F001B8                 call $sbcdec.synthesis_subband_filter;
0x0020A6        0970008F                 r5 = Null + M[$sbcdec.codec_struc];
0x0020A7        4430001F                 r1 = Null + I1;
0x0020A8        D1270001                 r0 = M[r5 + 1];
0x0020A9        E1F0F5B9                 call $cbuffer.set_write_address;
0x0020AA        51D00000                 L1 = Null + 0;

 <$M.sbcdec.frame_decode.no_left_buffer>
0x0020AB        0970008F                 r5 = Null + M[$sbcdec.codec_struc];
0x0020AC        D1270002                 r0 = M[r5 + 2];
0x0020AD        DD00000B                 if EQ jump $M.sbcdec.frame_decode.all_done;
0x0020AE        E1F0F5A1                 call $cbuffer.get_write_address_and_size;
0x0020AF        5010002F                 I1 = Null + r0;
0x0020B0        50D0003F                 L1 = Null + r1;
0x0020B1        E470002F                 r5 = Null + 1;
0x0020B2        E1F001AB                 call $sbcdec.synthesis_subband_filter;
0x0020B3        0970008F                 r5 = Null + M[$sbcdec.codec_struc];
0x0020B4        4430001F                 r1 = Null + I1;
0x0020B5        D1270002                 r0 = M[r5 + 2];
0x0020B6        E1F0F5AC                 call $cbuffer.set_write_address;
0x0020B7        51D00000                 L1 = Null + 0;

 <$M.sbcdec.frame_decode.all_done>
0x0020B8        01200000                 r0 = Null + 0;
0x0020B9        D5270003                 M[r5 + 3] = r0;
0x0020BA        D12B001D                 r0 = M[r9 + 29];
0x0020BB        D13B0021                 r1 = M[r9 + 33];
0x0020BC        9B230000                 r0 = r0 * r1 (int);
0x0020BD        D5270004                 M[r5 + 4] = r0;

 <$M.sbcdec.frame_decode.exit>
0x0020BE        51C00000                 L0 = Null + 0;
0x0020BF        DDF0F5AE                 jump $pop_rLink_and_rts;

 <$codec.av_decode>
0x0020C0        F3D00000                 push rLink;
0x0020C1        19702C9B                 M[$M.codec_av_decode.data_ptr] = r5 + Null;
0x0020C2        E420002F                 r0 = Null + 1;
0x0020C3        D5270006                 M[r5 + 6] = r0;
0x0020C4        0980FE71                 r6 = Null + M[0xfffe71];
0x0020C5        D1270013                 r0 = M[r5 + 19];
0x0020C6        D5870013                 M[r5 + 19] = r6;
0x0020C7        23820000                 r6 = r6 - r0;
0x0020C8        20800084                 if NEG r6 = Null - r6;
0x0020C9        D1270003                 r0 = M[r5 + 3];
0x0020CA        E1F0F585                 call $cbuffer.get_write_address_and_size;
0x0020CB        D137000F                 r1 = M[r5 + 15];
0x0020CC        D527000F                 M[r5 + 15] = r0;
0x0020CD        FD00007F 0110FFFF        rMAC = Null + 8388607;
0x0020CF        D1570010                 r3 = M[r5 + 16];
0x0020D0        0045008F                 r2 = r3 + r6;
0x0020D1        00410006                 if V r2 = rMAC + Null;
0x0020D2        2093002F                 r7 = r1 - r0;
0x0020D3        00400001                 if NE r2 = Null + Null;
0x0020D4        D5470010                 M[r5 + 16] = r2;
0x0020D5        D107000D                 Null = M[r5 + 13];
0x0020D6        DD000007                 if EQ jump $M.codec_av_decode.no_pause_handling;
0x0020D7        FD000002 210449F0        Null = r2 - 150000;
0x0020D9        DD400004                 if NEG jump $M.codec_av_decode.no_pause_handling;
0x0020DA        FD000002 210549F0        Null = r3 - 150000;
0x0020DC        DD40003A                 if NEG jump $M.codec_av_decode.cleare_buffers;

 <$M.codec_av_decode.no_pause_handling>
0x0020DD        D1070011                 Null = M[r5 + 17];
0x0020DE        DD100023                 if NE jump $M.codec_av_decode.decoding_proc;

 <$M.codec_av_decode.process_stalled>
0x0020DF        E420002F                 r0 = Null + 1;
0x0020E0        D1370012                 r1 = M[r5 + 18];
0x0020E1        0004000F                 Null = r2 + Null;
0x0020E2        00320000                 if EQ r1 = r0 + Null;
0x0020E3        D5370012                 M[r5 + 18] = r1;
0x0020E4        DD000013                 if EQ jump $M.codec_av_decode.check_buf_level;
0x0020E5        FD000001 21041170        Null = r2 - 70000;
0x0020E7        DD400005                 if NEG jump $M.codec_av_decode.check_stall_time;
0x0020E8        FD000001 21051170        Null = r3 - 70000;
0x0020EA        DD400014                 if NEG jump $M.codec_av_decode.switchto_decode;
0x0020EB        DDF0000C                 jump $M.codec_av_decode.check_buf_level;

 <$M.codec_av_decode.check_stall_time>
0x0020EC        D1570014                 r3 = M[r5 + 20];
0x0020ED        DD100005                 if NE jump $M.codec_av_decode.update_stall_timer;
0x0020EE        0009000F                 Null = r7 + Null;
0x0020EF        E4550021                 if NE r3 = r3 + 1;
0x0020F0        D5570014                 M[r5 + 20] = r3;
0x0020F1        DDF00006                 jump $M.codec_av_decode.check_buf_level;

 <$M.codec_av_decode.update_stall_timer>
0x0020F2        0045008F                 r2 = r3 + r6;
0x0020F3        D5470014                 M[r5 + 20] = r2;
0x0020F4        FD000002 210422E0        Null = r2 - 140000;
0x0020F6        DD500008                 if POS jump $M.codec_av_decode.switchto_decode;

 <$M.codec_av_decode.check_buf_level>
0x0020F7        D1270003                 r0 = M[r5 + 3];
0x0020F8        D1620000                 r4 = M[r0 + 0];
0x0020F9        E1F0F516                 call $cbuffer.calc_amount_data;
0x0020FA        D147000B                 r2 = M[r5 + 11];
0x0020FB        97460000                 r2 = r2 * r4 (frac);
0x0020FC        2002004F                 Null = r0 - r2;
0x0020FD        DD400031                 if NEG jump $M.codec_av_decode.end;

 <$M.codec_av_decode.switchto_decode>
0x0020FE        D5070012                 M[r5 + 18] = Null;
0x0020FF        E430002F                 r1 = Null + 1;
0x002100        D5370011                 M[r5 + 17] = r1;

 <$M.codec_av_decode.decoding_proc>
0x002101        D5070014                 M[r5 + 20] = Null;
0x002102        01200000                 r0 = Null + 0;
0x002103        D5270006                 M[r5 + 6] = r0;
0x002104        D1270000                 r0 = M[r5 + 0];
0x002105        01770003                 r5 = r5 + 3;
0x002106        E002000F                 call r0;
0x002107        09702C9B                 r5 = Null + M[$M.codec_av_decode.data_ptr];
0x002108        D1370010                 r1 = M[r5 + 16];
0x002109        D1270006                 r0 = M[r5 + 6];
0x00210A        21020000                 Null = r0 - 0;
0x00210B        DD100003                 if NE jump $M.codec_av_decode.check_not_enough_input_data;
0x00210C        00300000                 if EQ r1 = Null + Null;
0x00210D        D5370010                 M[r5 + 16] = r1;

 <$M.codec_av_decode.check_not_enough_input_data>
0x00210E        D1270006                 r0 = M[r5 + 6];
0x00210F        E402003F                 Null = r0 - 1;
0x002110        DD10001E                 if NE jump $M.codec_av_decode.end;
0x002111        D1370010                 r1 = M[r5 + 16];
0x002112        D127000A                 r0 = M[r5 + 10];
0x002113        2003002F                 Null = r1 - r0;
0x002114        DD500019                 if POS jump $M.codec_av_decode.switchto_stall;
0x002115        DDF00019                 jump $M.codec_av_decode.end;

 <$M.codec_av_decode.cleare_buffers>
0x002116        D5070014                 M[r5 + 20] = Null;
0x002117        E1F0F517                 call $block_interrupts;
0x002118        D1370003                 r1 = M[r5 + 3];
0x002119        D1230002                 r0 = M[r1 + 2];
0x00211A        D5230001                 M[r1 + 1] = r0;
0x00211B        D527000F                 M[r5 + 15] = r0;
0x00211C        D1370004                 r1 = M[r5 + 4];
0x00211D        D1230001                 r0 = M[r1 + 1];
0x00211E        D5230002                 M[r1 + 2] = r0;
0x00211F        D1370005                 r1 = M[r5 + 5];
0x002120        D1230001                 r0 = M[r1 + 1];
0x002121        D5230002                 M[r1 + 2] = r0;
0x002122        01770003                 r5 = r5 + 3;
0x002123        D127FFFE                 r0 = M[r5 + -2];
0x002124        E0020001                 if NE call r0;
0x002125        09702C9B                 r5 = Null + M[$M.codec_av_decode.data_ptr];
0x002126        D127000E                 r0 = M[r5 + 14];
0x002127        E0020001                 if NE call r0;
0x002128        09702C9B                 r5 = Null + M[$M.codec_av_decode.data_ptr];
0x002129        E420002F                 r0 = Null + 1;
0x00212A        FD0000FF 19205C9B        M[$master_reset_needed] = r0 + Null;
0x00212C        E1F0F4EB                 call $interrupt.unblock;

 <$M.codec_av_decode.switchto_stall>
0x00212D        D5070011                 M[r5 + 17] = Null;

 <$M.codec_av_decode.end>
0x00212E        DDF0F53F                 jump $pop_rLink_and_rts;

 <$sbcenc.analysis_subband_filter>
0x00212F        F3D00000                 push rLink;
0x002130        D15B0021                 r3 = M[r9 + 33];
0x002131        5085005F                 M0 = r3 + r3;
0x002132        51900001                 M1 = Null + 1;
0x002133        7CA9008F                 M2 = M1 - M0;
0x002134        99250008                 r0 = r3 * 8 (int);
0x002135        78B9002F                 M3 = M1 - r0;
0x002136        9825007F                 r0 = r3 * r5 (int);
0x002137        0008000F                 Null = r6 + Null;
0x002138        00200000                 if EQ r0 = Null + Null;
0x002139        D16B0014                 r4 = M[r9 + 20];
0x00213A        5022006F                 I2 = r0 + r4;
0x00213B        016B0011                 r4 = r9 + 17;
0x00213C        D027006F                 r0 = M[r5 + r4];
0x00213D        5060002F                 I6 = Null + r0;
0x00213E        D16B001D                 r4 = M[r9 + 29];
0x00213F        21050004                 Null = r3 - 4;
0x002140        DD000029                 if EQ jump $M.sbcenc.analysis_subband_filter.M_equals_4;
0x002141        51E00050                 L4 = Null + 80;
0x002142        0140FFFC                 r2 = Null + -4;

 <$M.sbcenc.analysis_subband_filter.block_loop_M8>
0x002143        D12B0015                 r0 = M[r9 + 21];
0x002144        5000002F                 I0 = Null + r0;
0x002145        D12B0001                 r0 = M[r9 + 1];
0x002146        5050002F                 I5 = Null + r0;
0x002147        5846000F                 I4 = I6 + Null;
0x002148        03002500                 Null = Null + Null, r0 = M[I1,1];
0x002149        93243500                 r0 = r0 ASHIFT r2, r1 = M[I1,1];
0x00214A        933425A3                 r1 = r1 ASHIFT r2, r0 = M[I1,1], M[I4,-1] = r0;
0x00214B        932435B3                 r0 = r0 ASHIFT r2, r1 = M[I1,1], M[I4,-1] = r1;
0x00214C        933425A3                 r1 = r1 ASHIFT r2, r0 = M[I1,1], M[I4,-1] = r0;
0x00214D        932435B3                 r0 = r0 ASHIFT r2, r1 = M[I1,1], M[I4,-1] = r1;
0x00214E        933425A3                 r1 = r1 ASHIFT r2, r0 = M[I1,1], M[I4,-1] = r0;
0x00214F        932435B3                 r0 = r0 ASHIFT r2, r1 = M[I1,1], M[I4,-1] = r1;
0x002150        933400A3                 r1 = r1 ASHIFT r2, M[I4,-1] = r0;
0x002151        030000B3                 Null = Null + Null, M[I4,-1] = r1;
0x002152        E1F00037                 call $M.sbcenc.analysis_subband_filter.share_code;
0x002153        E5F00012                 do $M.sbcenc.analysis_subband_filter.matrix_loop_M8;
0x002154        CF232D35                 rMAC = r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002155        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002156        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002157        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002158        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002159        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00215A        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00215B        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00215C        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00215D        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00215E        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00215F        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002160        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002161        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002162        AE232E35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,M2], r1 = M[I5,M1];
0x002163        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002164        03009900                 Null = Null + Null, M[I2,1] = rMAC;

 <$M.sbcenc.analysis_subband_filter.matrix_loop_M8>
0x002165        5B280000                 I2 = I2 + r6;
0x002166        E466003F                 r4 = r4 - 1;
0x002167        DD10FFDC                 if NE jump $M.sbcenc.analysis_subband_filter.block_loop_M8;
0x002168        DDF0001C                 jump $M.sbcenc.analysis_subband_filter.all_done;

 <$M.sbcenc.analysis_subband_filter.M_equals_4>
0x002169        51E00028                 L4 = Null + 40;
0x00216A        0140FFFD                 r2 = Null + -3;

 <$M.sbcenc.analysis_subband_filter.block_loop_M4>
0x00216B        D12B0016                 r0 = M[r9 + 22];
0x00216C        5000002F                 I0 = Null + r0;
0x00216D        D12B0002                 r0 = M[r9 + 2];
0x00216E        5050002F                 I5 = Null + r0;
0x00216F        5846000F                 I4 = I6 + Null;
0x002170        03002500                 Null = Null + Null, r0 = M[I1,1];
0x002171        93243500                 r0 = r0 ASHIFT r2, r1 = M[I1,1];
0x002172        933425A3                 r1 = r1 ASHIFT r2, r0 = M[I1,1], M[I4,-1] = r0;
0x002173        932435B3                 r0 = r0 ASHIFT r2, r1 = M[I1,1], M[I4,-1] = r1;
0x002174        933400A3                 r1 = r1 ASHIFT r2, M[I4,-1] = r0;
0x002175        030000B3                 Null = Null + Null, M[I4,-1] = r1;
0x002176        E1F00013                 call $M.sbcenc.analysis_subband_filter.share_code;
0x002177        E5F0000A                 do $M.sbcenc.analysis_subband_filter.matrix_loop_M4;
0x002178        CF232D35                 rMAC = r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002179        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00217A        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00217B        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00217C        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00217D        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x00217E        AE232E35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,M2], r1 = M[I5,M1];
0x00217F        AF232D35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I3,1], r1 = M[I5,1];
0x002180        03009900                 Null = Null + Null, M[I2,1] = rMAC;

 <$M.sbcenc.analysis_subband_filter.matrix_loop_M4>
0x002181        5B280000                 I2 = I2 + r6;
0x002182        E466003F                 r4 = r4 - 1;
0x002183        DD10FFE8                 if NE jump $M.sbcenc.analysis_subband_filter.block_loop_M4;

 <$M.sbcenc.analysis_subband_filter.all_done>
0x002184        4420006F                 r0 = Null + I6;
0x002185        016B0011                 r4 = r9 + 17;
0x002186        D427006F                 M[r5 + r4] = r0;
0x002187        51E00000                 L4 = Null + 0;
0x002188        DDF0F4E5                 jump $pop_rLink_and_rts;

 <$M.sbcenc.analysis_subband_filter.share_code>
0x002189        5864000F                 I6 = I4 + Null;
0x00218A        02000021                 Null = Null + Null, r0 = M[I4,M1];
0x00218B        D12B0005                 r0 = M[r9 + 5];
0x00218C        5030002F                 I3 = Null + r0;
0x00218D        44C0008F                 r10 = Null + M0;
0x00218E        02003020                 Null = Null + Null, r1 = M[I0,M0], r0 = M[I4,M0];
0x00218F        E5F00007                 do $M.sbcenc.analysis_subband_filter.window_calc_loop_M4;
0x002190        CE233020                 rMAC = r0 * r1 (SS), r1 = M[I0,M0], r0 = M[I4,M0];
0x002191        AE233020                 rMAC = rMAC + r0 * r1 (SS), r1 = M[I0,M0], r0 = M[I4,M0];
0x002192        AE233020                 rMAC = rMAC + r0 * r1 (SS), r1 = M[I0,M0], r0 = M[I4,M0];
0x002193        AE233323                 rMAC = rMAC + r0 * r1 (SS), r1 = M[I0,M3], r0 = M[I4,M3];
0x002194        AE233020                 rMAC = rMAC + r0 * r1 (SS), r1 = M[I0,M0], r0 = M[I4,M0];
0x002195        03009D00                 Null = Null + Null, M[I3,1] = rMAC;

 <$M.sbcenc.analysis_subband_filter.window_calc_loop_M4>
0x002196        D12B0005                 r0 = M[r9 + 5];
0x002197        5030002F                 I3 = Null + r0;
0x002198        00C5000F                 r10 = r3 + Null;
0x002199        03002D35                 Null = Null + Null, r0 = M[I3,1], r1 = M[I5,1];
0x00219A        DC0D000F                 rts;

 <$sbcenc.joint_stereo_encode>
0x00219B        D17B0021                 r5 = M[r9 + 33];
0x00219C        D18B001D                 r6 = M[r9 + 29];
0x00219D        98C7008F                 r10 = r5 * r6 (int);
0x00219E        D15B0014                 r3 = M[r9 + 20];
0x00219F        5000005F                 I0 = Null + r3;
0x0021A0        D15B0000                 r3 = M[r9 + 0];
0x0021A1        5020005F                 I2 = Null + r3;
0x0021A2        5810007F                 I1 = I0 + r5;
0x0021A3        5832007F                 I3 = I2 + r5;
0x0021A4        FD000040 01500000        r3 = Null + 4194304;
0x0021A6        FD00007F 0160FFFF        r4 = Null + 8388607;

 <$M.sbcenc.joint_stereo_encode.gen_ms_blkloop>
0x0021A8        00C7000F                 r10 = r5 + Null;
0x0021A9        E5F00006                 do $M.sbcenc.joint_stereo_encode.gen_ms_subbandloop;
0x0021AA        03002100                 Null = Null + Null, r0 = M[I0,1];
0x0021AB        CF253500                 rMAC = r0 * r3 (SS), r1 = M[I1,1];
0x0021AC        AC13005F                 rMAC = rMAC + r1 * r3 (SS);
0x0021AD        BF369900                 rMAC = rMAC - r1 * r4 (SS), M[I2,1] = rMAC;
0x0021AE        03009D00                 Null = Null + Null, M[I3,1] = rMAC;

 <$M.sbcenc.joint_stereo_encode.gen_ms_subbandloop>
0x0021AF        5B070000                 I0 = I0 + r5;
0x0021B0        5B170000                 I1 = I1 + r5;
0x0021B1        5B270000                 I2 = I2 + r5;
0x0021B2        5B370000                 I3 = I3 + r5;
0x0021B3        E488003F                 r6 = r6 - 1;
0x0021B4        DD10FFF4                 if NE jump $M.sbcenc.joint_stereo_encode.gen_ms_blkloop;
0x0021B5        D18B0019                 r6 = M[r9 + 25];
0x0021B6        5010008F                 I1 = Null + r6;
0x0021B7        D18B0000                 r6 = M[r9 + 0];
0x0021B8        5000008F                 I0 = Null + r6;
0x0021B9        5087007F                 M0 = r5 + r5;
0x0021BA        D18B001D                 r6 = M[r9 + 29];
0x0021BB        9827008F                 r0 = r5 * r6 (int);
0x0021BC        03220000                 r0 = r0 + r0;
0x0021BD        7090002F                 M1 = Null - r0;
0x0021BE        59990001                 M1 = M1 + 1;
0x0021BF        01400010                 r2 = Null + 16;
0x0021C0        99570002                 r3 = r5 * 2 (int);

 <$M.sbcenc.joint_stereo_encode.sf_subbandchloop>
0x0021C1        01300010                 r1 = Null + 16;
0x0021C2        E4C8003F                 r10 = r6 - 1;
0x0021C3        02002000                 Null = Null + Null, r0 = M[I0,M0];
0x0021C4        E5F00002                 do $M.sbcenc.joint_stereo_encode.sf_blkloop;
0x0021C5        DA322000                 r1 = BLKSIGNDET r0, r0 = M[I0,M0];

 <$M.sbcenc.joint_stereo_encode.sf_blkloop>
0x0021C6        DB320000                 r1 = BLKSIGNDET r0;
0x0021C7        2034213F                 r1 = r2 - r1, r0 = M[I0,M1];
0x0021C8        0300B500                 Null = Null + Null, M[I1,1] = r1;
0x0021C9        E455003F                 r3 = r3 - 1;
0x0021CA        DD10FFF7                 if NE jump $M.sbcenc.joint_stereo_encode.sf_subbandchloop;
0x0021CB        D15B0019                 r3 = M[r9 + 25];
0x0021CC        5000005F                 I0 = Null + r3;
0x0021CD        D15B0018                 r3 = M[r9 + 24];
0x0021CE        5020005F                 I2 = Null + r3;
0x0021CF        5840007F                 I4 = I0 + r5;
0x0021D0        5832007F                 I3 = I2 + r5;
0x0021D1        511B0026                 I1 = r9 + 38;
0x0021D2        E4C7003F                 r10 = r5 - 1;
0x0021D3        E450002F                 r3 = Null + 1;
0x0021D4        E5F00007                 do $M.sbcenc.joint_stereo_encode.join_loop;
0x0021D5        23442131                 r2 = r2 - r2, r0 = M[I0,1], r1 = M[I4,1];
0x0021D6        03233900                 r0 = r0 + r1, r1 = M[I2,1];
0x0021D7        23233D00                 r0 = r0 - r1, r1 = M[I3,1];
0x0021D8        23230000                 r0 = r0 - r1;
0x0021D9        00450004                 if NEG r2 = r3 + Null;
0x0021DA        0300C500                 Null = Null + Null, M[I1,1] = r2;

 <$M.sbcenc.joint_stereo_encode.join_loop>
0x0021DB        01400000                 r2 = Null + 0;
0x0021DC        0300C500                 Null = Null + Null, M[I1,1] = r2;
0x0021DD        514B0026                 I4 = r9 + 38;
0x0021DE        D12B0000                 r0 = M[r9 + 0];
0x0021DF        5000002F                 I0 = Null + r0;
0x0021E0        D12B0014                 r0 = M[r9 + 20];
0x0021E1        5050002F                 I5 = Null + r0;
0x0021E2        D12B0019                 r0 = M[r9 + 25];
0x0021E3        5020002F                 I2 = Null + r0;
0x0021E4        D12B0018                 r0 = M[r9 + 24];
0x0021E5        5030002F                 I3 = Null + r0;
0x0021E6        5080007F                 M0 = Null + r5;
0x0021E7        9827008F                 r0 = r5 * r6 (int);
0x0021E8        9922FFFE                 r0 = r0 * -2 (int);
0x0021E9        51920001                 M1 = r0 + 1;
0x0021EA        51A00001                 M2 = Null + 1;
0x0021EB        7FA80000                 M2 = M2 - M0;

 <$M.sbcenc.joint_stereo_encode.copy_subbandloop>
0x0021EC        03000021                 Null = Null + Null, r0 = M[I4,1];
0x0021ED        0002000F                 Null = r0 + Null;
0x0021EE        DD100008                 if NE jump $M.sbcenc.joint_stereo_encode.joint_subband;
0x0021EF        59000001                 I0 = I0 + 1;
0x0021F0        59550001                 I5 = I5 + 1;
0x0021F1        59220001                 I2 = I2 + 1;
0x0021F2        59330001                 I3 = I3 + 1;
0x0021F3        E477003F                 r5 = r5 - 1;
0x0021F4        DD10FFF8                 if NE jump $M.sbcenc.joint_stereo_encode.copy_subbandloop;
0x0021F5        DC0D000F                 rts;

 <$M.sbcenc.joint_stereo_encode.joint_subband>
0x0021F6        E4C8003F                 r10 = r6 - 1;
0x0021F7        02003000                 Null = Null + Null, r1 = M[I0,M0];
0x0021F8        E5F00003                 do $M.sbcenc.joint_stereo_encode.copy_blkloop;
0x0021F9        020020B4                 Null = Null + Null, r0 = M[I0,M0], M[I5,M0] = r1;
0x0021FA        020030A4                 Null = Null + Null, r1 = M[I0,M0], M[I5,M0] = r0;

 <$M.sbcenc.joint_stereo_encode.copy_blkloop>
0x0021FB        020020B4                 Null = Null + Null, r0 = M[I0,M0], M[I5,M0] = r1;
0x0021FC        020028A4                 Null = Null + Null, r0 = M[I2,M0], M[I5,M0] = r0;
0x0021FD        0200AC00                 Null = Null + Null, M[I3,M0] = r0;
0x0021FE        02002A00                 Null = Null + Null, r0 = M[I2,M2];
0x0021FF        0200AE00                 Null = Null + Null, M[I3,M2] = r0;
0x002200        5F090000                 I0 = I0 + M1;
0x002201        5F590000                 I5 = I5 + M1;
0x002202        E477003F                 r5 = r5 - 1;
0x002203        DD10FFE9                 if NE jump $M.sbcenc.joint_stereo_encode.copy_subbandloop;

 <$SendProcStart>
0x002204        F3D00000                 push rLink;
0x002205        01200008                 r0 = Null + 8;
0x002206        855200E1                 r3 = r0 OR 0xe1;
0x002207        19502C88                 M[$pblock_key] = r3 + Null;
0x002208        01401014                 r2 = Null + 4116;
0x002209        E1F0F28A                 call $message.send_short;
0x00220A        E1F00005                 call $ConfigureSystem;
0x00220B        01A02B02                 r8 = Null + 11010;
0x00220C        E1F0127C                 call $CVC.PowerUpReset;
0x00220D        E1F01320                 call $CVC.Start;
0x00220E        DDF0F45F                 jump $pop_rLink_and_rts;

 <$ConfigureSystem>
0x00220F        F3D00000                 push rLink;
0x002210        01802B35                 r6 = Null + 11061;
0x002211        D1280000                 r0 = M[r6 + 0];
0x002212        19202B0F                 M[0x2b0f] = r0 + Null;
0x002213        D1380001                 r1 = M[r6 + 1];
0x002214        0940148E                 r2 = Null + M[0x148e];
0x002215        23430000                 r2 = r2 - r1;
0x002216        1940286C                 M[0x286c] = r2 + Null;
0x002217        D1280002                 r0 = M[r6 + 2];
0x002218        FD0000FF 19205C87        M[$cvc_fftbins] = r0 + Null;
0x00221A        192012CD                 M[0x12cd] = r0 + Null;
0x00221B        192013C3                 M[0x13c3] = r0 + Null;
0x00221C        D1280003                 r0 = M[r6 + 3];
0x00221D        1920286B                 M[0x286b] = r0 + Null;
0x00221E        D1280005                 r0 = M[r6 + 5];
0x00221F        19202865                 M[$M.CVC.data.oms270snd_obj] = r0 + Null;
0x002220        D1280006                 r0 = M[r6 + 6];
0x002221        D1380007                 r1 = M[r6 + 7];
0x002222        D1480008                 r2 = M[r6 + 8];
0x002223        192012CE                 M[0x12ce] = r0 + Null;
0x002224        193012CF                 M[0x12cf] = r1 + Null;
0x002225        194012F5                 M[0x12f5] = r2 + Null;
0x002226        D1280009                 r0 = M[r6 + 9];
0x002227        FD0000FF 19205B37        M[0xff5b37] = r0 + Null;
0x002229        FD0000FF 19203FB6        M[0xff3fb6] = r0 + Null;
0x00222B        D128000A                 r0 = M[r6 + 10];
0x00222C        FD0000FF 19204003        M[0xff4003] = r0 + Null;
0x00222E        D128000D                 r0 = M[r6 + 13];
0x00222F        1920148B                 M[$M.CVC.data.AecAnalysisBank] = r0 + Null;
0x002230        FD0000FF 19204017        M[$M.CVC.data.SndSynthesisBank] = r0 + Null;
0x002232        DDF0F43B                 jump $pop_rLink_and_rts;

 <$SendProcRun>
0x002233        F3D00000                 push rLink;
0x002234        01202C49                 r0 = Null + 11337;
0x002235        E1F0F3DA                 call $cbuffer.calc_amount_data;
0x002236        21020078                 Null = r0 - 120;
0x002237        DD40F436                 if NEG jump $pop_rLink_and_rts;
0x002238        09001DDD                 Null = Null + M[$M.CVC_SYS.AlgReInit];
0x002239        E1100E6C                 if NE call $M.A2DP_LOW_LATENCY_1MIC.SystemReInitialize.func;
0x00223A        09501DDE                 r3 = Null + M[$M.CVC_SYS.FrameCounter];
0x00223B        E455002F                 r3 = r3 + 1;
0x00223C        19501DDE                 M[$M.CVC_SYS.FrameCounter] = r3 + Null;
0x00223D        09301DDC                 r1 = Null + M[$M.CVC_SYS.SysMode];
0x00223E        09401DE5                 r2 = Null + M[$M.CVC_SYS.VolState];
0x00223F        21030002                 Null = r1 - 2;
0x002240        00340000                 if EQ r1 = r2 + Null;
0x002241        01300002                 r1 = Null + 2;
0x002242        19301DDB                 M[$M.CVC_SYS.cur_mode] = r1 + Null;
0x002243        19301DDC                 M[$M.CVC_SYS.SysMode] = r1 + Null;
0x002244        01A02BAA                 r8 = Null + 11178;
0x002245        E1F0ECF4                 call $M.mips_profile.mainstart;
0x002246        01402C2B                 r2 = Null + 11307;
0x002247        E1F00DB9                 call $Security.ProcessFrame;
0x002248        01A02BAA                 r8 = Null + 11178;
0x002249        E1F0ECFD                 call $M.mips_profile.mainend;
0x00224A        D12A0006                 r0 = M[r8 + 6];
0x00224B        19202C87                 M[$M.ConfigureSystem.PeakMipsTxFunc] = r0 + Null;
0x00224C        0990266D                 r7 = Null + M[0x266d];
0x00224D        FD0000FF 01A05AC1        r8 = Null + -42303;
0x00224F        09301DDB                 r1 = Null + M[$M.CVC_SYS.cur_mode];
0x002250        21030002                 Null = r1 - 2;
0x002251        DD000003                 if EQ jump $M.ConfigureSystem.jp_sidetone_enabled;
0x002252        21030003                 Null = r1 - 3;
0x002253        00900001                 if NE r7 = Null + Null;

 <$M.ConfigureSystem.jp_sidetone_enabled>
0x002254        D59A0007                 M[r8 + 7] = r7;
0x002255        E1F0F0A6                 call $cbops.sidetone_filter_op.SetMode;
0x002256        DDF0F417                 jump $pop_rLink_and_rts;

 <$set_variant_from_vm>
0x002257        FD0000D0 01600000        r4 = Null + -3145728;
0x002259        09B01DDA                 r9 = Null + M[$M.CVC_SYS.cvc_bandwidth];
0x00225A        210B0003                 Null = r9 - 3;
0x00225B        00860000                 if EQ r6 = r4 + Null;
0x00225C        19802B0D                 M[0x2b0d] = r6 + Null;

 <$sbcdec.synthesis_subband_filter>
0x00225D        F3D00000                 push rLink;
0x00225E        D13B0021                 r1 = M[r9 + 33];
0x00225F        5080003F                 M0 = Null + r1;
0x002260        D14B001F                 r2 = M[r9 + 31];
0x002261        9854003F                 r3 = r2 * r1 (int);
0x002262        E455003F                 r3 = r3 - 1;
0x002263        9823007F                 r0 = r1 * r5 (int);
0x002264        E404003F                 Null = r2 - 1;
0x002265        00200000                 if EQ r0 = Null + Null;
0x002266        D16B0014                 r4 = M[r9 + 20];
0x002267        5022006F                 I2 = r0 + r4;
0x002268        012B003C                 r0 = r9 + 60;
0x002269        D027002F                 r0 = M[r5 + r0];
0x00226A        5000002F                 I0 = Null + r0;
0x00226B        D16B001D                 r4 = M[r9 + 29];
0x00226C        69080004                 Null = M0 - 4;
0x00226D        DD000020                 if EQ jump $M.sbcdec.synthesis_subband_filter.M_equals_4;
0x00226E        51C000A0                 L0 = Null + 160;

 <$M.sbcdec.synthesis_subband_filter.block_loop_M8>
0x00226F        D12B0015                 r0 = M[r9 + 21];
0x002270        5040002F                 I4 = Null + r0;
0x002271        D12B002E                 r0 = M[r9 + 46];
0x002272        5050002F                 I5 = Null + r0;
0x002273        51900001                 M1 = Null + 1;
0x002274        51A0FFF0                 M2 = Null + -16;
0x002275        51B0FFF9                 M3 = Null + -7;
0x002276        4CC8008F                 r10 = M0 + M0;
0x002277        03002935                 Null = Null + Null, r0 = M[I2,1], r1 = M[I5,1];
0x002278        E5F0000A                 do $M.sbcdec.synthesis_subband_filter.matrix_loop_M8;
0x002279        CF232935                 rMAC = r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x00227A        AF232935                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x00227B        AF232935                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x00227C        AF232935                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x00227D        AF232935                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x00227E        AF232935                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x00227F        AE232B35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,M3], r1 = M[I5,M1];
0x002280        AF232935                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x002281        03009100                 Null = Null + Null, M[I0,1] = rMAC;

 <$M.sbcdec.synthesis_subband_filter.matrix_loop_M8>
0x002282        02002200                 Null = Null + Null, r0 = M[I0,M2];
0x002283        5B250000                 I2 = I2 + r3;
0x002284        51900018                 M1 = Null + 24;
0x002285        51A0FFB9                 M2 = Null + -71;
0x002286        51B0FF69                 M3 = Null + -151;
0x002287        E1F00025                 call $M.sbcdec.synthesis_subband_filter.output_code;
0x002288        5190FFD0                 M1 = Null + -48;
0x002289        02002100                 Null = Null + Null, r0 = M[I0,M1];
0x00228A        E466003F                 r4 = r4 - 1;
0x00228B        DD10FFE4                 if NE jump $M.sbcdec.synthesis_subband_filter.block_loop_M8;
0x00228C        DDF0001B                 jump $M.sbcdec.synthesis_subband_filter.all_done;

 <$M.sbcdec.synthesis_subband_filter.M_equals_4>
0x00228D        51C00050                 L0 = Null + 80;

 <$M.sbcdec.synthesis_subband_filter.block_loop_M4>
0x00228E        D12B0016                 r0 = M[r9 + 22];
0x00228F        5040002F                 I4 = Null + r0;
0x002290        D12B002F                 r0 = M[r9 + 47];
0x002291        5050002F                 I5 = Null + r0;
0x002292        51900001                 M1 = Null + 1;
0x002293        51A0FFF8                 M2 = Null + -8;
0x002294        51B0FFFD                 M3 = Null + -3;
0x002295        4CC8008F                 r10 = M0 + M0;
0x002296        03002935                 Null = Null + Null, r0 = M[I2,1], r1 = M[I5,1];
0x002297        E5F00006                 do $M.sbcdec.synthesis_subband_filter.matrix_loop_M4;
0x002298        CF232935                 rMAC = r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x002299        AF232935                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x00229A        AE232B35                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,M3], r1 = M[I5,M1];
0x00229B        AF232935                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I2,1], r1 = M[I5,1];
0x00229C        03009100                 Null = Null + Null, M[I0,1] = rMAC;

 <$M.sbcdec.synthesis_subband_filter.matrix_loop_M4>
0x00229D        02002200                 Null = Null + Null, r0 = M[I0,M2];
0x00229E        5B250000                 I2 = I2 + r3;
0x00229F        5190000C                 M1 = Null + 12;
0x0022A0        51A0FFDD                 M2 = Null + -35;
0x0022A1        51B0FFB5                 M3 = Null + -75;
0x0022A2        E1F0000A                 call $M.sbcdec.synthesis_subband_filter.output_code;
0x0022A3        5190FFE8                 M1 = Null + -24;
0x0022A4        02002100                 Null = Null + Null, r0 = M[I0,M1];
0x0022A5        E466003F                 r4 = r4 - 1;
0x0022A6        DD10FFE8                 if NE jump $M.sbcdec.synthesis_subband_filter.block_loop_M4;

 <$M.sbcdec.synthesis_subband_filter.all_done>
0x0022A7        4420000F                 r0 = Null + I0;
0x0022A8        016B003C                 r4 = r9 + 60;
0x0022A9        D427006F                 M[r5 + r4] = r0;
0x0022AA        51C00000                 L0 = Null + 0;
0x0022AB        DDF0F3C2                 jump $pop_rLink_and_rts;

 <$M.sbcdec.synthesis_subband_filter.output_code>
0x0022AC        44C0008F                 r10 = Null + M0;
0x0022AD        02002130                 Null = Null + Null, r0 = M[I0,M1], r1 = M[I4,M0];
0x0022AE        E5F0000D                 do $M.sbcdec.synthesis_subband_filter.output_loop;
0x0022AF        CE232030                 rMAC = r0 * r1 (SS), r0 = M[I0,M0], r1 = M[I4,M0];
0x0022B0        AE232130                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I0,M1], r1 = M[I4,M0];
0x0022B1        AE232030                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I0,M0], r1 = M[I4,M0];
0x0022B2        AE232130                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I0,M1], r1 = M[I4,M0];
0x0022B3        AE232030                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I0,M0], r1 = M[I4,M0];
0x0022B4        AE232130                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I0,M1], r1 = M[I4,M0];
0x0022B5        AE232030                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I0,M0], r1 = M[I4,M0];
0x0022B6        AE232130                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I0,M1], r1 = M[I4,M0];
0x0022B7        AE232332                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I0,M3], r1 = M[I4,M2];
0x0022B8        AE232130                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I0,M1], r1 = M[I4,M0];
0x0022B9        9D41FFFC                 r2 = rMAC * -4 (int) (sat);
0x0022BA        0300C500                 Null = Null + Null, M[I1,1] = r2;

 <$M.sbcdec.synthesis_subband_filter.output_loop>
0x0022BB        DC0D000F                 rts;

 <$sbcenc.write_frame_header>
0x0022BC        F3D00000                 push rLink;
0x0022BD        0120000F                 r0 = Null + 15;
0x0022BE        D52B0024                 M[r9 + 36] = r0;
0x0022BF        01200008                 r0 = Null + 8;
0x0022C0        0130009C                 r1 = Null + 156;
0x0022C1        E1F0032B                 call $sbcenc.putbits;
0x0022C2        01200002                 r0 = Null + 2;
0x0022C3        D13B001C                 r1 = M[r9 + 28];
0x0022C4        E1F00328                 call $sbcenc.putbits;
0x0022C5        E1F00433                 call $sbc.crc_calc;
0x0022C6        01200002                 r0 = Null + 2;
0x0022C7        D13B001D                 r1 = M[r9 + 29];
0x0022C8        9133007E                 r1 = r1 ASHIFT -2;
0x0022C9        E433003F                 r1 = r1 - 1;
0x0022CA        E1F00322                 call $sbcenc.putbits;
0x0022CB        E1F0042D                 call $sbc.crc_calc;
0x0022CC        01200002                 r0 = Null + 2;
0x0022CD        D13B001E                 r1 = M[r9 + 30];
0x0022CE        E1F0031E                 call $sbcenc.putbits;
0x0022CF        E1F00429                 call $sbc.crc_calc;
0x0022D0        E420002F                 r0 = Null + 1;
0x0022D1        D13B0020                 r1 = M[r9 + 32];
0x0022D2        E1F0031A                 call $sbcenc.putbits;
0x0022D3        E1F00425                 call $sbc.crc_calc;
0x0022D4        E420002F                 r0 = Null + 1;
0x0022D5        D13B0021                 r1 = M[r9 + 33];
0x0022D6        9133007E                 r1 = r1 ASHIFT -2;
0x0022D7        E433003F                 r1 = r1 - 1;
0x0022D8        E1F00314                 call $sbcenc.putbits;
0x0022D9        E1F0041F                 call $sbc.crc_calc;
0x0022DA        01200008                 r0 = Null + 8;
0x0022DB        D13B0022                 r1 = M[r9 + 34];
0x0022DC        E1F00310                 call $sbcenc.putbits;
0x0022DD        E1F0041B                 call $sbc.crc_calc;
0x0022DE        D12B001E                 r0 = M[r9 + 30];
0x0022DF        21020003                 Null = r0 - 3;
0x0022E0        DD100008                 if NE jump $M.sbcenc.write_frame_header.crc_notjoint;
0x0022E1        D18B0021                 r6 = M[r9 + 33];
0x0022E2        511B0026                 I1 = r9 + 38;
0x0022E3        E420002F                 r0 = Null + 1;

 <$M.sbcenc.write_frame_header.jointcrc_loop>
0x0022E4        03003500                 Null = Null + Null, r1 = M[I1,1];
0x0022E5        E1F00413                 call $sbc.crc_calc;
0x0022E6        E488003F                 r6 = r6 - 1;
0x0022E7        DD10FFFD                 if NE jump $M.sbcenc.write_frame_header.jointcrc_loop;

 <$M.sbcenc.write_frame_header.crc_notjoint>
0x0022E8        D12B001F                 r0 = M[r9 + 31];
0x0022E9        D13B0021                 r1 = M[r9 + 33];
0x0022EA        9882003F                 r6 = r0 * r1 (int);
0x0022EB        D12B0018                 r0 = M[r9 + 24];
0x0022EC        5010002F                 I1 = Null + r0;
0x0022ED        01200004                 r0 = Null + 4;

 <$M.sbcenc.write_frame_header.scalefactor_loop>
0x0022EE        03003500                 Null = Null + Null, r1 = M[I1,1];
0x0022EF        E1F00409                 call $sbc.crc_calc;
0x0022F0        E488003F                 r6 = r6 - 1;
0x0022F1        DD10FFFD                 if NE jump $M.sbcenc.write_frame_header.scalefactor_loop;
0x0022F2        01200008                 r0 = Null + 8;
0x0022F3        D13B0024                 r1 = M[r9 + 36];
0x0022F4        813300FF                 r1 = r1 AND 0xff;
0x0022F5        E1F002F7                 call $sbcenc.putbits;
0x0022F6        D12B001E                 r0 = M[r9 + 30];
0x0022F7        21020003                 Null = r0 - 3;
0x0022F8        DD10000A                 if NE jump $M.sbcenc.write_frame_header.not_joint;
0x0022F9        511B0026                 I1 = r9 + 38;
0x0022FA        D1CB0021                 r10 = M[r9 + 33];
0x0022FB        E4CC003F                 r10 = r10 - 1;
0x0022FC        E420002F                 r0 = Null + 1;
0x0022FD        03003500                 Null = Null + Null, r1 = M[I1,1];
0x0022FE        E5F00003                 do $M.sbcenc.write_frame_header.joint_loop;
0x0022FF        E1F002ED                 call $sbcenc.putbits;
0x002300        03003500                 Null = Null + Null, r1 = M[I1,1];

 <$M.sbcenc.write_frame_header.joint_loop>
0x002301        E1F002EB                 call $sbcenc.putbits;

 <$M.sbcenc.write_frame_header.not_joint>
0x002302        DDF0F36B                 jump $pop_rLink_and_rts;

 <$sbcdec.read_frame_header>
0x002303        F3D00000                 push rLink;
0x002304        D50B0036                 M[r9 + 54] = Null;
0x002305        E1F0022F                 call $sbcdec.get1byte;
0x002306        0120000F                 r0 = Null + 15;
0x002307        D52B0024                 M[r9 + 36] = r0;
0x002308        E1F00230                 call $sbcdec.get2bits;
0x002309        E1F003EF                 call $sbc.crc_calc;
0x00230A        D53B001C                 M[r9 + 28] = r1;
0x00230B        E1F0022D                 call $sbcdec.get2bits;
0x00230C        E1F003EC                 call $sbc.crc_calc;
0x00230D        99330004                 r1 = r1 * 4 (int);
0x00230E        01330004                 r1 = r1 + 4;
0x00230F        D53B001D                 M[r9 + 29] = r1;
0x002310        E1F00228                 call $sbcdec.get2bits;
0x002311        E1F003E7                 call $sbc.crc_calc;
0x002312        E420002F                 r0 = Null + 1;
0x002313        D53B001E                 M[r9 + 30] = r1;
0x002314        00220021                 if NE r0 = r0 + r0;
0x002315        D52B001F                 M[r9 + 31] = r0;
0x002316        E1F00224                 call $sbcdec.get1bit;
0x002317        E1F003E1                 call $sbc.crc_calc;
0x002318        D53B0020                 M[r9 + 32] = r1;
0x002319        E1F00221                 call $sbcdec.get1bit;
0x00231A        E1F003DE                 call $sbc.crc_calc;
0x00231B        99330004                 r1 = r1 * 4 (int);
0x00231C        01330004                 r1 = r1 + 4;
0x00231D        D12B0021                 r0 = M[r9 + 33];
0x00231E        2003002F                 Null = r1 - r0;
0x00231F        E1100358                 if NE call $sbcdec.silence_decoder;
0x002320        D53B0021                 M[r9 + 33] = r1;
0x002321        E1F00213                 call $sbcdec.get1byte;
0x002322        E1F003D6                 call $sbc.crc_calc;
0x002323        D53B0022                 M[r9 + 34] = r1;
0x002324        D14B0021                 r2 = M[r9 + 33];
0x002325        99440010                 r2 = r2 * 16 (int);
0x002326        D12B001E                 r0 = M[r9 + 30];
0x002327        21020002                 Null = r0 - 2;
0x002328        00440045                 if POS r2 = r2 + r2;
0x002329        212400FA                 r0 = r2 - 250;
0x00232A        2044002C                 if GT r2 = r2 - r0;
0x00232B        2004003F                 Null = r2 - r1;
0x00232C        DD400017                 if NEG jump $M.sbcdec.read_frame_header.corrupt_frame_error;
0x00232D        21030002                 Null = r1 - 2;
0x00232E        DD400015                 if NEG jump $M.sbcdec.read_frame_header.corrupt_frame_error;
0x00232F        E1F00205                 call $sbcdec.get1byte;
0x002330        D53B0023                 M[r9 + 35] = r1;
0x002331        D13B001E                 r1 = M[r9 + 30];
0x002332        21030003                 Null = r1 - 3;
0x002333        DD10000D                 if NE jump $M.sbcdec.read_frame_header.not_jointstereo;
0x002334        D1AB0021                 r8 = M[r9 + 33];
0x002335        E4AA003F                 r8 = r8 - 1;
0x002336        511B0026                 I1 = r9 + 38;

 <$M.sbcdec.read_frame_header.join_loop>
0x002337        E1F00203                 call $sbcdec.get1bit;
0x002338        E1F003C0                 call $sbc.crc_calc;
0x002339        0300B500                 Null = Null + Null, M[I1,1] = r1;
0x00233A        E4AA003F                 r8 = r8 - 1;
0x00233B        DD10FFFC                 if NE jump $M.sbcdec.read_frame_header.join_loop;
0x00233C        01200000                 r0 = Null + 0;
0x00233D        0300A400                 Null = Null + Null, M[I1,0] = r0;
0x00233E        E1F001FC                 call $sbcdec.get1bit;
0x00233F        E1F003B9                 call $sbc.crc_calc;

 <$M.sbcdec.read_frame_header.not_jointstereo>
0x002340        E1F00307                 call $sbc.calc_frame_length;
0x002341        D52B0039                 M[r9 + 57] = r0;
0x002342        DDF0F32B                 jump $pop_rLink_and_rts;

 <$M.sbcdec.read_frame_header.corrupt_frame_error>
0x002343        E420002F                 r0 = Null + 1;
0x002344        D52B0036                 M[r9 + 54] = r0;
0x002345        DDF0F328                 jump $pop_rLink_and_rts;

 <$sbcenc.init_static_encoder>
0x002346        F3D00000                 push rLink;
0x002347        01B029C2                 r9 = Null + 10690;
0x002348        D5B70004                 M[r5 + 4] = r9;
0x002349        E1F0040C                 call $sbc.init_static_common;
0x00234A        01200EA1                 r0 = Null + 3745;
0x00234B        D52B0000                 M[r9 + 0] = r0;
0x00234C        FD0000FF 01203E01        r0 = Null + -49663;
0x00234E        D52B0001                 M[r9 + 1] = r0;
0x00234F        FD0000FF 012031C9        r0 = Null + -52791;
0x002351        D52B0002                 M[r9 + 2] = r0;
0x002352        FD0000FF 01203200        r0 = Null + -52736;
0x002354        D52B0003                 M[r9 + 3] = r0;
0x002355        FD0000FF 01203280        r0 = Null + -52608;
0x002357        D52B0004                 M[r9 + 4] = r0;
0x002358        0120143B                 r0 = Null + 5179;
0x002359        D52B0005                 M[r9 + 5] = r0;
0x00235A        FD0000FF 01203270        r0 = Null + -52624;
0x00235C        D52B0006                 M[r9 + 6] = r0;
0x00235D        01202C02                 r0 = Null + 11266;
0x00235E        D52B0007                 M[r9 + 7] = r0;
0x00235F        01200008                 r0 = Null + 8;
0x002360        D52B0008                 M[r9 + 8] = r0;
0x002361        01200010                 r0 = Null + 16;
0x002362        D52B0009                 M[r9 + 9] = r0;
0x002363        01200002                 r0 = Null + 2;
0x002364        D52B000A                 M[r9 + 10] = r0;
0x002365        01200003                 r0 = Null + 3;
0x002366        D52B000B                 M[r9 + 11] = r0;
0x002367        01200000                 r0 = Null + 0;
0x002368        D52B000C                 M[r9 + 12] = r0;
0x002369        01200037                 r0 = Null + 55;
0x00236A        D52B000D                 M[r9 + 13] = r0;
0x00236B        01200010                 r0 = Null + 16;
0x00236C        D52B0010                 M[r9 + 16] = r0;
0x00236D        E1F00343                 call $sbcenc.reset_encoder;
0x00236E        E1F003D2                 call $sbcenc.init_tables;
0x00236F        01302C3B                 r1 = Null + 11323;
0x002370        01407020                 r2 = Null + 28704;
0x002371        01502379                 r3 = Null + 9081;
0x002372        E1F01174                 call $message.register_handler;
0x002373        FD0000FF 01305C42        r1 = Null + -41918;
0x002375        01407021                 r2 = Null + 28705;
0x002376        0150237B                 r3 = Null + 9083;
0x002377        E1F0116F                 call $message.register_handler;
0x002378        DDF0F2F5                 jump $pop_rLink_and_rts;

 <$sbcenc.set_bitpool_handler>
0x002379        D53B000D                 M[r9 + 13] = r1;
0x00237A        DC0D000F                 rts;

 <$sbcenc.set_encoder_params_handler>
0x00237B        8D230078                 r0 = r1 LSHIFT -8;
0x00237C        81220001                 r0 = r0 AND 0x1;
0x00237D        D52B000E                 M[r9 + 14] = r0;
0x00237E        8D23007A                 r0 = r1 LSHIFT -6;
0x00237F        81220003                 r0 = r0 AND 0x3;
0x002380        D52B000A                 M[r9 + 10] = r0;
0x002381        8D23007C                 r0 = r1 LSHIFT -4;
0x002382        81220003                 r0 = r0 AND 0x3;
0x002383        E422002F                 r0 = r0 + 1;
0x002384        8D220002                 r0 = r0 LSHIFT 2;
0x002385        D52B0009                 M[r9 + 9] = r0;
0x002386        8D23007E                 r0 = r1 LSHIFT -2;
0x002387        81220003                 r0 = r0 AND 0x3;
0x002388        D52B000B                 M[r9 + 11] = r0;
0x002389        8D23007F                 r0 = r1 LSHIFT -1;
0x00238A        81220001                 r0 = r0 AND 0x1;
0x00238B        D52B000C                 M[r9 + 12] = r0;
0x00238C        81230001                 r0 = r1 AND 0x1;
0x00238D        E422002F                 r0 = r0 + 1;
0x00238E        8D220002                 r0 = r0 LSHIFT 2;
0x00238F        D52B0008                 M[r9 + 8] = r0;
0x002390        DC0D000F                 rts;
0x002391        DDF0F2DC                 jump $pop_rLink_and_rts;

 <$calc_actual_samples>
0x002392        F3D00000                 push rLink;
0x002393        D12A0001                 r0 = M[r8 + 1];
0x002394        FD0000FF D1225C16        r0 = M[r0 + -41962];
0x002396        DC02000F                 jump r0;

 <$M.calc_actual_samples.reset>
0x002397        E420002F                 r0 = Null + 1;
0x002398        D52A0001                 M[r8 + 1] = r0;
0x002399        D50A0004                 M[r8 + 4] = Null;
0x00239A        D50A0005                 M[r8 + 5] = Null;
0x00239B        DDF0002F                 jump $M.calc_actual_samples.exit;

 <$M.calc_actual_samples.wait>
0x00239C        D13A0005                 r1 = M[r8 + 5];
0x00239D        E433002F                 r1 = r1 + 1;
0x00239E        D53A0005                 M[r8 + 5] = r1;
0x00239F        D14A0002                 r2 = M[r8 + 2];
0x0023A0        2003004F                 Null = r1 - r2;
0x0023A1        DD100029                 if NE jump $M.calc_actual_samples.exit;
0x0023A2        01200002                 r0 = Null + 2;
0x0023A3        D52A0001                 M[r8 + 1] = r0;
0x0023A4        DDF00026                 jump $M.calc_actual_samples.exit;

 <$M.calc_actual_samples.start>
0x0023A5        01200003                 r0 = Null + 3;
0x0023A6        D52A0001                 M[r8 + 1] = r0;
0x0023A7        D50A0004                 M[r8 + 4] = Null;
0x0023A8        D50A0005                 M[r8 + 5] = Null;
0x0023A9        D12A0000                 r0 = M[r8 + 0];
0x0023AA        8122000F                 r0 = r0 AND 0xf;
0x0023AB        FD0000FF D1224BE8        r0 = M[r0 + -46104];
0x0023AD        D3200000                 r0 = M[r0 + Null];
0x0023AE        D52A0006                 M[r8 + 6] = r0;
0x0023AF        DDF0001B                 jump $M.calc_actual_samples.exit;

 <$M.calc_actual_samples.run>
0x0023B0        D12A0000                 r0 = M[r8 + 0];
0x0023B1        E1F0F24E                 call $cbuffer.calc_amount_space;
0x0023B2        D12A0000                 r0 = M[r8 + 0];
0x0023B3        8122000F                 r0 = r0 AND 0xf;
0x0023B4        FD0000FF D1224BE8        r0 = M[r0 + -46104];
0x0023B6        D3200000                 r0 = M[r0 + Null];
0x0023B7        D13A0006                 r1 = M[r8 + 6];
0x0023B8        2032003F                 r1 = r0 - r1;
0x0023B9        00330044                 if NEG r1 = r1 + r2;
0x0023BA        D52A0006                 M[r8 + 6] = r0;
0x0023BB        8D33007F                 r1 = r1 LSHIFT -1;
0x0023BC        D12A0004                 r0 = M[r8 + 4];
0x0023BD        03230000                 r0 = r0 + r1;
0x0023BE        D52A0004                 M[r8 + 4] = r0;
0x0023BF        D13A0005                 r1 = M[r8 + 5];
0x0023C0        E433002F                 r1 = r1 + 1;
0x0023C1        D53A0005                 M[r8 + 5] = r1;
0x0023C2        D14A0003                 r2 = M[r8 + 3];
0x0023C3        2003004F                 Null = r1 - r2;
0x0023C4        DD100006                 if NE jump $M.calc_actual_samples.exit;
0x0023C5        E1F0035F                 call $apply_sra_resampling_adjustment;
0x0023C6        FD0000FF 19205A31        M[0xff5a31] = r0 + Null;
0x0023C8        01200002                 r0 = Null + 2;
0x0023C9        D52A0001                 M[r8 + 1] = r0;

 <$M.calc_actual_samples.exit>
0x0023CA        DDF0F2A3                 jump $pop_rLink_and_rts;

 <$codec.av_encode>
0x0023CB        F3D00000                 push rLink;
0x0023CC        19702C9C                 M[$M.codec_av_encode.data_ptr] = r5 + Null;
0x0023CD        D1270002                 r0 = M[r5 + 2];
0x0023CE        D1320002                 r1 = M[r0 + 2];
0x0023CF        FD0000FF 19305C9C        M[$M.codec_av_encode.WritePointer] = r1 + Null;
0x0023D1        E1F0F22E                 call $cbuffer.calc_amount_space;
0x0023D2        D1370007                 r1 = M[r5 + 7];
0x0023D3        2002003F                 Null = r0 - r1;
0x0023D4        DD40F299                 if NEG jump $pop_rLink_and_rts;
0x0023D5        D1270000                 r0 = M[r5 + 0];
0x0023D6        01770002                 r5 = r5 + 2;
0x0023D7        E002000F                 call r0;
0x0023D8        09702C9C                 r5 = Null + M[$M.codec_av_encode.data_ptr];
0x0023D9        D1270005                 r0 = M[r5 + 5];
0x0023DA        21020000                 Null = r0 - 0;
0x0023DB        DD000019                 if EQ jump $M.codec_av_encode.jp_encode_successful;
0x0023DC        21020002                 Null = r0 - 2;
0x0023DD        DD10F290                 if NE jump $pop_rLink_and_rts;
0x0023DE        D1270008                 r0 = M[r5 + 8];
0x0023DF        E422002F                 r0 = r0 + 1;
0x0023E0        D5270008                 M[r5 + 8] = r0;
0x0023E1        2102000A                 Null = r0 - 10;
0x0023E2        DD40F28B                 if NEG jump $pop_rLink_and_rts;
0x0023E3        0037000F                 r1 = r5 + Null;
0x0023E4        01770002                 r5 = r5 + 2;
0x0023E5        D1230001                 r0 = M[r1 + 1];
0x0023E6        E0020001                 if NE call r0;
0x0023E7        09702C9C                 r5 = Null + M[$M.codec_av_encode.data_ptr];
0x0023E8        D1270003                 r0 = M[r5 + 3];
0x0023E9        DD000003                 if EQ jump $M.codec_av_encode.skip_left_channel;
0x0023EA        D1320002                 r1 = M[r0 + 2];
0x0023EB        D5320001                 M[r0 + 1] = r1;

 <$M.codec_av_encode.skip_left_channel>
0x0023EC        D1270004                 r0 = M[r5 + 4];
0x0023ED        DD000003                 if EQ jump $M.codec_av_encode.skip_right_channel;
0x0023EE        D1320002                 r1 = M[r0 + 2];
0x0023EF        D5320001                 M[r0 + 1] = r1;

 <$M.codec_av_encode.skip_right_channel>
0x0023F0        D1270002                 r0 = M[r5 + 2];
0x0023F1        D1420000                 r2 = M[r0 + 0];
0x0023F2        95344000                 r1 = r2 * 0.5 (frac);
0x0023F3        DDF0000D                 jump $M.codec_av_encode.update_threshold_and_exit;

 <$M.codec_av_encode.jp_encode_successful>
0x0023F4        D5070008                 M[r5 + 8] = Null;
0x0023F5        D1270002                 r0 = M[r5 + 2];
0x0023F6        D1320002                 r1 = M[r0 + 2];
0x0023F7        D1420000                 r2 = M[r0 + 0];
0x0023F8        FD0000FF 29335C9C        r1 = r1 - M[$M.codec_av_encode.WritePointer];
0x0023FA        00330044                 if NEG r1 = r1 + r2;
0x0023FB        FD000019 9523999A        r0 = r1 * 0.20000004768371582 (frac);
0x0023FD        03320000                 r1 = r1 + r0;
0x0023FE        2003004F                 Null = r1 - r2;
0x0023FF        00340005                 if POS r1 = r2 + Null;

 <$M.codec_av_encode.update_threshold_and_exit>
0x002400        D5370007                 M[r5 + 7] = r1;
0x002401        DDF0F26C                 jump $pop_rLink_and_rts;

 <gZcxR+vWmq5TTZEFEOr4N0oLYsyD9JGakww8qxC0x4c=>
0x002402        F3D00000                 push rLink;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002403        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002404        D13A0001                 r1 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002405        E1F0E36F                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002406        00C4000F                 r10 = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002407        DDD0F266                 if LE jump $pop_rLink_and_rts;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002408        51900001                 M1 = Null + 1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002409        D12A0000                 r0 = M[r8 + 0];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00240A        E1F0E37F                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00240B        5000002F                 I0 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00240C        50C0003F                 L0 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00240D        D12A0001                 r0 = M[r8 + 1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00240E        E1F0E37B                 call $cbops_multirate.GetBuffer;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00240F        5040002F                 I4 = Null + r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002410        50E0003F                 L4 = Null + r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002411        D14A0002                 r2 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002412        D13A0003                 r1 = M[r8 + 3];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002413        2003004F                 Null = r1 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002414        DD00001A                 if EQ jump JqIzA0x5nIAcJawOprM45R9lOQZkzK82akVGlXXIPfE=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002415        D15A0004                 r3 = M[r8 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002416        DD000017                 if EQ jump VD1gE+z9ldwa5nv2EoDsog5UfTyyhVoQxnmmTEYDsfs=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002417        D17A0005                 r5 = M[r8 + 5];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002418        D11A0006                 rMAC = M[r8 + 6];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002419        D16A0007                 r4 = M[r8 + 7];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00241A        E5F00011                 do xhTsP3wOsWbD+Xy1UaP1nv03rCZDyi6I+xQB+qu1SmY=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00241B        67692100                 r4 = r4 - M1, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00241C        DD50000D                 if POS jump INKTEiNDxufRSvXQKkc2LNeM1eXmMUbuZe/cTptEZH8=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00241D        9083007F                 r6 = r1 ASHIFT r5;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00241E        03810000                 r6 = r6 + rMAC;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00241F        0065000F                 r4 = r3 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002420        2003004F                 Null = r1 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002421        DD400005                 if NEG jump IsTQXUMCAu8E4hTUWn4pMFBUBPiyPgcaxesfhbiAVjk=;

 <s2fev9vh5bkOu2mFCrtBugArWiwHulOiPnMEUu2oQko=>
0x002422        23380000                 r1 = r1 - r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002423        2003004F                 Null = r1 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002424        00340004                 if NEG r1 = r2 + Null;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002425        DDF00004                 jump INKTEiNDxufRSvXQKkc2LNeM1eXmMUbuZe/cTptEZH8=;

 <IsTQXUMCAu8E4hTUWn4pMFBUBPiyPgcaxesfhbiAVjk=>
0x002426        03380000                 r1 = r1 + r6;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002427        2003004F                 Null = r1 - r2;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002428        00340005                 if POS r1 = r2 + Null;

 <INKTEiNDxufRSvXQKkc2LNeM1eXmMUbuZe/cTptEZH8=>
0x002429        97230000                 r0 = r0 * r1 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00242A        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <xhTsP3wOsWbD+Xy1UaP1nv03rCZDyi6I+xQB+qu1SmY=>
0x00242B        D56A0007                 M[r8 + 7] = r4;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00242C        DDF00008                 jump 83/inUBcP199KKRWGCHQ6no2BuX/TkEkwWUedOEpmWQ=;

 <VD1gE+z9ldwa5nv2EoDsog5UfTyyhVoQxnmmTEYDsfs=>
0x00242D        0034000F                 r1 = r2 + Null;

 <JqIzA0x5nIAcJawOprM45R9lOQZkzK82akVGlXXIPfE=>
0x00242E        67C92100                 r10 = r10 - M1, r0 = M[I0,1];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x00242F        97230000                 r0 = r0 * r1 (frac);

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002430        E5F00003                 do fEZksSHLEHvdaDDz2QVNhDj150KEINu1DSuXWLNk9Ag=;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002431        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002432        97230000                 r0 = r0 * r1 (frac);

 <fEZksSHLEHvdaDDz2QVNhDj150KEINu1DSuXWLNk9Ag=>
0x002433        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <83/inUBcP199KKRWGCHQ6no2BuX/TkEkwWUedOEpmWQ=>
0x002434        D53A0003                 M[r8 + 3] = r1;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002435        51C00000                 L0 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002436        51E00000                 L4 = Null + 0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002437        DDF0F236                 jump $pop_rLink_and_rts;

 <$ReceiveProcRun>
0x002438        F3D00000                 push rLink;
0x002439        09502C90                 r3 = Null + M[$M.codec_copy_handler.frame_proc_num_samples];
0x00243A        FD0000FF 01205C5F        r0 = Null + -41889;
0x00243C        E1F0F1D3                 call $cbuffer.calc_amount_data;
0x00243D        2002005F                 Null = r0 - r3;
0x00243E        DD40F22F                 if NEG jump $pop_rLink_and_rts;
0x00243F        01202C5E                 r0 = Null + 11358;
0x002440        E1F0F1CF                 call $cbuffer.calc_amount_data;
0x002441        2002005F                 Null = r0 - r3;
0x002442        DD40F22B                 if NEG jump $pop_rLink_and_rts;
0x002443        01202C4F                 r0 = Null + 11343;
0x002444        E1F0F1BB                 call $cbuffer.calc_amount_space;
0x002445        2002005F                 Null = r0 - r3;
0x002446        DD40F227                 if NEG jump $pop_rLink_and_rts;
0x002447        FD0000FF 01205C53        r0 = Null + -41901;
0x002449        E1F0F1B6                 call $cbuffer.calc_amount_space;
0x00244A        2002005F                 Null = r0 - r3;
0x00244B        DD40F222                 if NEG jump $pop_rLink_and_rts;
0x00244C        09001DDD                 Null = Null + M[$M.CVC_SYS.AlgReInit];
0x00244D        E1100C58                 if NE call $M.A2DP_LOW_LATENCY_1MIC.SystemReInitialize.func;
0x00244E        FD0000FF 01A05BAE        r8 = Null + -42066;
0x002450        E1F0EAE9                 call $M.mips_profile.mainstart;
0x002451        FD0000FF 09405C84        r2 = Null + M[$M.system_config.data.dithertype];
0x002453        FD0000FF 1940407D        M[0xff407d] = r2 + Null;
0x002455        FD0000FF 19405BD2        M[0xff5bd2] = r2 + Null;
0x002457        09301DDB                 r1 = Null + M[$M.CVC_SYS.cur_mode];
0x002458        D1632C27                 r4 = M[r1 + 11303];
0x002459        E1F0F189                 call $frame_sync.run_function_table;
0x00245A        FD0000FF 01A05BAE        r8 = Null + -42066;
0x00245C        E1F0EAEA                 call $M.mips_profile.mainend;
0x00245D        D12A0006                 r0 = M[r8 + 6];
0x00245E        FD0000FF 19205C86        M[$M.receive_process.PeakMipsRxFunc] = r0 + Null;
0x002460        DDF0F20D                 jump $pop_rLink_and_rts;

 <$sbcdec.sample_reconstruction>
0x002461        01700080                 r5 = Null + 128;
0x002462        D1AB0030                 r8 = M[r9 + 48];
0x002463        21AA0002                 r8 = r8 - 2;
0x002464        D13B0014                 r1 = M[r9 + 20];
0x002465        5000003F                 I0 = Null + r1;
0x002466        D13B001B                 r1 = M[r9 + 27];
0x002467        5010003F                 I1 = Null + r1;
0x002468        D13B0018                 r1 = M[r9 + 24];
0x002469        5020003F                 I2 = Null + r1;
0x00246A        D19B001F                 r7 = M[r9 + 31];
0x00246B        D13B0021                 r1 = M[r9 + 33];
0x00246C        9B390000                 r1 = r1 * r7 (int);
0x00246D        5080003F                 M0 = Null + r1;
0x00246E        70A0003F                 M2 = Null - r1;
0x00246F        50B3003F                 M3 = r1 + r1;
0x002470        D14B001D                 r2 = M[r9 + 29];
0x002471        9843004F                 r2 = r1 * r2 (int);
0x002472        7090004F                 M1 = Null - r2;
0x002473        59990001                 M1 = M1 + 1;

 <$M.sbcdec.sample_reconstruction.chan_loop>
0x002474        D18B0021                 r6 = M[r9 + 33];

 <$M.sbcdec.sample_reconstruction.subband_loop>
0x002475        D1CB001D                 r10 = M[r9 + 29];
0x002476        03003500                 Null = Null + Null, r1 = M[I1,1];
0x002477        03034900                 Null = Null + r1, r2 = M[I2,1];
0x002478        DD00000F                 if EQ jump $M.sbcdec.sample_reconstruction.zero_sample;
0x002479        E444002F                 r2 = r2 + 1;
0x00247A        D05A003F                 r3 = M[r8 + r1];
0x00247B        2034003F                 r1 = r2 - r1;
0x00247C        9067004F                 r4 = r5 ASHIFT r2;
0x00247D        02002000                 Null = Null + Null, r0 = M[I0,M0];
0x00247E        E5F00007                 do $M.sbcdec.sample_reconstruction.block_loop;
0x00247F        8D220008                 r0 = r0 LSHIFT 8;
0x002480        01220080                 r0 = r0 + 128;
0x002481        C012005F                 rMAC = r0 * r3 (UU);
0x002482        8C21003F                 r0 = rMAC LSHIFT r1;
0x002483        2012226F                 rMAC = r0 - r4, r0 = M[I0,M2];
0x002484        02009300                 Null = Null + Null, M[I0,M3] = rMAC;

 <$M.sbcdec.sample_reconstruction.block_loop>
0x002485        02002200                 Null = Null + Null, r0 = M[I0,M2];
0x002486        DDF00003                 jump $M.sbcdec.sample_reconstruction.done_block_loop;

 <$M.sbcdec.sample_reconstruction.zero_sample>
0x002487        E5F00002                 do $M.sbcdec.sample_reconstruction.done_block_loop;
0x002488        0200B000                 Null = Null + Null, M[I0,M0] = r1;

 <$M.sbcdec.sample_reconstruction.done_block_loop>
0x002489        02003100                 Null = Null + Null, r1 = M[I0,M1];
0x00248A        E488003F                 r6 = r6 - 1;
0x00248B        DD10FFEA                 if NE jump $M.sbcdec.sample_reconstruction.subband_loop;
0x00248C        E499003F                 r7 = r7 - 1;
0x00248D        DD10FFE7                 if NE jump $M.sbcdec.sample_reconstruction.chan_loop;
0x00248E        DC0D000F                 rts;

 <$one_mic.send.process>
0x00248F        F3D00000                 push rLink;
0x002490        09201DDB                 r0 = Null + M[$M.CVC_SYS.cur_mode];
0x002491        DD00001F                 if EQ jump $one_mic_aec_control.byPassAEC;
0x002492        0920266D                 r0 = Null + M[0x266d];
0x002493        81020002                 Null = r0 AND 0x2;
0x002494        DD00000C                 if EQ jump $one_mic_aec_control.aec_disabled;
0x002495        019012AA                 r7 = Null + 4778;
0x002496        E1F0E8E5                 call $M.AEC_500.fnmls_process.func;
0x002497        019013C1                 r7 = Null + 5057;
0x002498        01A012AA                 r8 = Null + 4778;
0x002499        0920266D                 r0 = Null + M[0x266d];
0x00249A        81020004                 Null = r0 AND 0x4;
0x00249B        E10003A6                 if EQ call $AEC_500.NonLinearProcess;

 <$one_mic_aec_control.go_cng>
0x00249C        019012AA                 r7 = Null + 4778;
0x00249D        09201DDB                 r0 = Null + M[$M.CVC_SYS.cur_mode];
0x00249E        E110E0C4                 if NE call .L0;
0x00249F        DDF0F1CE                 jump $pop_rLink_and_rts;

 <$one_mic_aec_control.aec_disabled>
0x0024A0        FD0000FF 09C05C87        r10 = Null + M[$cvc_fftbins];
0x0024A2        5100094E                 I0 = Null + 2382;
0x0024A3        FD0000FF 5140394E        I4 = Null + -50866;
0x0024A5        511009CF                 I1 = Null + 2511;
0x0024A6        FD0000FF 515039CF        I5 = Null + -50737;
0x0024A8        512005EB                 I2 = Null + 1515;
0x0024A9        FD00007F 0140FFFF        r2 = Null + 8388607;
0x0024AB        E5F00004                 do $one_mic_aec_control.copy_buffer;
0x0024AC        03002131                 Null = Null + Null, r0 = M[I0,1], r1 = M[I4,1];
0x0024AD        0300A5B5                 Null = Null + Null, M[I1,1] = r0, M[I5,1] = r1;
0x0024AE        0300C900                 Null = Null + Null, M[I2,1] = r2;

 <$one_mic_aec_control.copy_buffer>
0x0024AF        DDF0FFED                 jump $one_mic_aec_control.go_cng;

 <$one_mic_aec_control.byPassAEC>
0x0024B0        01902865                 r7 = Null + 10341;
0x0024B1        E1F00D38                 call $M.oms270.apply_gain.func;
0x0024B2        DDF0F1BB                 jump $pop_rLink_and_rts;

 <$sbcdec.init_static_decoder>
0x0024B3        F3D00000                 push rLink;
0x0024B4        01B029C2                 r9 = Null + 10690;
0x0024B5        D5B70005                 M[r5 + 5] = r9;
0x0024B6        E1F0029F                 call $sbc.init_static_common;
0x0024B7        FD0000FF 01203E81        r0 = Null + -49535;
0x0024B9        D52B002E                 M[r9 + 46] = r0;
0x0024BA        FD0000FF 01203250        r0 = Null + -52656;
0x0024BC        D52B002F                 M[r9 + 47] = r0;
0x0024BD        FD0000FF 01203FD5        r0 = Null + -49195;
0x0024BF        D52B0030                 M[r9 + 48] = r0;
0x0024C0        FD0000FF 01203FC4        r0 = Null + -49212;
0x0024C2        D52B0031                 M[r9 + 49] = r0;
0x0024C3        FD0000FF 01203000        r0 = Null + -53248;
0x0024C5        D52B0032                 M[r9 + 50] = r0;
0x0024C6        FD0000FF 01203100        r0 = Null + -52992;
0x0024C8        D52B0033                 M[r9 + 51] = r0;
0x0024C9        D50B003A                 M[r9 + 58] = Null;
0x0024CA        01200010                 r0 = Null + 16;
0x0024CB        D52B003B                 M[r9 + 59] = r0;
0x0024CC        FD0000FF 01204040        r0 = Null + -49088;
0x0024CE        D52B003E                 M[r9 + 62] = r0;
0x0024CF        E1F00266                 call $sbcdec.reset_decoder;
0x0024D0        E1F0026B                 call $sbcdec.init_tables;
0x0024D1        01302C3F                 r1 = Null + 11327;
0x0024D2        01407010                 r2 = Null + 28688;
0x0024D3        015024D6                 r3 = Null + 9430;
0x0024D4        E1F01012                 call $message.register_handler;
0x0024D5        DDF0F198                 jump $pop_rLink_and_rts;

 <$sbcdec.convert_mono_handler>
0x0024D6        D53B0034                 M[r9 + 52] = r1;
0x0024D7        DC0D000F                 rts;

 <$sbcenc.quantize_samples>
0x0024D8        D14B0006                 r2 = M[r9 + 6];
0x0024D9        E444003F                 r2 = r2 - 1;
0x0024DA        D12B0014                 r0 = M[r9 + 20];
0x0024DB        5010002F                 I1 = Null + r0;
0x0024DC        D12B001B                 r0 = M[r9 + 27];
0x0024DD        5020002F                 I2 = Null + r0;
0x0024DE        D12B0018                 r0 = M[r9 + 24];
0x0024DF        5030002F                 I3 = Null + r0;
0x0024E0        D1AB001F                 r8 = M[r9 + 31];
0x0024E1        D19B0021                 r7 = M[r9 + 33];
0x0024E2        982A009F                 r0 = r8 * r7 (int);
0x0024E3        5080002F                 M0 = Null + r0;
0x0024E4        70A0002F                 M2 = Null - r0;
0x0024E5        50B2002F                 M3 = r0 + r0;
0x0024E6        D13B001D                 r1 = M[r9 + 29];
0x0024E7        9832003F                 r1 = r0 * r1 (int);
0x0024E8        75930001                 M1 = 1 - r1;

 <$M.sbcenc.quantize_samples.chan_loop>
0x0024E9        D19B0021                 r7 = M[r9 + 33];

 <$M.sbcenc.quantize_samples.subband_loop>
0x0024EA        D1CB001D                 r10 = M[r9 + 29];
0x0024EB        03002900                 Null = Null + Null, r0 = M[I2,1];
0x0024EC        03026D00                 Null = Null + r0, r4 = M[I3,1];
0x0024ED        DD00000C                 if EQ jump $M.sbcenc.quantize_samples.zero_sample;
0x0024EE        ED760080                 r5 = 0x80 ASHIFT r4;
0x0024EF        65660008                 r4 = 8 - r4;
0x0024F0        D084002F                 r6 = M[r2 + r0];
0x0024F1        02003400                 Null = Null + Null, r1 = M[I1,M0];
0x0024F2        03370000                 r1 = r1 + r5;
0x0024F3        E5F00004                 do $M.sbcenc.quantize_samples.block_loop;
0x0024F4        CC13008F                 rMAC = r1 * r6 (SS);
0x0024F5        92E63600                 rMAC = rMAC ASHIFT r4, r1 = M[I1,M2];
0x0024F6        02379700                 r1 = r1 + r5, M[I1,M3] = rMAC;

 <$M.sbcenc.quantize_samples.block_loop>
0x0024F7        5F1A0000                 I1 = I1 + M2;
0x0024F8        DDF00003                 jump $M.sbcenc.quantize_samples.block_loop_done;

 <$M.sbcenc.quantize_samples.zero_sample>
0x0024F9        E5F00002                 do $M.sbcenc.quantize_samples.block_loop_done;
0x0024FA        0200A400                 Null = Null + Null, M[I1,M0] = r0;

 <$M.sbcenc.quantize_samples.block_loop_done>
0x0024FB        02002500                 Null = Null + Null, r0 = M[I1,M1];
0x0024FC        E499003F                 r7 = r7 - 1;
0x0024FD        DD10FFED                 if NE jump $M.sbcenc.quantize_samples.subband_loop;
0x0024FE        E4AA003F                 r8 = r8 - 1;
0x0024FF        DD10FFEA                 if NE jump $M.sbcenc.quantize_samples.chan_loop;
0x002500        DC0D000F                 rts;

 <$sbcdec.private.init_tables>
0x002501        F3D00000                 push rLink;
0x002502        FD0000FF 09405B51        r2 = Null + M[$flash.windowed_data16.address];
0x002504        D12B002E                 r0 = M[r9 + 46];
0x002505        5000002F                 I0 = Null + r0;
0x002506        0120030C                 r0 = Null + 780;
0x002507        01300080                 r1 = Null + 128;
0x002508        E1F0EA02                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x002509        D12B002F                 r0 = M[r9 + 47];
0x00250A        5000002F                 I0 = Null + r0;
0x00250B        01200540                 r0 = Null + 1344;
0x00250C        01300020                 r1 = Null + 32;
0x00250D        E1F0E9FD                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x00250E        D12B0030                 r0 = M[r9 + 48];
0x00250F        5000002F                 I0 = Null + r0;
0x002510        01200602                 r0 = Null + 1538;
0x002511        0130000F                 r1 = Null + 15;
0x002512        E1F0E9F8                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x002513        D12B0031                 r0 = M[r9 + 49];
0x002514        5000002F                 I0 = Null + r0;
0x002515        012005D0                 r0 = Null + 1488;
0x002516        01300011                 r1 = Null + 17;
0x002517        E1F0E9F3                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x002518        DDF0F155                 jump $pop_rLink_and_rts;

 <$calc_sra_resampling_adjustment>
0x002519        F100003E                 pushm <rMAC, r0, r1, r2, r3>;
0x00251A        FD0000FF 09205C8B        r0 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x00251C        09302C80                 r1 = Null + M[$M.dac_out.current_dac_sampling_rate];
0x00251D        E440002F                 r2 = Null + 1;
0x00251E        01500000                 r3 = Null + 0;
0x00251F        2002003F                 Null = r0 - r1;
0x002520        DD00000F                 if EQ jump $M.calc_sra_resampling_adjustment.done;
0x002521        DD40000A                 if NEG jump $M.calc_sra_resampling_adjustment.upsampling;
0x002522        8D22007E                 r0 = r0 LSHIFT -2;
0x002523        8DE2007F                 rMAC = r0 LSHIFT -1 (MI);
0x002524        D9030000                 Div = rMAC / r1;
0x002525        D9200001                 r0 = DivResult;
0x002526        8D42006B                 r2 = r0 LSHIFT -21;
0x002527        FD00001F 8122FFFF        r0 = r0 AND 0x1fffff;
0x002529        8D520002                 r3 = r0 LSHIFT 2;
0x00252A        DDF00005                 jump $M.calc_sra_resampling_adjustment.done;

 <$M.calc_sra_resampling_adjustment.upsampling>
0x00252B        8DE2007F                 rMAC = r0 LSHIFT -1 (MI);
0x00252C        D9030000                 Div = rMAC / r1;
0x00252D        01400000                 r2 = Null + 0;
0x00252E        D9500001                 r3 = DivResult;

 <$M.calc_sra_resampling_adjustment.done>
0x00252F        19402C81                 M[$sra_resamp_adjust_int] = r2 + Null;
0x002530        FD0000FF 19505C81        M[$sra_resamp_adjust_frac] = r3 + Null;
0x002532        F104003E                 popm <rMAC, r0, r1, r2, r3>;
0x002533        DC0D000F                 rts;

 <$sbcdec.get1byte>
0x002534        01200008                 r0 = Null + 8;
0x002535        DDF00006                 jump $sbcdec.getbits;

 <$sbcdec.get4bits>
0x002536        01200004                 r0 = Null + 4;
0x002537        DDF00004                 jump $sbcdec.getbits;

 <$sbcdec.get2bits>
0x002538        01200002                 r0 = Null + 2;
0x002539        DDF00002                 jump $sbcdec.getbits;

 <$sbcdec.get1bit>
0x00253A        E420002F                 r0 = Null + 1;

 <$sbcdec.getbits>
0x00253B        D15B0031                 r3 = M[r9 + 49];
0x00253C        D3520000                 r3 = M[r3 + r0];
0x00253D        D14B003B                 r2 = M[r9 + 59];
0x00253E        2042004F                 r2 = r0 - r2;
0x00253F        DDC00007                 if GT jump $M.sbcdec.getbits.anotherword;
0x002540        03003000                 Null = Null + Null, r1 = M[I0,0];
0x002541        8F340000                 r1 = r1 LSHIFT r2;
0x002542        83350000                 r1 = r1 AND r3;
0x002543        2040004F                 r2 = Null - r2;
0x002544        D54B003B                 M[r9 + 59] = r2;
0x002545        DC0D000F                 rts;

 <$M.sbcdec.getbits.anotherword>
0x002546        03003100                 Null = Null + Null, r1 = M[I0,1];
0x002547        8F340000                 r1 = r1 LSHIFT r2;
0x002548        83355000                 r1 = r1 AND r3, r3 = M[I0,0];
0x002549        21440010                 r2 = r2 - 16;
0x00254A        8F540000                 r3 = r3 LSHIFT r2;
0x00254B        03350000                 r1 = r1 + r3;
0x00254C        2040004F                 r2 = Null - r2;
0x00254D        D54B003B                 M[r9 + 59] = r2;
0x00254E        DC0D000F                 rts;

 <$sbcdec.joint_stereo_decode>
0x00254F        D15B0014                 r3 = M[r9 + 20];
0x002550        5010005F                 I1 = Null + r3;
0x002551        D1CB0021                 r10 = M[r9 + 33];
0x002552        D15B001D                 r3 = M[r9 + 29];
0x002553        508000CF                 M0 = Null + r10;
0x002554        709000CF                 M1 = Null - r10;
0x002555        59A90001                 M2 = M1 + 1;
0x002556        51B00001                 M3 = Null + 1;
0x002557        FD000080 01600000        r4 = Null + -8388608;

 <$M.sbcdec.joint_stereo_decode.blk_loop>
0x002559        514B0026                 I4 = r9 + 38;
0x00255A        E5F0000B                 do $M.sbcdec.joint_stereo_decode.sb_loop;
0x00255B        02002443                 Null = Null + Null, r0 = M[I1,M0], r2 = M[I4,M3];
0x00255C        0004350F                 Null = r2 + Null, r1 = M[I1,M1];
0x00255D        DD000006                 if EQ jump $M.sbcdec.joint_stereo_decode.not_joint;
0x00255E        0042003F                 r2 = r0 + r1;
0x00255F        9C440066                 if V r2 = r2 * r4 (int) (sat);
0x002560        2032003F                 r1 = r0 - r1;
0x002561        9C330066                 if V r1 = r1 * r4 (int) (sat);
0x002562        0024000F                 r0 = r2 + Null;

 <$M.sbcdec.joint_stereo_decode.not_joint>
0x002563        0200A400                 Null = Null + Null, M[I1,M0] = r0;
0x002564        0200B600                 Null = Null + Null, M[I1,M2] = r1;

 <$M.sbcdec.joint_stereo_decode.sb_loop>
0x002565        D1CB0021                 r10 = M[r9 + 33];
0x002566        5B1C0000                 I1 = I1 + r10;
0x002567        E455003F                 r3 = r3 - 1;
0x002568        DD10FFF1                 if NE jump $M.sbcdec.joint_stereo_decode.blk_loop;
0x002569        DC0D000F                 rts;

 <$sbcenc.encoder_set_parameters>
0x00256A        F3D00000                 push rLink;
0x00256B        E1F0F0C3                 call $block_interrupts;
0x00256C        D12B0008                 r0 = M[r9 + 8];
0x00256D        D52B0021                 M[r9 + 33] = r0;
0x00256E        D12B000E                 r0 = M[r9 + 14];
0x00256F        D52B0025                 M[r9 + 37] = r0;
0x002570        D12B0009                 r0 = M[r9 + 9];
0x002571        D52B001D                 M[r9 + 29] = r0;
0x002572        D12B000A                 r0 = M[r9 + 10];
0x002573        D52B001C                 M[r9 + 28] = r0;
0x002574        D12B000B                 r0 = M[r9 + 11];
0x002575        D52B001E                 M[r9 + 30] = r0;
0x002576        E430002F                 r1 = Null + 1;
0x002577        21020000                 Null = r0 - 0;
0x002578        00330031                 if NE r1 = r1 + r1;
0x002579        D53B001F                 M[r9 + 31] = r1;
0x00257A        D12B000C                 r0 = M[r9 + 12];
0x00257B        D52B0020                 M[r9 + 32] = r0;
0x00257C        D12B000D                 r0 = M[r9 + 13];
0x00257D        D52B0022                 M[r9 + 34] = r0;
0x00257E        E1F0F099                 call $interrupt.unblock;
0x00257F        DDF0F0EE                 jump $pop_rLink_and_rts;

 <$M.set_eq_bank.func>
0x002580        0003000F                 Null = r1 + Null;
0x002581        DD000016                 if EQ jump $M.set_eq_bank.do_not_advance_to_next_eq_bank;
0x002582        01600007                 r4 = Null + 7;
0x002583        09702577                 r5 = Null + M[0x2577];
0x002584        09202546                 r0 = Null + M[$M.CVC.data.CurParams];
0x002585        8082006F                 r6 = r0 AND r4;
0x002586        E488002F                 r6 = r6 + 1;
0x002587        21030002                 Null = r1 - 2;
0x002588        00840000                 if EQ r6 = r2 + Null;
0x002589        01A00200                 r8 = Null + 512;
0x00258A        01400000                 r2 = Null + 0;
0x00258B        E490002F                 r7 = Null + 1;
0x00258C        800200AF                 Null = r0 AND r8;
0x00258D        00490000                 if EQ r2 = r7 + Null;
0x00258E        2007008F                 Null = r5 - r6;
0x00258F        0084000B                 if LT r6 = r2 + Null;
0x002590        21080000                 Null = r6 - 0;
0x002591        00840000                 if EQ r6 = r2 + Null;
0x002592        FD0000FF 8996FFFF        r7 = r4 XOR 0xffffff;
0x002594        8092009F                 r7 = r0 AND r7;
0x002595        8489008F                 r6 = r7 OR r6;
0x002596        19802546                 M[$M.CVC.data.CurParams] = r6 + Null;

 <$M.set_eq_bank.do_not_advance_to_next_eq_bank>
0x002597        DC0D000F                 rts;

 <$sbc.calc_scale_factors>
0x002598        D16B0018                 r4 = M[r9 + 24];
0x002599        5010006F                 I1 = Null + r4;
0x00259A        D16B0014                 r4 = M[r9 + 20];
0x00259B        5000006F                 I0 = Null + r4;
0x00259C        D16B001F                 r4 = M[r9 + 31];
0x00259D        D17B0021                 r5 = M[r9 + 33];
0x00259E        D18B001D                 r6 = M[r9 + 29];
0x00259F        9B670000                 r4 = r4 * r5 (int);
0x0025A0        5080006F                 M0 = Null + r4;
0x0025A1        9826008F                 r0 = r4 * r6 (int);
0x0025A2        75920001                 M1 = 1 - r0;
0x0025A3        01400010                 r2 = Null + 16;
0x0025A4        E488003F                 r6 = r6 - 1;
0x0025A5        00C8000F                 r10 = r6 + Null;
0x0025A6        51A00001                 M2 = Null + 1;

 <$M.sbc.calc_scale_factors.chan_subband_loop>
0x0025A7        0034200F                 r1 = r2 + Null, r0 = M[I0,M0];
0x0025A8        E5F00002                 do $M.sbc.calc_scale_factors.block_loop;
0x0025A9        DA322000                 r1 = BLKSIGNDET r0, r0 = M[I0,M0];

 <$M.sbc.calc_scale_factors.block_loop>
0x0025AA        DB320000                 r1 = BLKSIGNDET r0;
0x0025AB        2034213F                 r1 = r2 - r1, r0 = M[I0,M1];
0x0025AC        00C8B60F                 r10 = r6 + Null, M[I1,M2] = r1;
0x0025AD        E466003F                 r4 = r4 - 1;
0x0025AE        DD10FFF9                 if NE jump $M.sbc.calc_scale_factors.chan_subband_loop;
0x0025AF        DC0D000F                 rts;

 <$receive_proc.peq.initialize>
0x0025B0        09202546                 r0 = Null + M[$M.CVC.data.CurParams];
0x0025B1        D07A000F                 r5 = M[r8 + Null];
0x0025B2        81520007                 r3 = r0 AND 0x7;
0x0025B3        E407003F                 Null = r5 - 1;
0x0025B4        00500000                 if EQ r3 = Null + Null;
0x0025B5        FD0000FF 09305C8B        r1 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x0025B7        FD000000 2103BB80        Null = r1 - 48000;
0x0025B9        00550070                 if EQ r3 = r3 + r5;
0x0025BA        E4AA002F                 r8 = r8 + 1;
0x0025BB        D02A005F                 r0 = M[r8 + r3];
0x0025BC        D5290003                 M[r7 + 3] = r0;
0x0025BD        DC0D0000                 if EQ rts;
0x0025BE        DDF00F97                 jump $audio_proc.hq_peq.initialize;

 <$receive_proc.peq.process>
0x0025BF        09202546                 r0 = Null + M[$M.CVC.data.CurParams];
0x0025C0        800200AF                 Null = r0 AND r8;
0x0025C1        DC0D0001                 if NE rts;
0x0025C2        D1090003                 Null = M[r7 + 3];
0x0025C3        DC0D0000                 if EQ rts;
0x0025C4        DDF0E62B                 jump $audio_proc.hq_peq.process;

 <$sbcenc.private.init_tables>
0x0025C5        F3D00000                 push rLink;
0x0025C6        FD0000FF 09405B51        r2 = Null + M[$flash.windowed_data16.address];
0x0025C8        D12B0001                 r0 = M[r9 + 1];
0x0025C9        5000002F                 I0 = Null + r0;
0x0025CA        012003CC                 r0 = Null + 972;
0x0025CB        01300080                 r1 = Null + 128;
0x0025CC        E1F0E93E                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x0025CD        D12B0002                 r0 = M[r9 + 2];
0x0025CE        5000002F                 I0 = Null + r0;
0x0025CF        012005A0                 r0 = Null + 1440;
0x0025D0        01300020                 r1 = Null + 32;
0x0025D1        E1F0E939                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x0025D2        D12B0006                 r0 = M[r9 + 6];
0x0025D3        5000002F                 I0 = Null + r0;
0x0025D4        012005EA                 r0 = Null + 1514;
0x0025D5        01300010                 r1 = Null + 16;
0x0025D6        E1F0E934                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x0025D7        DDF0F096                 jump $pop_rLink_and_rts;

 <$sbc.private.init_tables_common>
0x0025D8        F3D00000                 push rLink;
0x0025D9        FD0000FF 09405B51        r2 = Null + M[$flash.windowed_data16.address];
0x0025DB        D12B0015                 r0 = M[r9 + 21];
0x0025DC        5000002F                 I0 = Null + r0;
0x0025DD        0120048C                 r0 = Null + 1164;
0x0025DE        01300050                 r1 = Null + 80;
0x0025DF        E1F0E92B                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x0025E0        D12B0016                 r0 = M[r9 + 22];
0x0025E1        5000002F                 I0 = Null + r0;
0x0025E2        01200504                 r0 = Null + 1284;
0x0025E3        01300028                 r1 = Null + 40;
0x0025E4        E1F0E926                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x0025E5        D12B0017                 r0 = M[r9 + 23];
0x0025E6        5000002F                 I0 = Null + r0;
0x0025E7        01200570                 r0 = Null + 1392;
0x0025E8        01300030                 r1 = Null + 48;
0x0025E9        E1F0EF46                 call $flash.copy_to_dm;
0x0025EA        DDF0F083                 jump $pop_rLink_and_rts;

 <$sbcenc.putbits_external>
0x0025EB        D1B70004                 r9 = M[r5 + 4];

 <$sbcenc.putbits>
0x0025EC        D14B0010                 r2 = M[r9 + 16];
0x0025ED        23420000                 r2 = r2 - r0;
0x0025EE        DDD00007                 if LE jump $M.sbcenc.putbits.anotherword;
0x0025EF        8C53004F                 r3 = r1 LSHIFT r2;
0x0025F0        D54B0010                 M[r9 + 16] = r2;
0x0025F1        D14B000F                 r2 = M[r9 + 15];
0x0025F2        03540000                 r3 = r3 + r2;
0x0025F3        D55B000F                 M[r9 + 15] = r3;
0x0025F4        DC0D000F                 rts;

 <$M.sbcenc.putbits.anotherword>
0x0025F5        F3200000                 push r0;
0x0025F6        8C53004F                 r3 = r1 LSHIFT r2;
0x0025F7        D12B000F                 r0 = M[r9 + 15];
0x0025F8        03520000                 r3 = r3 + r0;
0x0025F9        8155FFFF                 r3 = r3 AND 0xffff;
0x0025FA        0300D100                 Null = Null + Null, M[I0,1] = r3;
0x0025FB        01440010                 r2 = r2 + 16;
0x0025FC        8C53004F                 r3 = r1 LSHIFT r2;
0x0025FD        D55B000F                 M[r9 + 15] = r3;
0x0025FE        D54B0010                 M[r9 + 16] = r2;
0x0025FF        F3240000                 pop r0;
0x002600        DC0D000F                 rts;

 <$receive_proc.cmpd100.initialize>
0x002601        FD0000FF 09205C8B        r0 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x002603        FD000000 2102BB80        Null = r0 - 48000;
0x002605        00A90001                 if NE r8 = r7 + Null;
0x002606        DDF00EA7                 jump $cmpd100.initialize;

 <$receive_proc.cmpd100.analysis>
0x002607        FD0000FF 09205C8B        r0 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x002609        FD000000 2102BB80        Null = r0 - 48000;
0x00260B        00A90001                 if NE r8 = r7 + Null;
0x00260C        DDF0E26A                 jump $cmpd100.analysis;

 <$receive_proc.cmpd100.applygain>
0x00260D        FD0000FF 09205C8B        r0 = Null + M[$M.set_codec_rate.current_codec_sampling_rate];
0x00260F        FD000000 2102BB80        Null = r0 - 48000;
0x002611        00A90001                 if NE r8 = r7 + Null;
0x002612        DDF0E435                 jump $cmpd100.applygain;

 <$M.a2dp_low_latency_msg.SetUserEqParamMsg.func>
0x002613        F3D00000                 push rLink;
0x002614        0023000F                 r0 = r1 + Null;
0x002615        FD0000FF 01905C06        r7 = Null + -41978;
0x002617        E1F0F57A                 call $user_eq.calcParamAddrOffset;
0x002618        01222577                 r0 = r0 + 9591;
0x002619        8144FFFF                 r2 = r2 AND 0xffff;
0x00261A        1824000F                 M[r0] = r2 + Null;
0x00261B        21050000                 Null = r3 - 0;
0x00261C        DD00F051                 if EQ jump $pop_rLink_and_rts;
0x00261D        0023000F                 r0 = r1 + Null;
0x00261E        FD0000FF 01305A9D        r1 = Null + -42339;
0x002620        01402A35                 r2 = Null + 10805;
0x002621        01502577                 r3 = Null + 9591;
0x002622        E1F0F546                 call $user_eq.calcBandCoefs;
0x002623        DDF0F04A                 jump $pop_rLink_and_rts;

 <$M.a2dp_low_latency_msg.GetUserEqGroupParamMsg.func>
0x002624        F3D00000                 push rLink;
0x002625        5000005F                 I0 = Null + r3;
0x002626        03003100                 Null = Null + Null, r1 = M[I0,1];
0x002627        FD0000FF 01905C06        r7 = Null + -41978;
0x002629        00C3000F                 r10 = r1 + Null;
0x00262A        E5F00006                 do $M.a2dp_low_latency_msg.GetUserEqGroupParamMsg.GetParamsLoop;
0x00262B        03002100                 Null = Null + Null, r0 = M[I0,1];
0x00262C        E1F0F565                 call $user_eq.calcParamAddrOffset;
0x00262D        01222577                 r0 = r0 + 9591;
0x00262E        D3200000                 r0 = M[r0 + Null];
0x00262F        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <$M.a2dp_low_latency_msg.GetUserEqGroupParamMsg.GetParamsLoop>
0x002630        0075000F                 r5 = r3 + Null;
0x002631        0064000F                 r4 = r2 + Null;
0x002632        0150329B                 r3 = Null + 12955;
0x002633        E1F0EA41                 call $message.send_long;
0x002634        DDF0F039                 jump $pop_rLink_and_rts;

 <$sbcdec.read_audio_samples>
0x002635        F3D00000                 push rLink;
0x002636        D17B0014                 r5 = M[r9 + 20];
0x002637        5010007F                 I1 = Null + r5;
0x002638        D16B001D                 r4 = M[r9 + 29];

 <$M.sbcdec.read_audio_samples.blk_loop>
0x002639        D17B001F                 r5 = M[r9 + 31];
0x00263A        D1CB001B                 r10 = M[r9 + 27];
0x00263B        502000CF                 I2 = Null + r10;

 <$M.sbcdec.read_audio_samples.ch_loop>
0x00263C        D1CB0021                 r10 = M[r9 + 33];
0x00263D        E5F00005                 do $M.sbcdec.read_audio_samples.sb_loop;
0x00263E        23332900                 r1 = r1 - r1, r0 = M[I2,1];
0x00263F        0002000F                 Null = r0 + Null;
0x002640        E110FEFB                 if NE call $sbcdec.getbits;
0x002641        0300B500                 Null = Null + Null, M[I1,1] = r1;

 <$M.sbcdec.read_audio_samples.sb_loop>
0x002642        E477003F                 r5 = r5 - 1;
0x002643        DD10FFF9                 if NE jump $M.sbcdec.read_audio_samples.ch_loop;
0x002644        E466003F                 r4 = r4 - 1;
0x002645        DD10FFF4                 if NE jump $M.sbcdec.read_audio_samples.blk_loop;
0x002646        DDF0F027                 jump $pop_rLink_and_rts;

 <$sbc.calc_frame_length>
0x002647        D12B0021                 r0 = M[r9 + 33];
0x002648        D13B001F                 r1 = M[r9 + 31];
0x002649        9862003F                 r4 = r0 * r1 (int);
0x00264A        8D66007F                 r4 = r4 LSHIFT -1;
0x00264B        01660005                 r4 = r4 + 5;
0x00264C        D14B001D                 r2 = M[r9 + 29];
0x00264D        D15B0022                 r3 = M[r9 + 34];
0x00264E        9854005F                 r3 = r2 * r3 (int);
0x00264F        D14B001E                 r2 = M[r9 + 30];
0x002650        21440002                 r2 = r2 - 2;
0x002651        DD400004                 if NEG jump $M.sbc.calc_frame_length.mono_or_dual_chan;

 <$M.sbc.calc_frame_length.stereo_or_jointstereo>
0x002652        9B420000                 r2 = r2 * r0 (int);
0x002653        03540000                 r3 = r3 + r2;
0x002654        DDF00002                 jump $M.sbc.calc_frame_length.finish_frame_length_calc;

 <$M.sbc.calc_frame_length.mono_or_dual_chan>
0x002655        9B530000                 r3 = r3 * r1 (int);

 <$M.sbc.calc_frame_length.finish_frame_length_calc>
0x002656        E455003F                 r3 = r3 - 1;
0x002657        8D55007D                 r3 = r3 LSHIFT -3;
0x002658        0026005F                 r0 = r4 + r3;
0x002659        DC0D000F                 rts;

 <$sbcenc.write_audio_samples>
0x00265A        F3D00000                 push rLink;
0x00265B        D16B001D                 r4 = M[r9 + 29];
0x00265C        D17B0014                 r5 = M[r9 + 20];
0x00265D        5040007F                 I4 = Null + r5;
0x00265E        D17B001F                 r5 = M[r9 + 31];
0x00265F        D18B0021                 r6 = M[r9 + 33];

 <$M.sbcenc.write_audio_samples.block_loop>
0x002660        98C8007F                 r10 = r6 * r5 (int);
0x002661        D12B001B                 r0 = M[r9 + 27];
0x002662        5020002F                 I2 = Null + r0;
0x002663        E5F00004                 do $M.sbcenc.write_audio_samples.chan_subband_loop;
0x002664        03002931                 Null = Null + Null, r0 = M[I2,1], r1 = M[I4,1];
0x002665        0002000F                 Null = r0 + Null;
0x002666        E110FF86                 if NE call $sbcenc.putbits;

 <$M.sbcenc.write_audio_samples.chan_subband_loop>
0x002667        E466003F                 r4 = r4 - 1;
0x002668        DD10FFF8                 if NE jump $M.sbcenc.write_audio_samples.block_loop;
0x002669        DDF0F004                 jump $pop_rLink_and_rts;

 <$sbcdec.find_sync>
0x00266A        F3D00000                 push rLink;
0x00266B        E1F000DA                 call $sbcdec.byte_align;
0x00266C        E5F00006                 do $M.sbcdec.find_sync.findsyncloop;
0x00266D        D18B003B                 r6 = M[r9 + 59];
0x00266E        5820000F                 I2 = I0 + Null;
0x00266F        E1F0FEC5                 call $sbcdec.get1byte;
0x002670        2103009C                 Null = r1 - 156;
0x002671        DD000003                 if EQ jump $M.sbcdec.find_sync.found_sync;

 <$M.sbcdec.find_sync.findsyncloop>
0x002672        01800063                 r6 = Null + 99;
0x002673        DDF0EFFA                 jump $pop_rLink_and_rts;

 <$M.sbcdec.find_sync.found_sync>
0x002674        5802000F                 I0 = I2 + Null;
0x002675        D58B003B                 M[r9 + 59] = r6;
0x002676        DDF0EFF7                 jump $pop_rLink_and_rts;

 <$sbcdec.silence_decoder>
0x002677        D12B0032                 r0 = M[r9 + 50];
0x002678        D52B003C                 M[r9 + 60] = r0;
0x002679        D12B0032                 r0 = M[r9 + 50];
0x00267A        5010002F                 I1 = Null + r0;
0x00267B        01C000A0                 r10 = Null + 160;
0x00267C        01200000                 r0 = Null + 0;
0x00267D        E5F00002                 do $M.sbcdec.silence_decoder.ssf_init_loop1;
0x00267E        0300A500                 Null = Null + Null, M[I1,1] = r0;

 <$M.sbcdec.silence_decoder.ssf_init_loop1>
0x00267F        D12B0033                 r0 = M[r9 + 51];
0x002680        D52B003D                 M[r9 + 61] = r0;
0x002681        D12B0033                 r0 = M[r9 + 51];
0x002682        5010002F                 I1 = Null + r0;
0x002683        01C000A0                 r10 = Null + 160;
0x002684        01200000                 r0 = Null + 0;
0x002685        E5F00002                 do $M.sbcdec.silence_decoder.ssf_init_loop2;
0x002686        0300A500                 Null = Null + Null, M[I1,1] = r0;

 <$M.sbcdec.silence_decoder.ssf_init_loop2>
0x002687        DC0D000F                 rts;

 <$M.a2dp_low_latency_msg.GetUserEqParamMsg.func>
0x002688        F3D00000                 push rLink;
0x002689        0053000F                 r3 = r1 + Null;
0x00268A        0023000F                 r0 = r1 + Null;
0x00268B        FD0000FF 01905C06        r7 = Null + -41978;
0x00268D        E1F0F504                 call $user_eq.calcParamAddrOffset;
0x00268E        01222577                 r0 = r0 + 9591;
0x00268F        D062000F                 r4 = M[r0 + Null];
0x002690        01700000                 r5 = Null + 0;
0x002691        01800000                 r6 = Null + 0;
0x002692        0140329A                 r2 = Null + 12954;
0x002693        E1F0EE00                 call $message.send_short;
0x002694        DDF0EFD9                 jump $pop_rLink_and_rts;

 <$M.a2dp_low_latency_msg.SetUserEqGroupParamMsg.func>
0x002695        F3D00000                 push rLink;
0x002696        5000005F                 I0 = Null + r3;
0x002697        03003100                 Null = Null + Null, r1 = M[I0,1];
0x002698        FD0000FF 01905C06        r7 = Null + -41978;
0x00269A        00C3000F                 r10 = r1 + Null;
0x00269B        E5F00007                 do $M.a2dp_low_latency_msg.SetUserEqGroupParamMsg.SetParamsLoop;
0x00269C        03002100                 Null = Null + Null, r0 = M[I0,1];
0x00269D        E1F0F4F4                 call $user_eq.calcParamAddrOffset;
0x00269E        01222577                 r0 = r0 + 9591;
0x00269F        03003100                 Null = Null + Null, r1 = M[I0,1];
0x0026A0        8133FFFF                 r1 = r1 AND 0xffff;
0x0026A1        1823000F                 M[r0] = r1 + Null;

 <$M.a2dp_low_latency_msg.SetUserEqGroupParamMsg.SetParamsLoop>
0x0026A2        DDF0EFCB                 jump $pop_rLink_and_rts;

 <$sbcdec.read_scale_factors>
0x0026A3        F3D00000                 push rLink;
0x0026A4        D18B001F                 r6 = M[r9 + 31];
0x0026A5        D19B0021                 r7 = M[r9 + 33];
0x0026A6        9B890000                 r6 = r6 * r7 (int);
0x0026A7        D12B0018                 r0 = M[r9 + 24];
0x0026A8        5010002F                 I1 = Null + r0;
0x0026A9        51900001                 M1 = Null + 1;
0x0026AA        01200004                 r0 = Null + 4;

 <$M.sbcdec.read_scale_factors.loop>
0x0026AB        E1F0FE90                 call $sbcdec.getbits;
0x0026AC        E1F0004C                 call $sbc.crc_calc;
0x0026AD        6689B500                 r6 = r6 - M1, M[I1,M1] = r1;
0x0026AE        DD10FFFD                 if NE jump $M.sbcdec.read_scale_factors.loop;
0x0026AF        DDF0EFBE                 jump $pop_rLink_and_rts;

 <$sbcenc.reset_encoder>
0x0026B0        D1B70004                 r9 = M[r5 + 4];
0x0026B1        D12B0003                 r0 = M[r9 + 3];
0x0026B2        D52B0011                 M[r9 + 17] = r0;
0x0026B3        5000002F                 I0 = Null + r0;
0x0026B4        01C00050                 r10 = Null + 80;
0x0026B5        01200000                 r0 = Null + 0;
0x0026B6        E5F00002                 do $M.sbcenc.reset_encoder.asf_init_loop1;
0x0026B7        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <$M.sbcenc.reset_encoder.asf_init_loop1>
0x0026B8        D12B0004                 r0 = M[r9 + 4];
0x0026B9        D52B0012                 M[r9 + 18] = r0;
0x0026BA        5000002F                 I0 = Null + r0;
0x0026BB        01C00050                 r10 = Null + 80;
0x0026BC        01200000                 r0 = Null + 0;
0x0026BD        E5F00002                 do $M.sbcenc.reset_encoder.asf_init_loop2;
0x0026BE        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <$M.sbcenc.reset_encoder.asf_init_loop2>
0x0026BF        DC0D000F                 rts;

 <$M.set_dac_rate.func>
0x0026C0        8133FFFF                 r1 = r1 AND 0xffff;
0x0026C1        9933000A                 r1 = r1 * 10 (int);
0x0026C2        19302C80                 M[$M.dac_out.current_dac_sampling_rate] = r1 + Null;
0x0026C3        19402C7E                 M[$M.set_dac_rate.max_clock_mismatch] = r2 + Null;
0x0026C4        FD0000FF 195041FF        M[$M.set_dac_rate.long_term_mismatch] = r3 + Null;
0x0026C6        81260100                 r0 = r4 AND 0x100;
0x0026C7        19201F7F                 M[$M.set_dac_rate.local_play_back] = r0 + Null;
0x0026C8        812600FF                 r0 = r4 AND 0xff;
0x0026C9        FD0000FF 192031FF        M[$M.set_dac_rate.audio_if_mode] = r0 + Null;
0x0026CB        E420002F                 r0 = Null + 1;
0x0026CC        FD0000FF 19205C80        M[$M.dac_out.dac_sr_flag] = r0 + Null;
0x0026CE        DC0D000F                 rts;

 <$App.Codec.Apply>
0x0026CF        F3D00000                 push rLink;
0x0026D0        19602BA4                 M[0x2ba4] = r4 + Null;
0x0026D1        FD0000FF 19605BA8        M[0xff5ba8] = r4 + Null;
0x0026D3        19702AF8                 M[0x2af8] = r5 + Null;
0x0026D4        FD0000FF 19704DF4        M[0xff4df4] = r5 + Null;
0x0026D6        01200002                 r0 = Null + 2;
0x0026D7        19201DE5                 M[$M.CVC_SYS.VolState] = r0 + Null;
0x0026D8        09602678                 r4 = Null + M[0x2678];
0x0026D9        01401006                 r2 = Null + 4102;
0x0026DA        E1F0EDB9                 call $message.send_short;
0x0026DB        DDF0EF92                 jump $pop_rLink_and_rts;

 <$M.vad_hold.process.func>
0x0026DC        D1290000                 r0 = M[r7 + 0];
0x0026DD        D3200000                 r0 = M[r0 + Null];
0x0026DE        D1390001                 r1 = M[r7 + 1];
0x0026DF        D3300000                 r1 = M[r1 + Null];
0x0026E0        D1490004                 r2 = M[r7 + 4];
0x0026E1        D1590003                 r3 = M[r7 + 3];
0x0026E2        D3500000                 r3 = M[r3 + Null];
0x0026E3        E444003F                 r2 = r2 - 1;
0x0026E4        00400004                 if NEG r2 = Null + Null;
0x0026E5        0003000F                 Null = r1 + Null;
0x0026E6        00450001                 if NE r2 = r3 + Null;
0x0026E7        D5490004                 M[r7 + 4] = r2;
0x0026E8        00200001                 if NE r0 = Null + Null;
0x0026E9        D5290002                 M[r7 + 2] = r0;
0x0026EA        DC0D000F                 rts;

 <$M.set_plugin.func>
0x0026EB        09002C8A                 Null = Null + M[$app_config.io];
0x0026EC        DC0D0005                 if POS rts;
0x0026ED        19302C8A                 M[$app_config.io] = r1 + Null;
0x0026EE        21030004                 Null = r1 - 4;
0x0026EF        DD100007                 if NE jump $M.set_plugin.skip_faststream;
0x0026F0        01200000                 r0 = Null + 0;
0x0026F1        FD0000FF 19205C8A        M[$M.set_plugin.codec_type] = r0 + Null;
0x0026F3        0120011D                 r0 = Null + 285;
0x0026F4        19202C8B                 M[$M.set_plugin.codec_config] = r0 + Null;
0x0026F5        DDF00002                 jump $M.set_plugin.exit;

 <$M.set_plugin.skip_faststream>
0x0026F6        DDF00EE1                 jump 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;

 <$M.set_plugin.exit>
0x0026F7        DC0D000F                 rts;

 <$sbc.crc_calc>
0x0026F8        D14B0024                 r2 = M[r9 + 36];
0x0026F9        0170001D                 r5 = Null + 29;
0x0026FA        65520008                 r3 = 8 - r0;
0x0026FB        00C2000F                 r10 = r0 + Null;
0x0026FC        8C53005F                 r3 = r1 LSHIFT r3;
0x0026FD        E5F00006                 do $M.sbc.crc_calc.crc_loop;
0x0026FE        8865004F                 r4 = r3 XOR r2;
0x0026FF        8D440001                 r2 = r2 LSHIFT 1;
0x002700        81660080                 r4 = r4 AND 0x80;
0x002701        88440071                 if NE r2 = r2 XOR r5;
0x002702        8D550001                 r3 = r3 LSHIFT 1;

 <$M.sbc.crc_calc.crc_loop>
0x002703        D54B0024                 M[r9 + 36] = r2;
0x002704        DC0D000F                 rts;

 <$sbcenc.write_scale_factors>
0x002705        F3D00000                 push rLink;
0x002706        D16B001F                 r4 = M[r9 + 31];
0x002707        D17B0021                 r5 = M[r9 + 33];
0x002708        D12B0018                 r0 = M[r9 + 24];
0x002709        5010002F                 I1 = Null + r0;
0x00270A        98C6007F                 r10 = r4 * r5 (int);
0x00270B        01200004                 r0 = Null + 4;
0x00270C        E5F00003                 do $M.sbcenc.write_scale_factors.loop;
0x00270D        03003500                 Null = Null + Null, r1 = M[I1,1];
0x00270E        E1F0FEDE                 call $sbcenc.putbits;

 <$M.sbcenc.write_scale_factors.loop>
0x00270F        DDF0EF5E                 jump $pop_rLink_and_rts;

 <$M.set_codec_rate.func>
0x002710        8133FFFF                 r1 = r1 AND 0xffff;
0x002711        9933000A                 r1 = r1 * 10 (int);
0x002712        8144FFFF                 r2 = r2 AND 0xffff;
0x002713        9944000A                 r2 = r2 * 10 (int);
0x002714        FD0000FF 19305C8B        M[$M.set_codec_rate.current_codec_sampling_rate] = r1 + Null;
0x002716        19402C8C                 M[$M.set_codec_rate.current_voice_codec_sampling_rate] = r2 + Null;
0x002717        E420002F                 r0 = Null + 1;
0x002718        FD0000FF 19205C8C        M[$M.A2DP_IN.codec_sr_flag] = r0 + Null;
0x00271A        DC0D000F                 rts;

 <$sbcenc.write_padding_bits>
0x00271B        F3D00000                 push rLink;
0x00271C        D12B0010                 r0 = M[r9 + 16];
0x00271D        D15B000E                 r3 = M[r9 + 14];
0x00271E        8D550003                 r3 = r3 LSHIFT 3;
0x00271F        85550007                 r3 = r3 OR 0x7;
0x002720        01300000                 r1 = Null + 0;
0x002721        83250000                 r0 = r0 AND r3;
0x002722        E110FECA                 if NE call $sbcenc.putbits;
0x002723        DDF0EF4A                 jump $pop_rLink_and_rts;

 <$apply_sra_resampling_adjustment>
0x002724        F1000018                 pushm <r1, r2>;
0x002725        09302C81                 r1 = Null + M[$sra_resamp_adjust_int];
0x002726        FD0000FF 09405C81        r2 = Null + M[$sra_resamp_adjust_frac];
0x002728        9832003F                 r1 = r0 * r1 (int);
0x002729        9442004F                 r2 = r0 * r2 (frac);
0x00272A        0023004F                 r0 = r1 + r2;
0x00272B        F1040018                 popm <r1, r2>;
0x00272C        DC0D000F                 rts;

 <$CVC_AppHandleConfig>
0x00272D        09302BEC                 r1 = Null + M[$M.CVC_MODULES_STAMP.CompConfig];
0x00272E        FD0000FF 8133FFF7        r1 = r1 AND 0xfffff7;
0x002730        8D260002                 r0 = r4 LSHIFT 2;
0x002731        81220008                 r0 = r0 AND 0x8;
0x002732        87320000                 r1 = r1 OR r0;
0x002733        19302BEC                 M[$M.CVC_MODULES_STAMP.CompConfig] = r1 + Null;
0x002734        DC0D000F                 rts;

 <$sbcdec.reset_decoder>
0x002735        F3D00000                 push rLink;
0x002736        01200010                 r0 = Null + 16;
0x002737        D1B70005                 r9 = M[r5 + 5];
0x002738        D52B003B                 M[r9 + 59] = r0;
0x002739        E1F0FF3E                 call $sbcdec.silence_decoder;
0x00273A        DDF0EF33                 jump $pop_rLink_and_rts;

 <$sbcdec.init_tables>
0x00273B        F3D00000                 push rLink;
0x00273C        D1B70005                 r9 = M[r5 + 5];
0x00273D        E1F0FDC4                 call $sbcdec.private.init_tables;
0x00273E        E1F0FE9A                 call $sbc.private.init_tables_common;
0x00273F        DDF0EF2E                 jump $pop_rLink_and_rts;

 <$sbcenc.init_tables>
0x002740        F3D00000                 push rLink;
0x002741        D1B70004                 r9 = M[r5 + 4];
0x002742        E1F0FE83                 call $sbcenc.private.init_tables;
0x002743        E1F0FE95                 call $sbc.private.init_tables_common;
0x002744        DDF0EF29                 jump $pop_rLink_and_rts;

 <$sbcdec.byte_align>
0x002745        F3D00000                 push rLink;
0x002746        D12B003B                 r0 = M[r9 + 59];
0x002747        81220007                 r0 = r0 AND 0x7;
0x002748        E1F0FDF3                 call $sbcdec.getbits;
0x002749        DDF0EF24                 jump $pop_rLink_and_rts;

 <+0jybs02f6U0repKH1bMNTJYqjpZu/63Xt4grho4m5E=>
0x00274A        D12B0019                 r0 = M[r9 + 25];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00274B        DC0D0000                 if EQ rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00274C        D002000F                 Null = M[r0 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00274D        00200001                 if NE r0 = Null + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00274E        0002000F                 Null = r0 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00274F        DC0D000F                 rts;

 <Lz3TmQvWWbYUt+NcIb3Z9EJhTIKl8t0EfjqYhBfYS/o=>
0x002750        D12A0004                 r0 = M[r8 + 4];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002751        D52A0007                 M[r8 + 7] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002752        D12A0002                 r0 = M[r8 + 2];

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002753        D52A0003                 M[r8 + 3] = r0;

 <Q0wTVwoHQu7S9ifKrFjt2vgdtbV+SYeGNm5KGF7BAkM=>
0x002754        DC0D000F                 rts;

 <$sbc.init_static_common>
0x002755        DC0D000F                 rts;
...
------------------------------------------------------------------------
Region: flash.code
------------------------------------------------------------------------
...

 <$main>
0x003012        E1F00551                 call $_stack_initialise;
0x003013        E1F00527                 call $interrupt.initialise;
0x003014        E1F005D4                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x003015        E1F0057F                 call K+KJ6eYYsTFZC2qsAuHU5k+Ae2ER6+37dLNcxGzDF3Y=;
0x003016        E1F004DB                 call $pskey.initialise;
0x003017        E1F00576                 call .L0;
0x003018        E1F0D026                 call $flash.init_dmconst;
0x003019        FD0000FF 01305C22        r1 = Null + -41950;
0x00301B        01401039                 r2 = Null + 4153;
0x00301C        01502580                 r3 = Null + 9600;
0x00301D        E1F004C9                 call $message.register_handler;
0x00301E        01302C17                 r1 = Null + 11287;
0x00301F        01401070                 r2 = Null + 4208;
0x003020        015026C0                 r3 = Null + 9920;
0x003021        E1F004C5                 call $message.register_handler;
0x003022        FD0000FF 01305C1E        r1 = Null + -41954;
0x003024        01401071                 r2 = Null + 4209;
0x003025        01502710                 r3 = Null + 10000;
0x003026        E1F004C0                 call $message.register_handler;
0x003027        01302C1B                 r1 = Null + 11291;
0x003028        01401072                 r2 = Null + 4210;
0x003029        01503085                 r3 = Null + 12421;
0x00302A        E1F004BC                 call $message.register_handler;
0x00302B        FD0000FF 01305C1A        r1 = Null + -41958;
0x00302D        01401024                 r2 = Null + 4132;
0x00302E        015026EB                 r3 = Null + 9963;
0x00302F        E1F004B7                 call $message.register_handler;
0x003030        01302C1F                 r1 = Null + 11295;
0x003031        0140121A                 r2 = Null + 4634;
0x003032        01502613                 r3 = Null + 9747;
0x003033        E1F004B3                 call $message.register_handler;
0x003034        FD0000FF 01305C26        r1 = Null + -41946;
0x003036        0140129A                 r2 = Null + 4762;
0x003037        01502688                 r3 = Null + 9864;
0x003038        E1F004AE                 call $message.register_handler;
0x003039        01302C23                 r1 = Null + 11299;
0x00303A        0140121B                 r2 = Null + 4635;
0x00303B        01502695                 r3 = Null + 9877;
0x00303C        E1F004AA                 call $message.register_handler;
0x00303D        FD0000FF 01305C2A        r1 = Null + -41942;
0x00303F        0140129B                 r2 = Null + 4763;
0x003040        01502624                 r3 = Null + 9764;
0x003041        E1F004A5                 call $message.register_handler;
0x003042        E1F005B4                 call $spi_comm.initialize;
0x003043        01302C33                 r1 = Null + 11315;
0x003044        01407000                 r2 = Null + 28672;
0x003045        015034D9                 r3 = Null + 13529;
0x003046        E1F004A0                 call $message.register_handler;
0x003047        85408000                 r2 = Null OR 0x8000;
0x003048        E1F0E44B                 call $message.send_short;
0x003049        E1F0F1BB                 call $SendProcStart;
0x00304A        E1F0D9B5                 call $FrontEndStart;

 <$M.main.vm_go_wait>
0x00304B        FD0000FF 09005C98        Null = Null + M[$M.message.send_ready_wait_for_go.go_from_vm];
0x00304D        DD00FFFE                 if EQ jump $M.main.vm_go_wait;
0x00304E        E1F0EEC0                 call $ConfigureBackEnd;
0x00304F        E1F0EF0C                 call $BackEndStart;

 <$M.main.frame_loop>
0x003050        E1F003B8                 call $spi_comm.polled_service_routine;
0x003051        E1F0EF59                 call $DecodeInput;
0x003052        1900FE93                 M[0xfffe93] = Null + Null;
0x003053        E1F0F3E5                 call $ReceiveProcRun;
0x003054        E1F0F1DF                 call $SendProcRun;
0x003055        E1F0EF41                 call $EncodeOutput;
0x003056        092014A9                 r0 = Null + M[0x14a9];
0x003057        21020000                 Null = r0 - 0;
0x003058        DD00FFF8                 if EQ jump $M.main.frame_loop;
0x003059        0920142C                 r0 = Null + M[0x142c];
0x00305A        21020000                 Null = r0 - 0;
0x00305B        E110E0B6                 if NE call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;
0x00305C        DDF0FFF4                 jump $M.main.frame_loop;

 <$detect_end_of_aux_stream>
0x00305D        F3D00000                 push rLink;
0x00305E        09502C7F                 r3 = Null + M[$M.tone_in.aux_input_stream_available];
0x00305F        DD00E60E                 if EQ jump $pop_rLink_and_rts;
0x003060        01202C4C                 r0 = Null + 11340;
0x003061        E1F0E5AE                 call $cbuffer.calc_amount_data;
0x003062        81050002                 Null = r3 AND 0x2;
0x003063        DD100006                 if NE jump $M.detect_end_of_aux_stream.input_has_received;
0x003064        0002000F                 Null = r0 + Null;
0x003065        DD00E608                 if EQ jump $pop_rLink_and_rts;
0x003066        85550002                 r3 = r3 OR 0x2;
0x003067        19502C7F                 M[$M.tone_in.aux_input_stream_available] = r3 + Null;
0x003068        DDF0E605                 jump $pop_rLink_and_rts;

 <$M.detect_end_of_aux_stream.input_has_received>
0x003069        01202C4C                 r0 = Null + 11340;
0x00306A        E1F0E5E5                 call $cbuffer.get_write_address_and_size;
0x00306B        09602C82                 r4 = Null + M[$M.detect_end_of_aux_stream.last_write_address];
0x00306C        FD0000FF 09505C82        r3 = Null + M[$M.detect_end_of_aux_stream.write_move_counter];
0x00306E        01700000                 r5 = Null + 0;
0x00306F        2002006F                 Null = r0 - r4;
0x003070        E4750020                 if EQ r5 = r3 + 1;
0x003071        FD0000FF 19705C82        M[$M.detect_end_of_aux_stream.write_move_counter] = r5 + Null;
0x003073        21070028                 Null = r5 - 40;
0x003074        DD40E5F9                 if NEG jump $pop_rLink_and_rts;
0x003075        01401080                 r2 = Null + 4224;
0x003076        01500000                 r3 = Null + 0;
0x003077        01600000                 r4 = Null + 0;
0x003078        01700000                 r5 = Null + 0;
0x003079        01800000                 r6 = Null + 0;
0x00307A        E1F0E419                 call $message.send_short;
0x00307B        19002C7F                 M[$M.tone_in.aux_input_stream_available] = Null + Null;
0x00307C        FD0000FF 19005C82        M[$M.detect_end_of_aux_stream.write_move_counter] = Null + Null;
0x00307E        09202C4E                 r0 = Null + M[0x2c4e];
0x00307F        19202C4D                 M[0x2c4d] = r0 + Null;
0x003080        FD0000FF 09205C52        r0 = Null + M[0xff5c52];
0x003082        FD0000FF 19205C51        M[0xff5c51] = r0 + Null;
0x003084        DDF0E5E9                 jump $pop_rLink_and_rts;

 <$M.set_tone_rate.func>
0x003085        F3D00000                 push rLink;
0x003086        FD0000FF 015051FB        r3 = Null + -44549;
0x003088        01602BF0                 r4 = Null + 11248;
0x003089        81240001                 r0 = r2 AND 0x1;
0x00308A        19202BE8                 M[0x2be8] = r0 + Null;
0x00308B        00560001                 if NE r3 = r4 + Null;
0x00308C        19502B26                 M[$M.tone_in.copy_op_left.next_op] = r3 + Null;
0x00308D        01200007                 r0 = Null + 7;
0x00308E        0150000A                 r3 = Null + 10;
0x00308F        81040002                 Null = r2 AND 0x2;
0x003090        00250000                 if EQ r0 = r3 + Null;
0x003091        FD0000FF 19205BF9        M[0xff5bf9] = r0 + Null;
0x003093        19202BF5                 M[0x2bf5] = r0 + Null;
0x003094        8133FFFF                 r1 = r1 AND 0xffff;
0x003095        FD0000FF 19304FFF        M[$M.tone_in.current_tone_sampling_rate] = r1 + Null;
0x003097        01202C4C                 r0 = Null + 11340;
0x003098        E1F0E41F                 call $cbuffer.empty_buffer;
0x003099        FD0000FF 01205C50        r0 = Null + -41904;
0x00309B        E1F0E41C                 call $cbuffer.empty_buffer;
0x00309C        01C0000D                 r10 = Null + 13;
0x00309D        01200000                 r0 = Null + 0;
0x00309E        51200050                 I2 = Null + 80;
0x00309F        51600060                 I6 = Null + 96;
0x0030A0        E5F00002                 do $M.set_tone_rate.clear_loop;
0x0030A1        0300A9A9                 Null = Null + Null, M[I2,1] = r0, M[I6,1] = r0;

 <$M.set_tone_rate.clear_loop>
0x0030A2        E420002F                 r0 = Null + 1;
0x0030A3        19202C7F                 M[$M.tone_in.aux_input_stream_available] = r0 + Null;
0x0030A4        DDF0E5C9                 jump $pop_rLink_and_rts;

 <$M.A2DP_LOW_LATENCY_1MIC.SystemReInitialize.func>
0x0030A5        19001DDD                 M[$M.CVC_SYS.AlgReInit] = Null + Null;
0x0030A6        19001DDE                 M[$M.CVC_SYS.FrameCounter] = Null + Null;
0x0030A7        51900001                 M1 = Null + 1;
0x0030A8        FD0000E0 51000000        I0 = Null + -2097152;
0x0030AA        02002100                 Null = Null + Null, r0 = M[I0,M1];

 <$M.A2DP_LOW_LATENCY_1MIC.SystemReInitialize.lp_param_copy>
0x0030AB        02003100                 Null = Null + Null, r1 = M[I0,M1];
0x0030AC        D3200000                 r0 = M[r0 + Null];
0x0030AD        1832210F                 M[r1] = r0 + Null, r0 = M[I0,M1];
0x0030AE        0002000F                 Null = r0 + Null;
0x0030AF        DD10FFFC                 if NE jump $M.A2DP_LOW_LATENCY_1MIC.SystemReInitialize.lp_param_copy;
0x0030B0        FD000072 01307C97        r1 = Null + 7502999;
0x0030B2        0920266D                 r0 = Null + M[0x266d];
0x0030B3        81428002                 r2 = r0 AND 0x8002;
0x0030B4        FD000000 21048002        Null = r2 - 32770;
0x0030B6        00300001                 if NE r1 = Null + Null;
0x0030B7        193012C4                 M[0x12c4] = r1 + Null;
0x0030B8        81424000                 r2 = r0 AND 0x4000;
0x0030B9        19401302                 M[0x1302] = r2 + Null;
0x0030BA        0920266E                 r0 = Null + M[0x266e];
0x0030BB        192012C2                 M[0x12c2] = r0 + Null;
0x0030BC        F3D00000                 push rLink;
0x0030BD        FD0000FF 01605A69        r4 = Null + -42391;
0x0030BF        E1F0E523                 call $frame_sync.run_function_table;
0x0030C0        01602A56                 r4 = Null + 10838;
0x0030C1        E1F0E521                 call $frame_sync.run_function_table;
0x0030C2        DDF0E5AB                 jump $pop_rLink_and_rts;

 <$master_app_reset>
0x0030C3        F3D00000                 push rLink;
0x0030C4        09001F7F                 Null = Null + M[$M.set_dac_rate.local_play_back];
0x0030C5        DD000007                 if EQ jump $M.master_app_reset.pause_happened;
0x0030C6        01401080                 r2 = Null + 4224;
0x0030C7        01500000                 r3 = Null + 0;
0x0030C8        01600000                 r4 = Null + 0;
0x0030C9        01700000                 r5 = Null + 0;
0x0030CA        01800000                 r6 = Null + 0;
0x0030CB        E1F0E3C8                 call $message.send_short;

 <$M.master_app_reset.pause_happened>
0x0030CC        E1F0E562                 call $block_interrupts;
0x0030CD        09202C54                 r0 = Null + M[0x2c54];
0x0030CE        19202C53                 M[0x2c53] = r0 + Null;
0x0030CF        FD0000FF 09205C58        r0 = Null + M[0xff5c58];
0x0030D1        FD0000FF 19205C57        M[0xff5c57] = r0 + Null;
0x0030D3        09202C51                 r0 = Null + M[0x2c51];
0x0030D4        19202C50                 M[0x2c50] = r0 + Null;
0x0030D5        FD0000FF 09205C55        r0 = Null + M[0xff5c55];
0x0030D7        FD0000FF 19205C54        M[0xff5c54] = r0 + Null;
0x0030D9        E1F0E53E                 call $interrupt.unblock;
0x0030DA        DDF0E593                 jump $pop_rLink_and_rts;

 <$cvc_Set_PassThroughGains>
0x0030DB        FD0000FF 01205B8A        r0 = Null + -42102;
0x0030DD        1920004B                 M[0x4b] = r0 + Null;
0x0030DE        09601DDB                 r4 = Null + M[$M.CVC_SYS.cur_mode];
0x0030DF        E406003F                 Null = r4 - 1;
0x0030E0        DD000004                 if EQ jump $M.set_mode_gains.passthroughgains;
0x0030E1        0020000F                 r0 = Null + Null;
0x0030E2        E430002F                 r1 = Null + 1;
0x0030E3        DDF00003                 jump $M.set_mode_gains.setgains;

 <$M.set_mode_gains.passthroughgains>
0x0030E4        092026C9                 r0 = Null + M[0x26c9];
0x0030E5        093026CA                 r1 = Null + M[0x26ca];

 <$M.set_mode_gains.setgains>
0x0030E6        D5290000                 M[r7 + 0] = r0;
0x0030E7        D5390001                 M[r7 + 1] = r1;
0x0030E8        DC0D000F                 rts;

 <$M.CVC.Zero_DC_Nyquist.func>
0x0030E9        FD0000FF 09205C87        r0 = Null + M[$cvc_fftbins];
0x0030EB        E422003F                 r0 = r0 - 1;
0x0030EC        1890000F                 M[r7] = Null + Null;
0x0030ED        18A0000F                 M[r8] = Null + Null;
0x0030EE        D409002F                 M[r7 + r0] = Null;
0x0030EF        D40A002F                 M[r8 + r0] = Null;
0x0030F0        DC0D000F                 rts;
...

 <$M.oms270.process.func>
0x00312D        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00312E        00B9000F                 r9 = r7 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00312F        D12B0001                 r0 = M[r9 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003130        D13B0002                 r1 = M[r9 + 2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003131        83320000                 r1 = r1 AND r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003132        DD10E53B                 if NE jump $pop_rLink_and_rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003133        DDF00003                 jump bpQqDdJ7GnKL6TpeHJLg3mFi6n7rc5PQ20m4sGC1M6M=;

 <$dms100.process>
0x003134        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003135        E1F0CF42                 call Ev7dNKPeG2xnOvTSkybjJWfHpb4uvmPIwGjosszK91g=;

 <bpQqDdJ7GnKL6TpeHJLg3mFi6n7rc5PQ20m4sGC1M6M=>
0x003136        01AB004B                 r8 = r9 + 75;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003137        E1F0D119                 call hPnt4tbzQ7/ehb3ImN4eKIiGTK4r/O1F0m8bpsHkYM0=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003138        51800000                 M0 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003139        51900001                 M1 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00313A        FD000080 01200000        r0 = Null + -8388608;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00313C        1920149D                 M[$scratch.s3] = r0 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00313D        D1AB0000                 r8 = M[r9 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00313E        D12A000E                 r0 = M[r8 + 14];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00313F        E0020001                 if NE call r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003140        D12A0001                 r0 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003141        50B0002F                 M3 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003142        D12B003E                 r0 = M[r9 + 62];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003143        21020000                 Null = r0 - 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003144        DD100008                 if NE jump YmkgoPiZBMS9JMysibGDDpybFYdxIryF1MJyipr/RKg=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003145        E430002F                 r1 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003146        D53B003E                 M[r9 + 62] = r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003147        D12B0042                 r0 = M[r9 + 66];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003148        D13B0045                 r1 = M[r9 + 69];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003149        E1F0CF70                 call QzUSQzbGOX+O5TiZP6ht7pDGw5quRfNZ8xDdrJuTU8A=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00314A        D12B0036                 r0 = M[r9 + 54];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00314B        E1F0CF6E                 call QzUSQzbGOX+O5TiZP6ht7pDGw5quRfNZ8xDdrJuTU8A=;

 <YmkgoPiZBMS9JMysibGDDpybFYdxIryF1MJyipr/RKg=>
0x00314C        D12B002F                 r0 = M[r9 + 47];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00314D        E002000F                 call r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00314E        FD0000FF 19A0400F        M[$scratch.t2] = r8 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003150        D10B0003                 Null = M[r9 + 3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003151        DD000019                 if EQ jump aI2cZojmbaWInP3BES4Kp4MF/fUOFRhf8hldeSR51kk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003152        E1F0F5F8                 call +0jybs02f6U0repKH1bMNTJYqjpZu/63Xt4grho4m5E=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003153        DD100017                 if NE jump aI2cZojmbaWInP3BES4Kp4MF/fUOFRhf8hldeSR51kk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003154        D12B0031                 r0 = M[r9 + 49];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003155        DD000005                 if EQ jump QQn2V7kh2n72bimjyGGraYyDjmhp/z2d2v62pRXHX10=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003156        D3200000                 r0 = M[r0 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003157        D13B0016                 r1 = M[r9 + 22];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003158        2002003F                 Null = r0 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003159        DD40000C                 if NEG jump tER14x5oD5G6KEVioci7m5oxf+cN598oGaeAplJW+1Q=;

 <QQn2V7kh2n72bimjyGGraYyDjmhp/z2d2v62pRXHX10=>
0x00315A        D12B0034                 r0 = M[r9 + 52];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00315B        E422002F                 r0 = r0 + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00315C        D52B0034                 M[r9 + 52] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00315D        D12B0039                 r0 = M[r9 + 57];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00315E        D13B0043                 r1 = M[r9 + 67];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00315F        D14B0036                 r2 = M[r9 + 54];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003160        D16B000E                 r4 = M[r9 + 14];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003161        D18B0035                 r6 = M[r9 + 53];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003162        D15A0003                 r3 = M[r8 + 3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003163        E1F0D180                 call XTleAuKSXkJZvrK8G5yGw02OIg/RDXfNjZ9BUNw2798=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003164        D52B0043                 M[r9 + 67] = r0;

 <tER14x5oD5G6KEVioci7m5oxf+cN598oGaeAplJW+1Q=>
0x003165        D12B0039                 r0 = M[r9 + 57];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003166        D052000F                 r3 = M[r0 + Null];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003167        FD000006 210505BA        Null = r3 - 394682;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003169        DD100003                 if NE jump oGxWFi6iaqRP5/Djbz6/z/OJ8HKxOOe2GbiQrbnlyeA=;

 <aI2cZojmbaWInP3BES4Kp4MF/fUOFRhf8hldeSR51kk=>
0x00316A        FD0000FF 1900400F        M[$scratch.t2] = Null + Null;

 <oGxWFi6iaqRP5/Djbz6/z/OJ8HKxOOe2GbiQrbnlyeA=>
0x00316C        D18B003A                 r6 = M[r9 + 58];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00316D        D10B001C                 Null = M[r9 + 28];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00316E        00800001                 if NE r6 = Null + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00316F        D12B0042                 r0 = M[r9 + 66];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003170        D13B0049                 r1 = M[r9 + 73];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003171        D14B0039                 r2 = M[r9 + 57];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003172        D17B004A                 r5 = M[r9 + 74];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003173        50A0007F                 M2 = Null + r5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003174        D17A0003                 r5 = M[r8 + 3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003175        E1F0D030                 call 5qej8zWivTtW+Arz9KL+AcCuwo3yGWKg2w195i0OhMg=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003176        D12B0039                 r0 = M[r9 + 57];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003177        D13B0035                 r1 = M[r9 + 53];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003178        014B0034                 r2 = r9 + 52;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003179        D15A0003                 r3 = M[r8 + 3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00317A        E1F0D1E5                 call BGp1oXpMOrJuJjOBXh7uNpQlWEGyeIEIMsGWvL2Yc58=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00317B        D12A0010                 r0 = M[r8 + 16];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00317C        E0020001                 if NE call r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00317D        D12B003C                 r0 = M[r9 + 60];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00317E        E0020001                 if NE call r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00317F        D52B003A                 M[r9 + 58] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003180        51A00001                 M2 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003181        D10B001C                 Null = M[r9 + 28];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003182        50A00000                 if EQ M2 = Null + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003183        D13A0005                 r1 = M[r8 + 5];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003184        D12B0046                 r0 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003185        74B300AF                 M3 = r1 - M2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003186        472A0000                 r0 = r0 + M2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003187        E1F0CF01                 call S9wFkBPn43yBkrNvnb1ryBNB29/gcMHFe2/67ce7yCg=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003188        D51B003F                 M[r9 + 63] = rMAC;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003189        D12B0017                 r0 = M[r9 + 23];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00318A        2001002F                 Null = rMAC - r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00318B        DDC00017                 if GT jump 668XN8o/0AZjGiIiG8iauFegiuwxZ7EK27eSoRii6UE=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00318C        D10B003A                 Null = M[r9 + 58];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00318D        DD100015                 if NE jump 668XN8o/0AZjGiIiG8iauFegiuwxZ7EK27eSoRii6UE=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00318E        0030000F                 r1 = Null + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00318F        D12B0038                 r0 = M[r9 + 56];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003190        21020002                 Null = r0 - 2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003191        44300095                 if POS r1 = Null + M1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003192        44220094                 if NEG r0 = r0 + M1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003193        D52B0038                 M[r9 + 56] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003194        D53B0033                 M[r9 + 51] = r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003195        D15A0001                 r3 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003196        50B0005F                 M3 = Null + r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003197        D14A0004                 r2 = M[r8 + 4];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003198        D15B0032                 r3 = M[r9 + 50];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003199        FD000001 21050000        Null = r3 - 65536;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00319B        50B0004D                 if LE M3 = Null + r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00319C        D12B0046                 r0 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00319D        D13B0046                 r1 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00319E        FD000040 01400000        r2 = Null + 4194304;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031A0        E1F0CF0F                 call rTWvzW5i79OGTbIwGDEc6HJo4NDTPbnUxsAj0sgdY6I=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031A1        DDF00003                 jump x/GkeDbsmD4qNNn4vohQNw3Jk3j4qq8QGvH7Ti6GOqQ=;

 <668XN8o/0AZjGiIiG8iauFegiuwxZ7EK27eSoRii6UE=>
0x0031A2        D50B0033                 M[r9 + 51] = Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031A3        D50B0038                 M[r9 + 56] = Null;

 <x/GkeDbsmD4qNNn4vohQNw3Jk3j4qq8QGvH7Ti6GOqQ=>
0x0031A4        D10B001C                 Null = M[r9 + 28];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031A5        E100003A                 if EQ call DzHv0Xglld8CE+S1eIZepN55ZKyedu3/4jas/LMP3ts=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031A6        E1F0F5A4                 call +0jybs02f6U0repKH1bMNTJYqjpZu/63Xt4grho4m5E=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031A7        DD100008                 if NE jump 4E30+isxVJ2xUKpMozGzg5J0R1Ox5L7FmNWQkk0xqYI=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031A8        D12A0001                 r0 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031A9        50B0002F                 M3 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031AA        D12B0042                 r0 = M[r9 + 66];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031AB        D13B0036                 r1 = M[r9 + 54];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031AC        D14B0046                 r2 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031AD        D15B0013                 r3 = M[r9 + 19];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031AE        E1F0D172                 call dPBSBIlxSMM31uA7ipdA/kCh283OTQggPQjUZDvgqM4=;

 <4E30+isxVJ2xUKpMozGzg5J0R1Ox5L7FmNWQkk0xqYI=>
0x0031AF        D12B0030                 r0 = M[r9 + 48];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031B0        E002000F                 call r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031B1        D13B003D                 r1 = M[r9 + 61];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031B2        D12B003A                 r0 = M[r9 + 58];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031B3        E0030001                 if NE call r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031B4        D12A000F                 r0 = M[r8 + 15];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031B5        E0020001                 if NE call r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031B6        DDF0E4B7                 jump $pop_rLink_and_rts;
...

 <7jO1t6bgRRpem8UgskSgfZRS2s4JHOV2vgFwN6rbelg=>
0x0031D1        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031D2        D15B0036                 r3 = M[r9 + 54];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031D3        D16B0046                 r4 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031D4        D17B0047                 r5 = M[r9 + 71];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031D5        E1F0D0B5                 call p+Wv4HQEHTVPSekvTITyjWabS8biU/6K2jjM8gEr/ks=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031D6        D15B0042                 r3 = M[r9 + 66];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031D7        D16B0045                 r4 = M[r9 + 69];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031D8        D17B0047                 r5 = M[r9 + 71];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031D9        E1F0D0B1                 call p+Wv4HQEHTVPSekvTITyjWabS8biU/6K2jjM8gEr/ks=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031DA        D12B0046                 r0 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031DB        D13B0045                 r1 = M[r9 + 69];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031DC        D14B0046                 r2 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031DD        E1F0D177                 call 2whzN+a8jHLu1eglHPliVlbF67SpRcxJsKvRoR5u3Ds=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031DE        DDF0E48F                 jump $pop_rLink_and_rts;

 <DzHv0Xglld8CE+S1eIZepN55ZKyedu3/4jas/LMP3ts=>
0x0031DF        D10B0038                 Null = M[r9 + 56];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031E0        DC0D0001                 if NE rts;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031E1        D14B0049                 r2 = M[r9 + 73];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031E2        D1240000                 r0 = M[r2 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031E3        D1340001                 r1 = M[r2 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031E4        23230000                 r0 = r0 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031E5        D13A0009                 r1 = M[r8 + 9];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031E6        23230000                 r0 = r0 - r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031E7        D52B0032                 M[r9 + 50] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031E8        DC0D000F                 rts;

 <$M.oms270.apply_gain.func>
0x0031E9        D1A90000                 r8 = M[r7 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031EA        D12A0000                 r0 = M[r8 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031EB        50B0002F                 M3 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031EC        0129000B                 r0 = r7 + 11;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031ED        01390008                 r1 = r7 + 8;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031EE        D149000F                 r2 = M[r7 + 15];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031EF        D1590018                 r3 = M[r7 + 24];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031F0        DDF0CE76                 jump V6FoBiRuWtLPAItHXB+oclaeO9epdUBF1eTN4PFBj9g=;

 <wfxEMe+8OX0q7bdSDHT315ANaTgPNZN1KgEU4a52+mI=>
0x0031F1        D12B0046                 r0 = M[r9 + 70];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031F2        5050002F                 I5 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031F3        D12B0045                 r0 = M[r9 + 69];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031F4        5030002F                 I3 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031F5        5120149D                 I2 = Null + 5277;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031F6        51A00000                 M2 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0031F7        DDF0CFE5                 jump LML7XYAegZgjeWF3TbF080F5zM2cGlwAo+rI9YyqDAk=;
...

 <$M.oms270.initialize.func>
0x003284        00B9000F                 r9 = r7 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003285        D5AB003B                 M[r9 + 59] = r8;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003286        E420002F                 r0 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003287        D52B004A                 M[r9 + 74] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003288        DDF00004                 jump ehtmyPTA//4SiRkYpbLm+sdlVubr10cmIhIOyUg/I8Y=;

 <$oms270.initialize>
0x003289        00BA000F                 r9 = r8 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00328A        E420002F                 r0 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00328B        D52B004A                 M[r9 + 74] = r0;

 <ehtmyPTA//4SiRkYpbLm+sdlVubr10cmIhIOyUg/I8Y=>
0x00328C        F3D00000                 push rLink;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00328D        D1AB0000                 r8 = M[r9 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00328E        D12B000E                 r0 = M[r9 + 14];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00328F        D52B0043                 M[r9 + 67] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003290        012B004F                 r0 = r9 + 79;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003291        D10B0004                 Null = M[r9 + 4];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003292        00200000                 if EQ r0 = Null + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003293        D52B0031                 M[r9 + 49] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003294        01200044                 r0 = Null + 68;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003295        01300022                 r1 = Null + 34;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003296        D10B0031                 Null = M[r9 + 49];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003297        00230001                 if NE r0 = r1 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003298        01300022                 r1 = Null + 34;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003299        D10B001C                 Null = M[r9 + 28];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00329A        00230001                 if NE r0 = r1 + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00329B        D52B0035                 M[r9 + 53] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00329C        D1CA0001                 r10 = M[r8 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00329D        50B000CF                 M3 = Null + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00329E        210C0041                 Null = r10 - 65;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00329F        DD100007                 if NE jump LUl8AGcUplcw2TDeZ3xiuywW5iBiIk19Fpdexz6a4lw=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032A0        D12B000F                 r0 = M[r9 + 15];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032A1        D52B0041                 M[r9 + 65] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032A2        D12B0010                 r0 = M[r9 + 16];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032A3        D52B0042                 M[r9 + 66] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032A4        D12B0011                 r0 = M[r9 + 17];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032A5        DDF00006                 jump sgm4YO3FNv6VXY0r4BwSO/9+ow9A9u22/UMqlTnMOmU=;

 <LUl8AGcUplcw2TDeZ3xiuywW5iBiIk19Fpdexz6a4lw=>
0x0032A6        D12B0011                 r0 = M[r9 + 17];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032A7        D52B0041                 M[r9 + 65] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032A8        032C0000                 r0 = r0 + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032A9        D52B0042                 M[r9 + 66] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032AA        032C0000                 r0 = r0 + r10;

 <sgm4YO3FNv6VXY0r4BwSO/9+ow9A9u22/UMqlTnMOmU=>
0x0032AB        D52B0036                 M[r9 + 54] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032AC        032C0000                 r0 = r0 + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032AD        D52B0037                 M[r9 + 55] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032AE        032C0000                 r0 = r0 + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032AF        D52B0039                 M[r9 + 57] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B0        D12B0012                 r0 = M[r9 + 18];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B1        D52B0045                 M[r9 + 69] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B2        032C0000                 r0 = r0 + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B3        D52B0046                 M[r9 + 70] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B4        032C0000                 r0 = r0 + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B5        D52B0047                 M[r9 + 71] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B6        032C0000                 r0 = r0 + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B7        D52B0048                 M[r9 + 72] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B8        032C0000                 r0 = r0 + r10;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032B9        D52B0049                 M[r9 + 73] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032BA        FD00007F 0130FFFF        r1 = Null + 8388607;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032BC        D12B0041                 r0 = M[r9 + 65];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032BD        E1F0CE04                 call TGGwYCI2GX0yN90BloPz8GKWQ5jVvxinJAT40/dsCjk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032BE        FD0000FF 01300000        r1 = Null + -65536;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032C0        D12B0037                 r0 = M[r9 + 55];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032C1        E1F0CE00                 call TGGwYCI2GX0yN90BloPz8GKWQ5jVvxinJAT40/dsCjk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032C2        D18A0003                 r6 = M[r8 + 3];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032C3        D1780000                 r5 = M[r6 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032C4        50B7007F                 M3 = r5 + r5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032C5        D12B0039                 r0 = M[r9 + 57];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032C6        FD000006 013005BA        r1 = Null + 394682;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032C8        E1F0CDF9                 call TGGwYCI2GX0yN90BloPz8GKWQ5jVvxinJAT40/dsCjk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032C9        D12B0035                 r0 = M[r9 + 53];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032CA        9B270000                 r0 = r0 * r5 (int);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032CB        50B0002F                 M3 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032CC        D12B0043                 r0 = M[r9 + 67];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032CD        E1F0CDF4                 call TGGwYCI2GX0yN90BloPz8GKWQ5jVvxinJAT40/dsCjk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032CE        D12A0000                 r0 = M[r8 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032CF        50B0002F                 M3 = Null + r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032D0        D12B000F                 r0 = M[r9 + 15];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032D1        FD00007F 0130FFFF        r1 = Null + 8388607;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032D3        E1F0CDEE                 call TGGwYCI2GX0yN90BloPz8GKWQ5jVvxinJAT40/dsCjk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032D4        FD0000D0 01300000        r1 = Null + -3145728;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032D6        D12B0010                 r0 = M[r9 + 16];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032D7        E110CDEA                 if NE call TGGwYCI2GX0yN90BloPz8GKWQ5jVvxinJAT40/dsCjk=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032D8        D50B0038                 M[r9 + 56] = Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032D9        D50B0034                 M[r9 + 52] = Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032DA        E420002F                 r0 = Null + 1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032DB        D52B0033                 M[r9 + 51] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032DC        01200000                 r0 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032DD        D52B003E                 M[r9 + 62] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032DE        FD000040 01200000        r0 = Null + 4194304;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E0        D52B003F                 M[r9 + 63] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E1        01200000                 r0 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E2        D18B003B                 r6 = M[r9 + 59];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E3        D0280021                 if NE r0 = M[r6 + r0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E4        E0020001                 if NE call r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E5        D50B003A                 M[r9 + 58] = Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E6        D12B0004                 r0 = M[r9 + 4];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E7        D13B0007                 r1 = M[r9 + 7];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E8        D14B0006                 r2 = M[r9 + 6];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032E9        D15A0002                 r3 = M[r8 + 2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032EA        D52B004E                 M[r9 + 78] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032EB        D53B004C                 M[r9 + 76] = r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032EC        D54B004D                 M[r9 + 77] = r2;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032ED        D55B004B                 M[r9 + 75] = r3;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032EE        01AB004B                 r8 = r9 + 75;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032EF        E1F002F1                 call 6H7BnDSVNkGRjCWNOiIJ3fSJ4QOVUL87BacPH1UKE3w=;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032F0        D12B0042                 r0 = M[r9 + 66];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032F1        D52B0044                 M[r9 + 68] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032F2        FD000001 01200000        r0 = Null + 65536;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032F4        D52B0032                 M[r9 + 50] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032F5        01200331                 r0 = Null + 817;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032F6        D52B002F                 M[r9 + 47] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032F7        012000C6                 r0 = Null + 198;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032F8        D52B0030                 M[r9 + 48] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0032F9        DDF0E374                 jump $pop_rLink_and_rts;
...

 <$CVC.VolumeControl.MsgHandler>
0x003341        19301DDF                 M[$M.CVC_SYS.Volume] = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003342        8155000F                 r3 = r3 AND 0xf;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003343        19501DE0                 M[sC6arZHbUhdzY18PnDMy7G6InrX0iYs702MYOF6t09c=] = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003344        8166000F                 r4 = r4 AND 0xf;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003345        19601DE1                 M[Jlg0S4ehRy71uFnAyxsloeLiFBmC9+df2ovaB6+OLKQ=] = r4 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003346        2086005F                 r6 = r4 - r3;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003347        0080000D                 if LE r6 = Null + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003348        09201DD9                 r0 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003349        D1920010                 r7 = M[r0 + 16];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00334A        D18817C0                 r6 = M[r6 + 6080];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00334B        D589000D                 M[r7 + 13] = r6;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00334C        81340010                 r1 = r2 AND 0x10;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00334D        19301DE7                 M[$M.CVC_SYS.dsp_volume_flag] = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00334E        8134000F                 r1 = r2 AND 0xf;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00334F        19301DE8                 M[pHjKYCATPksaqCeVyNYrLq6bZVtcBCA0RBEQF6Gm+Ao=] = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003350        DDF00018                 jump $CVC.VolumeControl.SendCodecSettings;

 <$CVC.VolumeControl.Check_Aux_Volume>
0x003351        09201DD9                 r0 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003352        D1920010                 r7 = M[r0 + 16];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003353        D1290004                 r0 = M[r7 + 4];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003354        D1390005                 r1 = M[r7 + 5];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003355        01401DE1                 r2 = Null + 7649;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003356        01501DE0                 r3 = Null + 7648;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003357        2003002F                 Null = r1 - r0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003358        00450001                 if NE r2 = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003359        09301DE2                 r1 = Null + M[fhH6YQG3p+YHAMOsjHB56dhO27gxIw5D0AybVpfGNRE=];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00335A        19401DE2                 M[fhH6YQG3p+YHAMOsjHB56dhO27gxIw5D0AybVpfGNRE=] = r2 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00335B        2004003F                 Null = r2 - r1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00335C        DC0D0000                 if EQ rts;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00335D        DDF0000B                 jump $CVC.VolumeControl.SendCodecSettings;

 <$CVC.VolumeControl.Set_DAC_Adjustment>
0x00335E        09301DE3                 r1 = Null + M[$M.CVC_SYS.SysDACadjust];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00335F        2008003F                 Null = r6 - r1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003360        DC0D0000                 if EQ rts;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003361        09201DE4                 r0 = Null + M[59AvlyEdJbjrSKIIDYOoJed9dMMK//HEFAjE1+H6prI=];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003362        E422003F                 r0 = r0 - 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003363        19201DE4                 M[59AvlyEdJbjrSKIIDYOoJed9dMMK//HEFAjE1+H6prI=] = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003364        DC0D0005                 if POS rts;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003365        0120010B                 r0 = Null + 267;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003366        19201DE4                 M[59AvlyEdJbjrSKIIDYOoJed9dMMK//HEFAjE1+H6prI=] = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003367        19801DE3                 M[$M.CVC_SYS.SysDACadjust] = r6 + Null;

 <$CVC.VolumeControl.SendCodecSettings>
0x003368        0120000F                 r0 = Null + 15;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003369        09501DE2                 r3 = Null + M[fhH6YQG3p+YHAMOsjHB56dhO27gxIw5D0AybVpfGNRE=];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00336A        D3500000                 r3 = M[r3 + Null];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00336B        09551DE3                 r3 = r3 + M[$M.CVC_SYS.SysDACadjust];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00336C        2005002F                 Null = r3 - r0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00336D        00520005                 if POS r3 = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00336E        FD00007F 0160FFFF        r4 = Null + 8388607;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003370        0170FF66                 r5 = Null + -154;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003371        09001DE7                 Null = Null + M[$M.CVC_SYS.dsp_volume_flag];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003372        DD000007                 if EQ jump 0V1v9JJbpclSjnA0AYCw13FkuRyMBoC/+xBx1EFveI4=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003373        0085000F                 r6 = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003374        6565000F                 r4 = 15 - r3;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003375        19501DE9                 M[$M.CVC_SYS.dsp_volume_stat] = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003376        D16617C0                 r4 = M[r4 + 6080];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003377        09501DE8                 r3 = Null + M[pHjKYCATPksaqCeVyNYrLq6bZVtcBCA0RBEQF6Gm+Ao=];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003378        0170FFFE                 r5 = Null + -2;

 <0V1v9JJbpclSjnA0AYCw13FkuRyMBoC/+xBx1EFveI4=>
0x003379        094017F3                 r2 = Null + M[BUFnRnTxhnUConzrGV8j49cVsopR7L5zYTnFCuI+4Sc=];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00337A        092017F2                 r0 = Null + M[$M.CVC_SYS.SpiSysControl];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00337B        81028000                 Null = r0 AND 0x8000;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00337C        00540001                 if NE r3 = r2 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00337D        19501DEB                 M[$M.CVC_SYS.CurDAC] = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00337E        09201DD9                 r0 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00337F        0095000F                 r7 = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003380        09001DE7                 Null = Null + M[$M.CVC_SYS.dsp_volume_flag];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003381        00980001                 if NE r7 = r6 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003382        D1320011                 r1 = M[r0 + 17];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003383        D043009F                 r2 = M[r1 + r7];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003384        D1320010                 r1 = M[r0 + 16];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003385        D5430008                 M[r1 + 8] = r2;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003386        D1220000                 r0 = M[r0 + 0];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003387        DC020001                 if NE jump r0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003388        DC0D000F                 rts;
...

 <6ycNdX2mtgeYvJUYFS69JFO22ObLTlaF+GoLVl0mgow=>
0x0033CB        F3D00000                 push rLink;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033CC        E404002F                 Null = r2 + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033CD        DD100009                 if NE jump vf2HahyMQiivZIXmhMXUPwKVYasNxbiscxPNAw0jmHo=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033CE        09201DF5                 r0 = Null + M[1SlSpxp/sUMqUOPPXD3JyJZQCMSWgR1J54ImSzpaApU=];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033CF        DD000004                 if EQ jump s6U9Tbxkl5sIRHt6HwGkGCH8lj0XjOuJ96Uj5pYBErs=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033D0        19001DF5                 M[1SlSpxp/sUMqUOPPXD3JyJZQCMSWgR1J54ImSzpaApU=] = Null + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033D1        09401DEC                 r2 = Null + M[$M.CVC_SYS.Last_PsKey];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033D2        DDF00098                 jump Z0xO9joriro9mruwAAuzcNREp2JEgbtU8ioFPndKqjk=;

 <s6U9Tbxkl5sIRHt6HwGkGCH8lj0XjOuJ96Uj5pYBErs=>
0x0033D3        E420002F                 r0 = Null + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033D4        19201DF5                 M[1SlSpxp/sUMqUOPPXD3JyJZQCMSWgR1J54ImSzpaApU=] = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033D5        DDF0009A                 jump Tms4glUclO1P30CBt2gMN5VIfgmoSvWUMR12uEBglio=;

 <vf2HahyMQiivZIXmhMXUPwKVYasNxbiscxPNAw0jmHo=>
0x0033D6        51050001                 I0 = r3 + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033D7        E4C4003F                 r10 = r2 - 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033D8        5820000F                 I2 = I0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033D9        E5F00004                 do rS5vQV/SxPXAxIpB+splX/rikWdp/Z6dKaIt1GYFzQA=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033DA        03002800                 Null = Null + Null, r0 = M[I2,0];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033DB        8122FFFF                 r0 = r0 AND 0xffff;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033DC        0300A900                 Null = Null + Null, M[I2,1] = r0;

 <rS5vQV/SxPXAxIpB+splX/rikWdp/Z6dKaIt1GYFzQA=>
0x0033DD        01C00100                 r10 = Null + 256;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033DE        79220001                 I2 = I2 - 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033DF        03002100                 Null = Null + Null, r0 = M[I0,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033E0        2003002F                 Null = r1 - r0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033E1        DD10008E                 if NE jump Tms4glUclO1P30CBt2gMN5VIfgmoSvWUMR12uEBglio=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033E2        51900001                 M1 = Null + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033E3        03007100                 Null = Null + Null, r5 = M[I0,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033E4        00A0210F                 r8 = Null + Null, r0 = M[I0,M1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033E5        816200FF                 r4 = r0 AND 0xff;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033E6        006C0000                 if EQ r4 = r10 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033E7        8D220078                 r0 = r0 LSHIFT -8;

 <z3KqPVu5jyzA/kz0WyPSOSSbTOeOtx4diviKZCZzwLI=>
0x0033E8        8DAA007F                 r8 = r8 LSHIFT -1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033E9        DD100006                 if NE jump 7gvbq6SKPmBuzMsYW0aaLcUt92QOUfYinGGabd3+2H0=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033EA        6C02000F                 Null = I2 - I0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033EB        DD400017                 if NEG jump uIRqj6a41OtR7iJf9MnKcXb13DIAeFT6BsG6D4X6r2A=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033EC        0090510F                 r7 = Null + Null, r3 = M[I0,M1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033ED        FD000000 01A08000        r8 = Null + 32768;

 <7gvbq6SKPmBuzMsYW0aaLcUt92QOUfYinGGabd3+2H0=>
0x0033EF        800500AF                 Null = r3 AND r8;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033F0        DD00000F                 if EQ jump idosImOhwTNVK7p4cJ+mvx8c7wfuB5kRaRPTnaxRiVU=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033F1        FD0000FF 8999FFFF        r7 = r7 XOR 0xffffff;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033F3        DD000004                 if EQ jump e3n0pDwMA5C4PRd39QI9UwnbibWrvw1p1GPEloq8NI0=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033F4        03004100                 Null = Null + Null, r2 = M[I0,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033F5        8D840078                 r6 = r2 LSHIFT -8;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033F6        DDF00002                 jump 0E5U8GN7IvAtAUkdB1l5O26sE/dHpBx6ukDY+tmQDgk=;

 <e3n0pDwMA5C4PRd39QI9UwnbibWrvw1p1GPEloq8NI0=>
0x0033F7        818400FF                 r6 = r2 AND 0xff;

 <0E5U8GN7IvAtAUkdB1l5O26sE/dHpBx6ukDY+tmQDgk=>
0x0033F8        03003100                 Null = Null + Null, r1 = M[I0,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033F9        8D880010                 r6 = r6 LSHIFT 16;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033FA        87380000                 r1 = r1 OR r6;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033FB        09801DD9                 r6 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033FC        D188000A                 r6 = M[r6 + 10];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033FD        09881DF4                 r6 = r6 + M[778V4SlSJtnWjnHBspkr6HkYE9mwTV7XZYvVP/DX2bY=];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0033FE        D438002F                 M[r6 + r0] = r1;

 <idosImOhwTNVK7p4cJ+mvx8c7wfuB5kRaRPTnaxRiVU=>
0x0033FF        E422002F                 r0 = r0 + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003400        2002006F                 Null = r0 - r4;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003401        DD40FFE7                 if NEG jump z3KqPVu5jyzA/kz0WyPSOSSbTOeOtx4diviKZCZzwLI=;

 <uIRqj6a41OtR7iJf9MnKcXb13DIAeFT6BsG6D4X6r2A=>
0x003402        09401DF4                 r2 = Null + M[778V4SlSJtnWjnHBspkr6HkYE9mwTV7XZYvVP/DX2bY=];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003403        200600CF                 Null = r4 - r10;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003404        004400C0                 if EQ r2 = r2 + r10;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003405        19401DF4                 M[778V4SlSJtnWjnHBspkr6HkYE9mwTV7XZYvVP/DX2bY=] = r2 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003406        0047000F                 r2 = r5 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003407        DDF00063                 jump Z0xO9joriro9mruwAAuzcNREp2JEgbtU8ioFPndKqjk=;

 <$spi_comm.polled_service_routine>
0x003408        FD000000 0120AAAA        r0 = Null + 43690;
0x00340A        29020046                 Null = r0 - M[$M.spi_block.cmd_ready];
0x00340B        DC0D0001                 if NE rts;
0x00340C        F3D00000                 push rLink;
0x00340D        01C00032                 r10 = Null + 50;
0x00340E        FD0000FF 09305CA1        r1 = Null + M[$M.spi_comm.last_addr];
0x003410        09200045                 r0 = Null + M[$M.spi_block.command];
0x003411        FD000000 0190AAAA        r7 = Null + 43690;
0x003413        E5F00007                 do $M.spi_comm.polled_service_routine.loop;
0x003414        E403002F                 Null = r1 + 1;
0x003415        DD00000B                 if EQ jump $M.spi_comm.polled_service_routine.no_handler;
0x003416        D1430001                 r2 = M[r1 + 1];
0x003417        2002004F                 Null = r0 - r2;
0x003418        DD000003                 if EQ jump $M.spi_comm.polled_service_routine.found;
0x003419        D1330000                 r1 = M[r1 + 0];

 <$M.spi_comm.polled_service_routine.loop>
0x00341A        E1F001BD                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;

 <$M.spi_comm.polled_service_routine.found>
0x00341B        D1D30002                 rLink = M[r1 + 2];
0x00341C        01300005                 r1 = Null + 5;
0x00341D        09400049                 r2 = Null + M[$M.spi_block.cmd_length];
0x00341E        E00D000F                 call rLink;
0x00341F        01905555                 r7 = Null + 21845;

 <$M.spi_comm.polled_service_routine.no_handler>
0x003420        01205555                 r0 = Null + 21845;
0x003421        FD000000 0130AAAA        r1 = Null + 43690;
0x003423        19A00049                 M[$M.spi_block.cmd_length] = r8 + Null;
0x003424        19900048                 M[$M.spi_block.cmd_status] = r7 + Null;
0x003425        19200046                 M[$M.spi_block.cmd_ready] = r0 + Null;
0x003426        19300047                 M[$M.spi_block.cmd_complete] = r1 + Null;
0x003427        DDF0E246                 jump $pop_rLink_and_rts;

 <$M.oms270.wnr.initialize.func>
0x003428        D1780001                 r5 = M[r6 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003429        D1270000                 r0 = M[r5 + 0];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00342A        D5280006                 M[r6 + 6] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00342B        D1270001                 r0 = M[r5 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00342C        91320010                 r1 = r0 ASHIFT 16;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00342D        FD00002A 0120854B        r0 = Null + 2786635;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00342F        97320000                 r1 = r1 * r0 (frac);

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003430        FD000000 0133E82A        r1 = r1 + 59434;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003432        D5380007                 M[r6 + 7] = r1;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003433        D1270002                 r0 = M[r5 + 2];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003434        D5280005                 M[r6 + 5] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003435        D5280009                 M[r6 + 9] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003436        01200000                 r0 = Null + 0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003437        D5280004                 M[r6 + 4] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003438        D528000C                 M[r6 + 12] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003439        D12A0008                 r0 = M[r8 + 8];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00343A        D528000A                 M[r6 + 10] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00343B        D12A0007                 r0 = M[r8 + 7];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00343C        D528000B                 M[r6 + 11] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00343D        01200137                 r0 = Null + 311;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00343E        D13B0001                 r1 = M[r9 + 1];

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x00343F        81330008                 r1 = r1 AND 0x8;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003440        00200001                 if NE r0 = Null + Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003441        D52B003C                 M[r9 + 60] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003442        01200215                 r0 = Null + 533;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003443        D52B003D                 M[r9 + 61] = r0;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x003444        DC0D000F                 rts;
...

 <$M.cvc_message.LoadParams.func>
0x00345E        F3D00000                 push rLink;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00345F        09A01DD9                 r8 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003460        D19A0005                 r7 = M[r8 + 5];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003461        19901DDC                 M[$M.CVC_SYS.SysMode] = r7 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003462        19401DDA                 M[$M.CVC_SYS.cvc_bandwidth] = r2 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003463        F3300000                 push r1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003464        D12A000E                 r0 = M[r8 + 14];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003465        E0020001                 if NE call r0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003466        E1F0000B                 call g9sdQuKPN+Z9S8ebkD3Ms5e/6OBpFaTLcWWJwCmORJo=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003467        19001DF4                 M[778V4SlSJtnWjnHBspkr6HkYE9mwTV7XZYvVP/DX2bY=] = Null + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003468        F3440000                 pop r2;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003469        19401DEC                 M[$M.CVC_SYS.Last_PsKey] = r2 + Null;

 <Z0xO9joriro9mruwAAuzcNREp2JEgbtU8ioFPndKqjk=>
0x00346A        DD000005                 if EQ jump Tms4glUclO1P30CBt2gMN5VIfgmoSvWUMR12uEBglio=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00346B        01301DD3                 r1 = Null + 7635;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00346C        015033CB                 r3 = Null + 13259;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00346D        E1F0E038                 call $pskey.read_key;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00346E        DDF0E1FF                 jump $pop_rLink_and_rts;

 <Tms4glUclO1P30CBt2gMN5VIfgmoSvWUMR12uEBglio=>
0x00346F        E1F0016D                 call XEKVOdQVThSHuN2YMmgP7pTLot5pGNmwPFqF3aDorck=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003470        DDF0E1FD                 jump $pop_rLink_and_rts;

 <g9sdQuKPN+Z9S8ebkD3Ms5e/6OBpFaTLcWWJwCmORJo=>
0x003471        09601DD9                 r4 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003472        51900001                 M1 = Null + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003473        013017E8                 r1 = Null + 6120;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003474        5000003F                 I0 = Null + r1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003475        D1C6000B                 r10 = M[r4 + 11];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003476        504000CF                 I4 = Null + r10;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003477        D1C6000A                 r10 = M[r4 + 10];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003478        501000CF                 I1 = Null + r10;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003479        D1C60009                 r10 = M[r4 + 9];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00347A        47C90021                 r10 = r10 + M1, r0 = M[I4,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00347B        91CC007F                 r10 = r10 ASHIFT -1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00347C        01600008                 r4 = Null + 8;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00347D        E5F00009                 do hB08VPf9GJMaChXLWFtPdNE0sECT0im3DR/0De/LaHI=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00347E        8F266140                 r0 = r0 LSHIFT r4, r4 = M[I0,1], r2 = M[I4,0];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00347F        83466100                 r2 = r2 AND r4, r4 = M[I0,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003480        8F466151                 r2 = r2 LSHIFT r4, r4 = M[I0,1], r3 = M[I4,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003481        87240041                 r0 = r0 OR r2, r2 = M[I4,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003482        83466100                 r2 = r2 AND r4, r4 = M[I0,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003483        8F56A500                 r3 = r3 LSHIFT r4, M[I1,1] = r0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003484        87546121                 r3 = r3 OR r2, r4 = M[I0,1], r0 = M[I4,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003485        5000D53F                 I0 = Null + r1, M[I1,M1] = r3;

 <hB08VPf9GJMaChXLWFtPdNE0sECT0im3DR/0De/LaHI=>
0x003486        51C00000                 L0 = Null + 0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003487        DC0D000F                 rts;

 <$CVC.PowerUpReset>
0x003488        092017FF                 r0 = Null + M[Q9lKGCSMhNayjjn4Bp8rOBHSBwZhih/DEKSuiNa1Cdw=];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003489        DC0D0000                 if EQ rts;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00348A        190017FF                 M[Q9lKGCSMhNayjjn4Bp8rOBHSBwZhih/DEKSuiNa1Cdw=] = Null + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00348B        19A01DD9                 M[$M.CVC_SYS.InterfacePtr] = r8 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00348C        1900FE93                 M[0xfffe93] = Null + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00348D        F3D00000                 push rLink;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00348E        D12A0005                 r0 = M[r8 + 5];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00348F        19201DDC                 M[$M.CVC_SYS.SysMode] = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003490        19201DDB                 M[$M.CVC_SYS.cur_mode] = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003491        D12A0006                 r0 = M[r8 + 6];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003492        19201DE5                 M[$M.CVC_SYS.VolState] = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003493        D12A0008                 r0 = M[r8 + 8];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003494        19201DE6                 M[$M.CVC_SYS.CallState] = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003495        19201DEA                 M[$M.CVC_SYS.CurCallState] = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003496        E1F0FFDB                 call g9sdQuKPN+Z9S8ebkD3Ms5e/6OBpFaTLcWWJwCmORJo=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003497        016014C4                 r4 = Null + 5316;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003498        E1F0E0F3                 call $frame_sync.register_handlers;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003499        DDF0E1D4                 jump $pop_rLink_and_rts;

 <$M.cvc_message.SetMode.func>
0x00349A        09A01DD9                 r8 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00349B        19501DE6                 M[$M.CVC_SYS.CallState] = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00349C        D14A0007                 r2 = M[r8 + 7];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00349D        E444003F                 r2 = r2 - 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00349E        0003000F                 Null = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00349F        00300004                 if NEG r1 = Null + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A0        2004003F                 Null = r2 - r1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A1        00340004                 if NEG r1 = r2 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A2        09501DDC                 r3 = Null + M[$M.CVC_SYS.SysMode];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A3        19301DDC                 M[$M.CVC_SYS.SysMode] = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A4        23530000                 r3 = r3 - r1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A5        09301DDD                 r1 = Null + M[$M.CVC_SYS.AlgReInit];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A6        87350000                 r1 = r1 OR r3;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A7        19301DDD                 M[$M.CVC_SYS.AlgReInit] = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A8        F3D00000                 push rLink;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034A9        D12A0001                 r0 = M[r8 + 1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034AA        E002000F                 call r0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034AB        E1F00021                 call $cvc_spi_api.UpdateCallState;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034AC        DDF0E1C1                 jump $pop_rLink_and_rts;

 <$cmpd100.initialize>
0x0034AD        D12A000A                 r0 = M[r8 + 10];
0x0034AE        D13A000B                 r1 = M[r8 + 11];
0x0034AF        D14A000C                 r2 = M[r8 + 12];
0x0034B0        D15A000E                 r3 = M[r8 + 14];
0x0034B1        D16A000F                 r4 = M[r8 + 15];
0x0034B2        2073002F                 r5 = r1 - r0;
0x0034B3        CC17005F                 rMAC = r5 * r3 (SS);
0x0034B4        D51A0012                 M[r8 + 18] = rMAC;
0x0034B5        2074003F                 r5 = r2 - r1;
0x0034B6        CC17006F                 rMAC = r5 * r4 (SS);
0x0034B7        D51A0013                 M[r8 + 19] = rMAC;
0x0034B8        D15A000D                 r3 = M[r8 + 13];
0x0034B9        D16A0010                 r4 = M[r8 + 16];
0x0034BA        2075004F                 r5 = r3 - r2;
0x0034BB        CC17006F                 rMAC = r5 * r4 (SS);
0x0034BC        D51A0014                 M[r8 + 20] = rMAC;
0x0034BD        01300000                 r1 = Null + 0;
0x0034BE        D16A0007                 r4 = M[r8 + 7];
0x0034BF        1863000F                 M[r4] = r1 + Null;
0x0034C0        DC0D000F                 rts;

 <ymYejl3/bmny0XIU93LTGSywWkZ9Noed+Vnq6eNeafs=>
0x0034C1        F3D00000                 push rLink;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034C2        514017F2                 I4 = Null + 6130;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034C3        5000003F                 I0 = Null + r1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034C4        01C00004                 r10 = Null + 4;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034C5        E5F00003                 do jjcmmiMHv93/Sev7Td7sDFuxHEV2TLBTgWKV+DUtuFw=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034C6        03002100                 Null = Null + Null, r0 = M[I0,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034C7        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <jjcmmiMHv93/Sev7Td7sDFuxHEV2TLBTgWKV+DUtuFw=>
0x0034C8        E1F00004                 call $cvc_spi_api.UpdateCallState;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034C9        E1F0FE9F                 call $CVC.VolumeControl.SendCodecSettings;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034CA        01A00000                 r8 = Null + 0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034CB        DDF0E1A2                 jump $pop_rLink_and_rts;

 <$cvc_spi_api.UpdateCallState>
0x0034CC        092017F2                 r0 = Null + M[$M.CVC_SYS.SpiSysControl];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034CD        09401DE6                 r2 = Null + M[$M.CVC_SYS.CallState];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034CE        095017F4                 r3 = Null + M[$M.CVC_SYS.OvrCallState];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034CF        81024000                 Null = r0 AND 0x4000;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034D0        00450001                 if NE r2 = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034D1        19401DEA                 M[$M.CVC_SYS.CurCallState] = r2 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034D2        DC0D000F                 rts;

 <$message.send_ready_wait_for_go>
0x0034D3        F3D00000                 push rLink;
0x0034D4        01302C33                 r1 = Null + 11315;
0x0034D5        01407000                 r2 = Null + 28672;
0x0034D6        015034D9                 r3 = Null + 13529;
0x0034D7        E1F0000F                 call $message.register_handler;
0x0034D8        DDF00005                 jump $M.message.send_ready_wait_for_go.go_from_vm_setup_done;

 <$M.message.send_ready_wait_for_go.go_from_vm_handler>
0x0034D9        E420002F                 r0 = Null + 1;
0x0034DA        FD0000FF 19205C98        M[$M.message.send_ready_wait_for_go.go_from_vm] = r0 + Null;
0x0034DC        DC0D000F                 rts;

 <$M.message.send_ready_wait_for_go.go_from_vm_setup_done>
0x0034DD        85408000                 r2 = Null OR 0x8000;
0x0034DE        E1F0DFB5                 call $message.send_short;

 <$M.message.send_ready_wait_for_go.vm_go_wait>
0x0034DF        FD0000FF 09005C98        Null = Null + M[$M.message.send_ready_wait_for_go.go_from_vm];
0x0034E1        DD00FFFE                 if EQ jump $M.message.send_ready_wait_for_go.vm_go_wait;
0x0034E2        DDF0E18B                 jump $pop_rLink_and_rts;

 <$message.register_handler_with_mask>
0x0034E3        8966FFFF                 r4 = r4 XOR 0xffff;
0x0034E4        D5630003                 M[r1 + 3] = r4;
0x0034E5        DDF00003                 jump $M.message.register_handler.mask_field_set;

 <$message.register_handler>
0x0034E6        8520FFFF                 r0 = Null OR 0xffff;
0x0034E7        D5230003                 M[r1 + 3] = r0;

 <$M.message.register_handler.mask_field_set>
0x0034E8        F3D00000                 push rLink;
0x0034E9        E1F0E145                 call $block_interrupts;
0x0034EA        09202C96                 r0 = Null + M[$message.last_addr];
0x0034EB        D5230000                 M[r1 + 0] = r0;
0x0034EC        19302C96                 M[$message.last_addr] = r1 + Null;
0x0034ED        D5430001                 M[r1 + 1] = r2;
0x0034EE        D5530002                 M[r1 + 2] = r3;
0x0034EF        E1F0E128                 call $interrupt.unblock;
0x0034F0        DDF0E17D                 jump $pop_rLink_and_rts;

 <$pskey.initialise>
0x0034F1        F3D00000                 push rLink;
0x0034F2        FD0000FF 01305C3A        r1 = Null + -41926;
0x0034F4        FD000000 01408007        r2 = Null + 32775;
0x0034F6        015012A6                 r3 = Null + 4774;
0x0034F7        E1F0FFEF                 call $message.register_handler;
0x0034F8        01302C37                 r1 = Null + 11319;
0x0034F9        85408008                 r2 = Null OR 0x8008;
0x0034FA        015012A6                 r3 = Null + 4774;
0x0034FB        E1F0FFEB                 call $message.register_handler;
0x0034FC        DDF0E171                 jump $pop_rLink_and_rts;

 <BMAVyrHmBNvimJSe/m0EhFdl+4fvzoeCOAl7CdVQQL8=>
0x0034FD        09A01DD9                 r8 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034FE        D1AA000F                 r8 = M[r8 + 15];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0034FF        51900001                 M1 = Null + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003500        502000AF                 I2 = Null + r8;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003501        5040393F                 I4 = Null + r1, r1 = M[I2,M1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003502        00C3590F                 r10 = r1 + Null, r3 = M[I2,M1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003503        00AC000F                 r8 = r10 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003504        03003900                 Null = Null + Null, r1 = M[I2,1];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003505        E5F00003                 do d+6MVQ4zCoMhCxFN4h6X+uVasgs6ygOmL9OxJMteAsc=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003506        D3300000                 r1 = M[r1 + Null];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003507        030039B1                 Null = Null + Null, r1 = M[I2,1], M[I4,1] = r1;

 <d+6MVQ4zCoMhCxFN4h6X+uVasgs6ygOmL9OxJMteAsc=>
0x003508        D035000F                 r1 = M[r3 + Null];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003509        DC0D0000                 if EQ rts;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00350A        1830000F                 M[r1] = Null + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00350B        E455002F                 r3 = r3 + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00350C        DDF0FFFC                 jump d+6MVQ4zCoMhCxFN4h6X+uVasgs6ygOmL9OxJMteAsc=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00350D        DC0D000F                 rts;

 <$M.cvc_message.SetParam.func>
0x00350E        0003000F                 Null = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00350F        DC0D0004                 if NEG rts;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003510        09701DD9                 r5 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003511        D1870009                 r6 = M[r5 + 9];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003512        2003008F                 Null = r1 - r6;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003513        DC0D0005                 if POS rts;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003514        8155FFFF                 r3 = r3 AND 0xffff;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003515        8D440010                 r2 = r2 LSHIFT 16;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003516        87450000                 r2 = r2 OR r3;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003517        D187000A                 r6 = M[r5 + 10];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003518        D448003F                 M[r6 + r1] = r2;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003519        03060000                 Null = Null + r4;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00351A        DD1000C2                 if NE jump XEKVOdQVThSHuN2YMmgP7pTLot5pGNmwPFqF3aDorck=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00351B        D1870005                 r6 = M[r5 + 5];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00351C        19801DDC                 M[$M.CVC_SYS.SysMode] = r6 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00351D        DC0D000F                 rts;

 <$M.cvc_message.GetParam.func>
0x00351E        0053000F                 r3 = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00351F        09701DD9                 r5 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003520        0063000F                 r4 = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003521        00600004                 if NEG r4 = Null + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003522        D1870009                 r6 = M[r5 + 9];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003523        2003008F                 Null = r1 - r6;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003524        00600005                 if POS r4 = Null + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003525        D187000A                 r6 = M[r5 + 10];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003526        D3860000                 r6 = M[r6 + r4];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003527        8D780070                 r5 = r6 LSHIFT -16;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003528        8188FFFF                 r6 = r6 AND 0xffff;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003529        F3D00000                 push rLink;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00352A        01401011                 r2 = Null + 4113;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00352B        E1F0DF68                 call $message.send_short;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00352C        DDF0E141                 jump $pop_rLink_and_rts;

 <$CVC.Start>
0x00352D        F3D00000                 push rLink;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00352E        09201DD9                 r0 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00352F        01401000                 r2 = Null + 4096;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003530        D152000C                 r3 = M[r0 + 12];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003531        D1620004                 r4 = M[r0 + 4];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003532        8D660078                 r4 = r4 LSHIFT -8;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003533        E1F0DF60                 call $message.send_short;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003534        09A01DD9                 r8 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003535        D12A0003                 r0 = M[r8 + 3];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003536        01302288                 r1 = Null + 8840;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003537        015017E3                 r3 = Null + 6115;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003538        E1F0FF0D                 call 15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x003539        DDF0E134                 jump $pop_rLink_and_rts;

 <$interrupt.initialise>
0x00353A        01200015                 r0 = Null + 21;
0x00353B        1920FE14                 M[0xfffe14] = r0 + Null;
0x00353C        01200311                 r0 = Null + 785;
0x00353D        1920FE15                 M[0xfffe15] = r0 + Null;
0x00353E        E420002F                 r0 = Null + 1;
0x00353F        1920FE11                 M[0xfffe11] = r0 + Null;
0x003540        1920FE12                 M[0xfffe12] = r0 + Null;
0x003541        1920FE13                 M[0xfffe13] = r0 + Null;
0x003542        1900FE4E                 M[0xfffe4e] = Null + Null;
0x003543        85EE0080                 rFlags = rFlags OR 0x80;
0x003544        DC0D000F                 rts;
0x003545        DDF0CABB                 jump $reset;
0x003546        DDF0CABC                 jump $interrupt.handler;

 <$audio_proc.peq.initialize>
0x003547        D1A90003                 r8 = M[r7 + 3];
0x003548        D12A0000                 r0 = M[r8 + 0];
0x003549        812200FF                 r0 = r0 AND 0xff;
0x00354A        D5290006                 M[r7 + 6] = r0;
0x00354B        E432002F                 r1 = r0 + 1;
0x00354C        91C30001                 r10 = r1 ASHIFT 1;
0x00354D        D5C90007                 M[r7 + 7] = r10;
0x00354E        01390009                 r1 = r7 + 9;
0x00354F        D5390004                 M[r7 + 4] = r1;
0x003550        99C20005                 r10 = r0 * 5 (int);
0x003551        D5C90008                 M[r7 + 8] = r10;
0x003552        012A0003                 r0 = r8 + 3;
0x003553        D5290005                 M[r7 + 5] = r0;
0x003554        DC0D000F                 rts;

 <$audio_proc.hq_peq.initialize>
0x003555        D1A90003                 r8 = M[r7 + 3];
0x003556        D12A0000                 r0 = M[r8 + 0];
0x003557        812200FF                 r0 = r0 AND 0xff;
0x003558        D5290006                 M[r7 + 6] = r0;
0x003559        99C20003                 r10 = r0 * 3 (int);
0x00355A        01CC0002                 r10 = r10 + 2;
0x00355B        D5C90007                 M[r7 + 7] = r10;
0x00355C        01390009                 r1 = r7 + 9;
0x00355D        D5390004                 M[r7 + 4] = r1;
0x00355E        99C20005                 r10 = r0 * 5 (int);
0x00355F        D5C90008                 M[r7 + 8] = r10;
0x003560        012A0003                 r0 = r8 + 3;
0x003561        D5290005                 M[r7 + 5] = r0;
0x003562        DC0D000F                 rts;

 <$_stack_initialise>
0x003563        FD0000FF 01B03D80        r9 = Null + -49792;
0x003565        19B0FE67                 M[0xfffe67] = r9 + Null;
0x003566        FD0000FF 01B03CC1        r9 = Null + -49983;
0x003568        19B0FE66                 M[0xfffe66] = r9 + Null;
0x003569        19B0FE68                 M[0xfffe68] = r9 + Null;
0x00356A        19B0FE6A                 M[0xfffe6a] = r9 + Null;
0x00356B        E420002F                 r0 = Null + 1;
0x00356C        1920FE9F                 M[0xfffe9f] = r0 + Null;
0x00356D        DC0D000F                 rts;

 <$audio_proc.peq.zero_delay_data>
0x00356E        F3C00000                 push r10;
0x00356F        D1C90002                 r10 = M[r7 + 2];
0x003570        E4CC002F                 r10 = r10 + 1;
0x003571        91CC0001                 r10 = r10 ASHIFT 1;
0x003572        01390009                 r1 = r7 + 9;
0x003573        5000003F                 I0 = Null + r1;
0x003574        0030000F                 r1 = Null + Null;
0x003575        E5F00002                 do $M.audio_proc.peq.zero_delay_data.init_dly_ln_loop;
0x003576        0300B100                 Null = Null + Null, M[I0,1] = r1;

 <$M.audio_proc.peq.zero_delay_data.init_dly_ln_loop>
0x003577        F3C40000                 pop r10;
0x003578        DC0D000F                 rts;

 <$audio_proc.hq_peq.zero_delay_data>
0x003579        F3C00000                 push r10;
0x00357A        D1C90002                 r10 = M[r7 + 2];
0x00357B        99CC0003                 r10 = r10 * 3 (int);
0x00357C        01CC0002                 r10 = r10 + 2;
0x00357D        01390009                 r1 = r7 + 9;
0x00357E        5000003F                 I0 = Null + r1;
0x00357F        0030000F                 r1 = Null + Null;
0x003580        E5F00002                 do $M.audio_proc.hq_peq.zero_delay_data.init_dly_ln_loop;
0x003581        0300B100                 Null = Null + Null, M[I0,1] = r1;

 <$M.audio_proc.hq_peq.zero_delay_data.init_dly_ln_loop>
0x003582        F3C40000                 pop r10;
0x003583        DC0D000F                 rts;

 <$spi_comm.register_handler>
0x003584        F3D00000                 push rLink;
0x003585        FD0000FF 09205CA1        r0 = Null + M[$M.spi_comm.last_addr];
0x003587        D5230000                 M[r1 + 0] = r0;
0x003588        FD0000FF 19305CA1        M[$M.spi_comm.last_addr] = r1 + Null;
0x00358A        D5430001                 M[r1 + 1] = r2;
0x00358B        D5530002                 M[r1 + 2] = r3;
0x00358C        DDF0E0E1                 jump $pop_rLink_and_rts;
...

 <$cbuffer.initialise>
0x003594        F3D00000                 push rLink;
0x003595        01302C2F                 r1 = Null + 11311;
0x003596        85408001                 r2 = Null OR 0x8001;
0x003597        01500C33                 r3 = Null + 3123;
0x003598        E1F0FF4E                 call $message.register_handler;
0x003599        DDF0E0D4                 jump $pop_rLink_and_rts;

 <5t0kutVmVp/001S89SX8KZhAeUQVTeJ/xF1xceRHd0Q=>
0x00359A        09A01DD9                 r8 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00359B        D15A000A                 r3 = M[r8 + 10];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00359C        D16A0009                 r4 = M[r8 + 9];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00359D        D17A000B                 r5 = M[r8 + 11];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00359E        1835000F                 M[r1] = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x00359F        D5630001                 M[r1 + 1] = r4;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035A0        D5730002                 M[r1 + 2] = r5;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035A1        01A00003                 r8 = Null + 3;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035A2        DC0D000F                 rts;

 <xfuSxDRWt3C5WGGDBr9dOKsiYruo6le4oqxYteSiu44=>
0x0035A3        09A01DD9                 r8 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035A4        D15A000C                 r3 = M[r8 + 12];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035A5        D17A0004                 r5 = M[r8 + 4];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035A6        D18A000D                 r6 = M[r8 + 13];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035A7        1835000F                 M[r1] = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035A8        D5730001                 M[r1 + 1] = r5;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035A9        D5830002                 M[r1 + 2] = r6;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035AA        01A00003                 r8 = Null + 3;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035AB        DC0D000F                 rts;
...

 <nErAIxtMRgXr3K0fZ8+j9smC+obytz7gmyeoZmexrn0=>
0x0035B5        E420002F                 r0 = Null + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035B6        19201DF2                 M[$M.CVC_SYS.ssr_started] = r0 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035B7        DC0D000F                 rts;

 <TM8GL8WVlZlTram+Mly5iX6az68WAXc+H3pqQ8THTe4=>
0x0035B8        19301DEF                 M[$M.CVC_SYS.ssr_noise_base] = r1 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035B9        19401DF0                 M[$M.CVC_SYS.ssr_uncert_offset] = r2 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035BA        19501DF1                 M[$M.CVC_SYS.ssr_time_out] = r3 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035BB        19601DF3                 M[$M.CVC_SYS.ssr_aec_initial_adapt] = r4 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035BC        DC0D000F                 rts;
...

 <kKqjjcnbAo9aQJlJG2A3RzAv9T2Tl30C5jpA9rXSxYo=>
0x0035CD        F3D00000                 push rLink;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035CE        01401009                 r2 = Null + 4105;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035CF        09501DDE                 r3 = Null + M[$M.CVC_SYS.FrameCounter];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035D0        E1F0DEC3                 call $message.send_short;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035D1        DDF0E09C                 jump $pop_rLink_and_rts;
...

 <$error>
0x0035D7        81EEFF7F                 rFlags = rFlags AND 0xff7f;
0x0035D8        09B02C94                 r9 = Null + M[$error.handler];
0x0035D9        DC0B0001                 if NE jump r9;

 <$M.error.error_loop>
0x0035DA        E400001F                 break;
0x0035DB        DDF0FFFF                 jump $M.error.error_loop;

 <XEKVOdQVThSHuN2YMmgP7pTLot5pGNmwPFqF3aDorck=>
0x0035DC        E4A0002F                 r8 = Null + 1;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035DD        19A01DDD                 M[$M.CVC_SYS.AlgReInit] = r8 + Null;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035DE        01A00000                 r8 = Null + 0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035DF        DDF0FD89                 jump $CVC.VolumeControl.SendCodecSettings;

 <6H7BnDSVNkGRjCWNOiIJ3fSJ4QOVUL87BacPH1UKE3w=>
0x0035E0        D50A0004                 M[r8 + 4] = Null;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0035E1        012A0005                 r0 = r8 + 5;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0035E2        51B0001B                 M3 = Null + 27;

 <15XAEcfNNqq9HRlPnV+aUGeuFtA02swH0uwCnyCnmRg=>
0x0035E3        DDF0CADD                 jump 1cE5AKQs4KjbEMRf5O3ga1ivNmUOwyOcJ8dExg1EJDU=;
...

 <$message.initialise>
0x0035E8        0920E000                 r0 = Null + M[0xffe000];
0x0035E9        FD0000FF 19205C97        M[$message.last_seq_sent] = r0 + Null;
0x0035EB        DC0D000F                 rts;
...

 <0cKgUeZPJvh8hqhlbB70pRDTh2CpUmzXk8NNUnVmfrI=>
0x0035F0        09A01DD9                 r8 = Null + M[$M.CVC_SYS.InterfacePtr];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035F1        D12A0002                 r0 = M[r8 + 2];

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035F2        DC020001                 if NE jump r0;

 <cQUmfOMSUIPnhImKOfs4AjFBV/Wtn343Pz0Y2hGjCyM=>
0x0035F3        DC0D000F                 rts;

 <$MeloD_Expansion.initialize>
0x0035F4        F3D00000                 push rLink;
0x0035F5        DDF0E078                 jump $pop_rLink_and_rts;

 <$spi_comm.initialize>
0x0035F6        01205555                 r0 = Null + 21845;
0x0035F7        19200046                 M[$M.spi_block.cmd_ready] = r0 + Null;
0x0035F8        DC0D000F                 rts;
========================================================================
datadump
========================================================================

------------------------------------------------------------------------
Region: DM1_REGION
------------------------------------------------------------------------
0x000000	$M.spi_block.SPI_BLOCK
0x000000	$M.spi_block.signature
        435352 204356 432043 4F4E54 
        524F4C 

0x000005	$M.spi_block.payload
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000045	$M.spi_block.command
        000000 

0x000046	$M.spi_block.cmd_ready
        00AAAA 

0x000047	$M.spi_block.cmd_complete
        005555 

0x000048	$M.spi_block.cmd_status
        005555 

0x000049	$M.spi_block.cmd_length
        000000 

0x00004A	$M.CVC.data.passthru_snd_gain
        002B7B 000000 FF5C2E FF5C2F 

0x00004E	$interrupt.start_time
        000000 

0x00004F	$M.math.misc.log_add.table_low
        F00800 

0x000050	$M.tone_in.tone_hist_left
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x00005D	$M.system_config.data.mute_cntrl_l_dm1
        002B61 FF5C88 000000 

0x000060	$M.tone_in.tone_hist_right
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x00006D	$M.system_config.data.mute_cntrl_r_dm1
        FF5B70 FF5C88 000000 

0x000070	$M.dac_out_resample.sr_hist_left
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00007C	$M.CVC.data.out_gain_dm1
        FF5B8A FF5B8A 0026C7 0026C8 

0x000080	$M.dac_out_resample.sr_hist_right
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00008C	$M.CVC.data.mute_cntrl_dm1
        FF5B8A 001DEA 000000 

0x00008F	$sbcdec.codec_struc
        000000 

0x000090	$dither_hist_left
        000000 000000 000000 000000 
        000000 

0x000095	$sbcenc.codec_struc
        000000 000000 000000 

0x000098	$dither_hist_right
        000000 000000 000000 000000 
        000000 

0x00009D	$M.CVC.data.RcvBuf_real
0x00009D	$M.CVC.data.block?0
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x00019F	$M.CVC.data.Ga_imag
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x0002A1	$M.CVC.data.L2PxR
        000000 000000 000000 000000 

0x0002A5	$M.CVC.data.Gr_imag
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0002E5	$M.CVC.data.SqGr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000325	$M.CVC.data.BExp_Ga
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x0003A6	$M.CVC.data.LPwrX0
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x000427	$M.CVC.data.RatFE
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000467	$M.CVC.data.Cng_Nz_Shape_Tab
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x0004E8	$M.dm1_scratch
0x0004E8	$M.CVC.data.W_ri
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 

0x0005EB	$M.CVC.data.Attenuation
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x00066C	$M.CVC.data.L_adaptA
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x0006ED	$M.CVC.data.L_adaptR
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x00076E	$M.CVC.data.ref_delay_buffer
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00094E	$M.CVC.data.D_real
0x00094E	$M.CVC.data.FFT_DM1
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x0009CF	$M.CVC.data.E_real
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x000A50	$M.CVC.data.X_real
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x000AD1	$M.CVC.data.bufd_inp
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000C39	$M.CVC.data.bufd_outp
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000DA1	$M.math.misc.log_add.table
        000001 000001 000001 000001 
        000001 000001 000001 000002 
        000002 000002 000002 000002 
        000002 000002 000002 000002 
        000003 000003 000003 000003 
        000003 000003 000003 000004 
        000004 000004 000004 000004 
        000005 000005 000005 000005 
        000006 000006 000006 000006 
        000007 000007 000007 000008 
        000008 000008 000009 000009 
        00000A 00000A 00000B 00000B 
        00000C 00000C 00000D 00000D 
        00000E 00000E 00000F 000010 
        000011 000011 000012 000013 
        000014 000015 000016 000017 
        000018 000019 00001A 00001B 
        00001C 00001D 00001F 000020 
        000022 000023 000025 000026 
        000028 00002A 00002C 00002E 
        000030 000032 000034 000036 
        000039 00003B 00003E 000041 
        000044 000047 00004A 00004D 
        000051 000054 000058 00005C 
        000060 000064 000069 00006D 
        000072 000077 00007C 000082 
        000088 00008E 000094 00009B 
        0000A2 0000A9 0000B0 0000B8 
        0000C0 0000C9 0000D2 0000DB 
        0000E5 0000EF 0000F9 000104 
        000110 00011C 000128 000136 
        000143 000152 000161 000170 
        000180 000191 0001A3 0001B6 
        0001C9 0001DD 0001F2 000208 
        00021F 000237 000250 00026B 
        000286 0002A2 0002C0 0002DF 
        000300 000322 000345 00036A 
        000390 0003B9 0003E3 00040E 
        00043C 00046C 00049E 0004D2 
        000508 000541 00057C 0005B9 
        0005FA 00063D 000683 0006CC 
        000719 000768 0007BB 000812 
        00086C 0008CB 00092D 000994 
        0009FF 000A6F 000AE3 000B5D 
        000BDC 000C60 000CEA 000D79 
        000E0F 000EAC 000F4E 000FF8 
        0010A9 001162 001222 0012EA 
        0013BB 001495 001577 001663 
        001759 00185A 001964 001A7A 
        001B9B 001CC8 001E01 001F48 
        00209B 0021FC 00236B 0024E9 
        002677 002814 0029C1 002B80 
        002D50 002F32 003127 00332F 
        00354B 00377C 0039C2 003C1E 
        003E91 00411B 0043BD 004678 
        00494C 004C3B 004F44 005269 
        0055AB 00590A 005C86 006021 
        0063DC 0067B6 006BB2 006FCE 
        00740E 007870 007CF5 00819F 
        00866E 008B63 00907E 0095C0 
        009B29 00A0BA 00A674 00AC56 
        00B262 00B898 00BEF9 00C584 
        00CC3A 00D31C 00DA29 00E162 
        00E8C7 00F058 00F816 010000 

0x000EA1	$sbcenc.audio_sample_js
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000FA1	$sbc.audio_sample
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0010A1	$M.CVC.data.sndLpX_queue
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x001129	$M.CVC.data.sndoms_LpXnz
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x0011AA	$fft.twiddle_real
        7FFFFF 000000 5A827A A57D86 
        7641AF CF043B 30FBC5 89BE51 
        7D8A5F E70748 471CED 959267 
        6A6D99 B8E313 18F8B8 8275A1 
        7F6237 F3742D 5133CD 9D0DFE 
        70E2CC C3A946 25280C 8582FB 
        7A7D05 DAD7F4 3C56BA 8F1D34 
        62F202 AECC33 0C8BD3 809DC9 
        7FD888 F9B827 55F5A5 A12883 
        73B5EC C945E0 2B1F35 877B7C 
        7C29FC E0E607 41CE1E 9235F3 
        66CF81 B3C020 12C810 8162AA 
        7E9D56 ED37F0 4C3FE0 99307F 
        6DCA0D BE31E2 1F19F9 83D604 
        788484 D4E0CB 36BA20 8C4A14 
        5ED77D AA0A5B 0647D9 802778 
        7FF622 FCDBD5 5842DD A34BDF 
        7504D3 CC210D 2E110A 8893B1 
        7CE3CF E3F47E 447ACD 93DBD7 
        68A69F B64BEB 15E214 81E26C 
        7F0992 F054D9 4EBFE9 9B1777 
        6F5F03 C0E8B6 2223A5 84A2FC 
        798A24 D7D947 398CDD 8DAAD3 
        60EC38 AC64D5 096A90 8058C9 
        7FA737 F69570 539B2B 9F13C8 
        72552D C67323 2826B9 8675DC 
        7B5D04 DDDC5B 3F174A 90A0FD 
        64E889 B14017 0FAB27 80F66E 
        7E1D94 EA1DEC 49B415 975961 
        6C2429 BB8533 1C0B82 831C31 
        776C4F D1EEF6 33DEF3 8AFB2D 
        5CB421 A7BD23 03242B 8009DE 

0x00122A	$M.math.misc.exp_int_table.table
        62E877 480E6E 3C8F93 35F0B5 
        3193F6 2E789F 2C24AA 2A55DA 
        28E4C7 27B863 26BFEA 25EFAC 
        253F3E 24A867 242672 23B5BB 
        235369 22FD37 22B14F 226E34 
        2232AC 21FDB1 21CE68 21A418 
        217E26 215C0B 213D55 2121A0 
        210897 20F1EF 20DD66 20CAC3 
        20B9D5 20AA6F 209C69 208FA1 
        2083F8 207952 206F97 2066B0 
        205E8B 205715 20503E 2049F9 
        204438 203EEF 203A14 20359E 
        203184 202DBE 202A45 202712 
        202420 202169 201EE8 201C99 
        201A78 201881 2016B0 201503 
        201377 201209 2010B7 200F7E 
        200E5D 200D51 200C5A 200B75 
        200AA1 2009DD 200927 20087F 
        2007E3 200752 2006CC 200650 
        2005DD 200573 200510 2004B4 
        20045F 200410 2003C6 200382 
        200343 200309 2002D2 2002A0 
        200271 200245 20021D 2001F7 
        2001D4 2001B3 200195 200179 
        20015F 200147 200130 20011B 
        200108 2000F5 2000E5 2000D5 
        2000C6 2000B9 2000AC 2000A0 
        200095 20008B 200081 200079 
        200070 200069 200062 20005B 
        200055 20004F 20004A 200045 
        200040 20003C 200037 200034 
        200030 20002D 20002A 200027 

0x0012AA	$M.CVC.data.aec_dm1
        0009CF FF39CF 001490 00094E 
        FF394E FF3699 0030F1 000000 
        000000 0002A5 FF3514 0002E5 
        FF34D4 FF3554 0004E8 0006ED 
        000000 000A50 FF3A50 001491 
        0026FA 001129 0026FA 0026FA 
        7FFFFF 200000 6ED9EB 400000 
        400000 400000 000000 000000 
        028000 000000 000002 000081 
        FFFFFC 0FE040 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        FF0000 FEA782 002756 002765 
        00280E 0027DA 00310E 002140 
        00009D FF32D0 00019F FF33D2 
        000000 000000 0002A1 000325 
        000000 0003A6 000427 FF3594 
        FF3597 FF3618 0005EB 00066C 
        000000 FFFEF4 000003 000000 
        000467 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x001308	$sbc.win_coefs_m8_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x001358	$M.math.misc.pow2_exp_pow2_table.table
        7FFFFF 7FE0D1 7F819E 7EE024 
        7DFA74 7CCEFD 7B5C9A 79A29E 
        77A0DF 7557C1 72C83E 6FF3F4 
        6CDD24 6986BB 65F456 622A3A 
        5E2D59 5A0345 55B229 5140B7 
        4CB61D 4819E6 4373ED 3ECC35 
        3A2AD6 3597D6 311B08 2CBBEC 
        28818F 247265 209433 1CEBF0 
        197DB1 164C99 135AD0 10A97E 
        0E38CE 0C07FC 0A155E 085E82 
        06E045 0596F3 047E6A 03923A 
        02CDCD 022C81 01A9CD 014157 
        00EF0B 00AF2D 007E5F 0059AF 
        003E92 002AE1 001CD8 001307 
        000C4D 0007C8 0004D1 0002EA 
        0001B8 0000FD 00008E 00004D 
        000029 

0x001399	$sbc.win_coefs_m4_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0013C1	$M.CVC.data.vsm_fdnlp_dm1
        000000 000000 000081 000000 
        001DEA 000000 000000 0014B4 
        000000 000000 00288C 000000 
        000000 000000 000000 0005EB 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 

0x0013E4	$M.math.log2_table.tab32_log2
        000000 000B5E 001664 002119 
        002B80 00359F 003F78 004910 
        00526A 005B88 00646F 006D20 
        00759E 007DEA 008608 008DFA 
        0095C0 009D5E 00A4D4 00AC24 
        00B350 00BA59 00C141 00C807 
        00CEAF 00D538 00DBA4 00E1F5 
        00E82A 00EE45 00F446 00FA2F 
        010000 

0x001405	$M.math.pow2_table.tab32_pow2
        3FFFFF 4166C2 42D561 444C06 
        45CAE0 47521C 48E1E9 4A7A77 
        4C1BF7 4DC69C 4F7A98 513821 
        52FF6A 54D0AC 56AC1E 5891FA 
        5A8279 5C7DD7 5E8451 609625 
        62B394 64DCDE 671245 69540E 
        6BA27D 6DFDDB 70666E 72DC82 
        756062 77F25C 7A92BE 7D41D8 
        7FFFFF 

0x001426	$M.A2DP_IN.decoder_codec_stream_struc
        000000 000000 000000 FF5C62 
        FF5C5F 002C5E 000000 000000 
        000000 007530 266666 000000 
        000001 0030C3 000000 000000 
        000000 000000 000000 000000 
        000000 

0x00143B	$sbcenc.analysis_y
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00144B	$sbc.scale_factor
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00145B	$sbc.scale_factor_js
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00146B	$sbc.bitneed
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00147B	$sbc.bits
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00148B	$M.CVC.data.AecAnalysisBank
        0017ED 002B7B FF5B7D 000B49 
        FF3BD1 000000 000000 00094E 
        FF394E 000A50 FF3A50 0026CB 
        00076E 00076E 0001E0 

0x00149A	$scratch.s
0x00149A	$scratch.s0
        000000 

0x00149B	$scratch.s1
        000000 

0x00149C	$scratch.s2
        000000 

0x00149D	$scratch.s3
        000000 

0x00149E	$scratch.s4
        000000 

0x00149F	$scratch.s5
        000000 

0x0014A0	$scratch.s6
        000000 

0x0014A1	$scratch.s7
        000000 

0x0014A2	$scratch.s8
        000000 

0x0014A3	$scratch.s9
        000000 

0x0014A4	$M.A2DP_OUT.encoder_codec_stream_struc
        000000 000000 FF5C5C 002C5B 
        000000 000000 000000 000000 
        000000 

0x0014AD	$M.CVC.data.rcv_vad400
        002C58 0026E5 000000 000000 
        000000 000000 000000 000000 

0x0014B5	$M.CVC.data.snd_vad400
        002C58 0026CD 000000 000000 
        000000 000000 000000 000000 

0x0014BD	$M.math.pow2_taylor.pow2_coefs
        000291 001641 009D90 038D32 
        0F5FE0 2C5C8C 400000 

0x0014C4	/fMDZZcseoAJUM5JDO9r+uoZhc4I6ezVvhwTDQJ9vi4=
        0017F6 001001 00349A 0034E6 
        0017FA 001002 003341 0034E6 
        001BE8 001004 00350E 0034E6 
        001BEC 001008 0035CD 0034E6 
        001BF4 001010 00351E 0034E6 
        001BF8 001012 00345E 0034E6 
        001BF0 001015 0035F0 0034E6 
        001DC4 001007 0034FD 003584 
        001DC7 00100A 0035A3 003584 
        001DD0 00100B 0034C1 003584 
        001DCA 001009 0035DC 003584 
        001DCD 001008 00359A 003584 
        001BFC 001020 0035B5 0034E6 
        001DC0 001021 0035B8 0034E6 
        000000 

0x0014FD	iDQm829vhg6wD+RiT3J97C+uVea+ISEKM0Z4SoCtq3g=
        000000 000000 000000 

0x001500	$M.adc_in.sidetone_mem
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0015C0	$filter_bank.config.fftsplit_table
        7FF622 7FD888 7FA737 7F6237 
        7F0992 7E9D56 7E1D94 7D8A5F 
        7CE3CF 7C29FC 7B5D04 7A7D05 
        798A24 788484 776C4F 7641AF 
        7504D3 73B5EC 72552D 70E2CC 
        6F5F03 6DCA0D 6C2429 6A6D99 
        68A69F 66CF81 64E889 62F202 
        60EC38 5ED77D 5CB421 5A827A 
        5842DD 55F5A5 539B2B 5133CD 
        4EBFE9 4C3FE0 49B415 471CED 
        447ACD 41CE1E 3F174A 3C56BA 
        398CDD 36BA20 33DEF3 30FBC5 
        2E110A 2B1F35 2826B9 25280C 
        2223A5 1F19F9 1C0B82 18F8B8 
        15E214 12C810 0FAB27 0C8BD3 
        096A90 0647D9 03242B 

0x0015FF	7yT7/DqW6R7jn84+OT1fn8NxIFmHCFefYFAFAV8+6ss=
        000000 

0x001600	$M.dac_out_resample.dac_out_right
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0017C0	Mxnfhg5wHPAa7aQh3FFcETNCLHepSFqVM7zqzhKuHG0=
        7FFFFF 5A9DF8 4026E7 2D6A86 
        2026F3 16C311 101D3F 0B6873 
        088E08 05B7B1 04499D 02DD96 
        02261C 016FAA 0113B5 00B845 

0x0017D0	Q/+5Q0tXlCkxz0+ep5W6ul9TcYe1Pq6s8pYWPVSbrdc=
        000013 000015 000018 00001C 
        00001F 000024 000029 00002F 
        000036 

0x0017D9	Ih6e7fGBdIrb6wIznKLTI6mXsnVNlN+vX+wrs1sgSNQ=
        000000 000000 000000 000000 
        000000 

0x0017DE	ByTIOBCbyxb0Y+96c/0onbuSvzM3ZLByGRbw7QeLqOo=
        000000 000000 000000 000000 
        000000 

0x0017E3	xzAFoMh5qn9nhfvS0rwE9Hc+C/i63rIfN4TcbiI2MGU=
        000000 000000 000000 000000 
        000000 

0x0017E8	dBMtUeGbsf+lxW5yFbwF32p8NvXUwSvRMgPlCbB2jzg=
        00FF00 FFFFF8 00FFFF 000010 
        000008 

0x0017ED	$filter_bank.config.frame120_proto240_fft256
        000078 0000F0 000100 000007 
        0022C0 

0x0017F2	$M.CVC_SYS.SpiSysControl
0x0017F2	$M.CVC_SYS.SysControl
        000000 

0x0017F3	BUFnRnTxhnUConzrGV8j49cVsopR7L5zYTnFCuI+4Sc=
        000009 

0x0017F4	$M.CVC_SYS.OvrCallState
        000000 

0x0017F5	$M.CVC_SYS.OvrMode
        000000 

0x0017F6	YpGfSTFibZ1vNYR9aFzZ7x31bxk6FyumvgI03NsW9GQ=
        000000 000000 000000 000000 

0x0017FA	A+RgUdOYAI9AFgWvgkwmJy72xP5acdSnVinky+/zQSk=
        000000 000000 000000 000000 

0x0017FE	+wTJAjHQ1GIVYs7LAGeHuVuQmoXcXnyEgYF83q/dI78=
        000000 

0x0017FF	Q9lKGCSMhNayjjn4Bp8rOBHSBwZhih/DEKSuiNa1Cdw=
        7FFFFF 

0x001800	$M.A2DP_IN.decoder_in
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x001BE8	EDQtiXAJV9+ZAeuDEnx3si+fjE6IdrdyJ5tHZyfEnAw=
        000000 000000 000000 000000 

0x001BEC	GPk85PIqNKCpCIS5137LiIizYrMygudhnjzSWU711oM=
        000000 000000 000000 000000 

0x001BF0	Tzu/jqx15OiVH1RQInMaw1hu8Qh29tFe00hP7chSKGU=
        000000 000000 000000 000000 

0x001BF4	Bvo5K2cuR59Q7w8cOiD9JSk+mK3UBGd/QCWwnsruXO8=
        000000 000000 000000 000000 

0x001BF8	OKCo8g8TCMPcWprk3wQb4VxPregRzXA0xigoKOCg5AQ=
        000000 000000 000000 000000 

0x001BFC	BiZOFiZXrc7yu93Nx0ImdL4QkBqYx4F0tPyC9Hf3D2g=
        000000 000000 000000 000000 

0x001C00	$M.dac_out.dac_out_right
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x001DC0	VH50O2TS+l+NA3favdyFeOUJX04EzzrG8lLDSyQxiYs=
        000000 000000 000000 000000 

0x001DC4	8nB5DRDkM9LneOpkqeEscKSbzfRBlbqd2wGLFUW2xXk=
        000000 000000 000000 

0x001DC7	HFlvP/fSO/I9aEbyCPBp+woDfjUanuGv4+4eIYtWLsY=
        000000 000000 000000 

0x001DCA	psv23ugpEooC42k1F5f0bHWtf4rbL36JACCdrHSpN64=
        000000 000000 000000 

0x001DCD	VfjqK6K9jYuybzmzLxT0K0MzbItuibkkyJkdZfvJiDk=
        000000 000000 000000 

0x001DD0	b+mJFyf7r7JET51Mr3giJR+QIcHTfGgz21m13py3Yyo=
        000000 000000 000000 

0x001DD3	BBau0y7qO0muFb/dpcL/N3/gSQLVY+mBhVJbDlHaRAs=
        000000 000000 000000 

0x001DD6	l8LYzytFe327jr8mZ6gktjRrneyMj2ZQLIXqDuP0kLI=
        000078 00006B 000004 

0x001DD9	$M.CVC_SYS.InterfacePtr
        000000 

0x001DDA	$M.CVC_SYS.cvc_bandwidth
        000001 

0x001DDB	$M.CVC_SYS.cur_mode
        000000 

0x001DDC	$M.CVC_SYS.SysMode
        000000 

0x001DDD	$M.CVC_SYS.AlgReInit
        000001 

0x001DDE	$M.CVC_SYS.FrameCounter
        000000 

0x001DDF	$M.CVC_SYS.Volume
        000000 

0x001DE0	sC6arZHbUhdzY18PnDMy7G6InrX0iYs702MYOF6t09c=
        00000B 

0x001DE1	Jlg0S4ehRy71uFnAyxsloeLiFBmC9+df2ovaB6+OLKQ=
        00000B 

0x001DE2	fhH6YQG3p+YHAMOsjHB56dhO27gxIw5D0AybVpfGNRE=
        001DE0 

0x001DE3	$M.CVC_SYS.SysDACadjust
        000000 

0x001DE4	59AvlyEdJbjrSKIIDYOoJed9dMMK//HEFAjE1+H6prI=
        000000 

0x001DE5	$M.CVC_SYS.VolState
        000000 

0x001DE6	$M.CVC_SYS.CallState
        000000 

0x001DE7	$M.CVC_SYS.dsp_volume_flag
        000000 

0x001DE8	pHjKYCATPksaqCeVyNYrLq6bZVtcBCA0RBEQF6Gm+Ao=
        00000B 

0x001DE9	$M.CVC_SYS.dsp_volume_stat
        000000 

0x001DEA	$M.CVC_SYS.CurCallState
        000000 

0x001DEB	$M.CVC_SYS.CurDAC
        00000D 

0x001DEC	$M.CVC_SYS.Last_PsKey
        000000 

0x001DED	$M.CVC_SYS.SecStatus
        000000 

0x001DEE	$M.CVC_SYS.ConnectStatus
        000000 

0x001DEF	$M.CVC_SYS.ssr_noise_base
        000000 

0x001DF0	$M.CVC_SYS.ssr_uncert_offset
        000000 

0x001DF1	$M.CVC_SYS.ssr_time_out
        000000 

0x001DF2	$M.CVC_SYS.ssr_started
        000000 

0x001DF3	$M.CVC_SYS.ssr_aec_initial_adapt
        000000 

0x001DF4	778V4SlSJtnWjnHBspkr6HkYE9mwTV7XZYvVP/DX2bY=
        000000 

0x001DF5	1SlSpxp/sUMqUOPPXD3JyJZQCMSWgR1J54ImSzpaApU=
        000001 

0x001DF6	$M.adc_in.copy_struc
        FF4FE4 FF5BEE 002928 000001 
        800000 000002 002C49 FF5C4D 
        000001 002C46 

0x001E00	$M.dac_out.Reference.mem
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x001F40	$M.system_config.data.SpkrEqCoefsB
        00000A 000001 400000 000000 
        000000 400000 000000 000000 
        000000 000000 400000 000000 
        000000 000000 000000 400000 
        000000 000000 000000 000000 
        400000 000000 000000 000000 
        000000 400000 000000 000000 
        000000 000000 400000 000000 
        000000 000000 000000 400000 
        000000 000000 000000 000000 
        400000 000000 000000 000000 
        000000 400000 000000 000000 
        000000 000000 400000 000000 
        000000 000001 000001 000001 
        000001 000001 000001 000001 
        000001 000001 000001 

0x001F7F	$M.set_dac_rate.local_play_back
        000000 

0x001F80	$cbops.scratch.mem2
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x001FF8	$M.dac_out.sidetone_mix_op
0x001FF8	$M.dac_out.sidetone_mix_op.prev_op
        FF59A0 

0x001FF9	$M.dac_out.sidetone_mix_op.next_op
        002B9F 

0x001FFA	$M.dac_out.sidetone_mix_op.func
        FF5C6E 

0x001FFB	$M.dac_out.sidetone_mix_op.param
        000000 000000 000002 000000 
        000000 

0x002000	$M.A2DP_IN.decoder_out_right
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x002140	0xspp+YsVvYZMTo30hL7NEPOF0M62FA03zqoranZN5E=
0x002140	$AEC_500.Const
        000000 000000 000000 000000 
        05AB62 051228 04A10C 044924 
        040248 03C796 0395EF 036B37 
        0345F5 032515 0307CC 02ED7D 
        02D5B1 02C006 02AC30 0299F0 
        028914 02796F 026ADF 025D44 
        025086 02448D 023947 022EA3 
        022492 021B07 0211F8 02095A 
        020124 01F94E 01F1D2 01EAA8 
        01E3CB 01DD36 01D6E4 01D0D0 
        01CAF7 01C556 01BFE8 01BAAB 
        01B59B 01B0B8 01ABFD 01A769 
        01A2FA 019EAE 019A83 019678 
        01928A 018EB9 018B04 018768 
        0183E6 000000 000000 000000 
        000000 000000 000000 000000 

0x002180	krLaqQkh1oCzc4k2C8iks7tgwcvJPF63lSoS5t8ej1E=
        1DCFDA 

0x002181	lEsTN01yizzfASa+EWoMvGwoKAhbRpI5iMaNiQJ2CMU=
        000000 000000 000000 000000 
        000000 01A1E9 02B535 0375C8 
        040248 046C01 04BD72 04FD51 
        053021 0558FE 057A24 059532 
        05AB62 05BDA0 05CCA3 05D8FC 
        05E31D 05EB61 05F212 05F76F 
        05FBA7 05FEE6 06014E 0602FC 
        060409 06048A 060491 06042D 
        06036C 06025A 060100 05FF67 
        05FD97 05FB97 05F96B 05F71A 
        05F4A8 05F219 05EF71 05ECB2 
        05E9E0 05E6FD 05E40C 05E10E 
        05DE05 05DAF3 05D7DA 05D4BA 
        05D194 05CE6B 05CB3E 05C80F 
        05C4DE 000000 000000 000000 
        000000 000000 000000 000000 

0x0021C1	V+/Di00SXkP5Y1FnX78uCOayWEbMWbPmQp9mi9MvYYs=
        538DA4 

0x0021C2	$M.CVC.data.hfk_proc_funcsSnd
        00146A E000AE 000000 000E29 
        FF5B34 000000 000CFA 0014AD 
        000000 000E29 FF4000 000000 
        00156D FF5C7C 000000 001226 
        FF5BB8 00148B 00312D 002865 
        000000 00248F 000000 000000 
        0030E9 0009CF FF39CF 0013E1 
        FF5BB8 FF4017 000E29 FF31E9 
        000000 000E9E 00007C 000000 
        000E29 FF3FB3 000000 000CFA 
        0014B5 000000 0026DC 002C0D 
        000000 000418 000000 002AC4 
        00153E 00008C 000000 00156D 
        002C7C 000000 0013CB E000AE 
        000000 000000 

0x0021FC	$M.dac_out.audio_out_timer_struc
        000000 000000 000000 000000 

0x002200	$M.tone_in.right_mem
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0022C0	eOFqVsSidppFuuaQxnqArJbHMqwGPgZXX6+X5THyaZM=
        000000 01ACEB 0359C4 050677 
        06B2F2 085F21 0A0AF3 0BB653 
        0D6130 0F0B77 10B515 125DF7 
        14060B 15AD3F 17537E 18F8B8 
        1A9CDA 1C3FD0 1DE18A 1F81F3 
        2120FC 22BE90 245A9D 25F513 
        278DDE 2924EE 2ABA2F 2C4D90 
        2DDF00 2F6E6D 30FBC5 3286F7 
        340FF2 3596A4 371AFD 389CEA 
        3A1C5C 3B9942 3D138A 3E8B24 
        400000 41720D 42E13C 444D7B 
        45B6BB 471CED 488000 49DFE5 
        4B3C8C 4C95E7 4DEBE5 4F3E78 
        508D92 51D923 53211D 546572 
        55A612 56E2F1 581C01 595133 
        5A827A 5BAFC8 5CD911 5DFE48 
        5F1F5F 603C49 6154FC 626969 
        637985 648544 658C9A 668F7C 
        678DDE 6887B6 697CF8 6A6D99 
        6B598F 6C40CF 6D2350 6E0107 
        6ED9EC 6FADF3 707D14 714746 
        720C80 72CCBA 7387EA 743E09 
        74EF0F 759AF3 7641AF 76E33B 
        777F90 7816A7 78A87A 793502 
        79BC38 7A3E18 7ABA9B 7B31BC 
        7BA375 7C0FC2 7C769E 7CD804 
        7D33F1 7D8A5F 7DDB4C 7E26B3 
        7E6C92 7EACE6 7EE7AA 7F1CDE 
        7F4C7E 7F7689 7F9AFD 7FB9D7 
        7FD318 7FE6BD 7FF4C5 7FFD31 
        7FFFFF 7FFD31 7FF4C5 7FE6BD 
        7FD318 7FB9D7 7F9AFD 7F7689 
        7F4C7E 7F1CDE 7EE7AA 7EACE6 
        7E6C92 7E26B3 7DDB4C 7D8A5F 
        7D33F1 7CD804 7C769E 7C0FC2 
        7BA375 7B31BC 7ABA9B 7A3E18 
        79BC38 793502 78A87A 7816A7 
        777F90 76E33B 7641AF 759AF3 
        74EF0F 743E09 7387EA 72CCBA 
        720C80 714746 707D14 6FADF3 
        6ED9EC 6E0107 6D2350 6C40CF 
        6B598F 6A6D99 697CF8 6887B6 
        678DDE 668F7C 658C9A 648544 
        637985 626969 6154FC 603C49 
        5F1F5F 5DFE48 5CD911 5BAFC8 
        5A827A 595133 581C01 56E2F1 
        55A612 546572 53211D 51D923 
        508D92 4F3E78 4DEBE5 4C95E7 
        4B3C8C 49DFE5 488000 471CED 
        45B6BB 444D7B 42E13C 41720D 
        400000 3E8B24 3D138A 3B9942 
        3A1C5C 389CEA 371AFD 3596A4 
        340FF2 3286F7 30FBC5 2F6E6D 
        2DDF00 2C4D90 2ABA2F 2924EE 
        278DDE 25F513 245A9D 22BE90 
        2120FC 1F81F3 1DE18A 1C3FD0 
        1A9CDA 18F8B8 17537E 15AD3F 
        14060B 125DF7 10B515 0F0B77 
        0D6130 0BB653 0A0AF3 085F21 
        06B2F2 050677 0359C4 01ACEB 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0023C0	HIQLFyQAqlDukUUAQgW/TtktEghQO/JA2xGws7emi6w=
0x0023C0	5mIFe2pJ0/ZszIvl5hPu4ULcVGyPjHkw1vvsOO7j8W0=
        0748D5 0E278A 14A227 1ABE61 
        208195 25F0D5 2B10E8 2FE64F 
        34754B 38C1DD 3CCFCC 40A2AA 
        443DD3 47A472 4AD985 4DDFDE 
        536ADD 5A9AA5 60A1DB 672FA2 
        6C5EDD 715B05 751317 78C01F 
        7B308A 7CFD5F 7E5314 7F1145 
        7F908C 7FCEED 

0x0023DE	n6T2rTIwYd3FOQUglMo7Jgv6p8ax8vQalqM6skhM2ag=
        000300 499A63 2AAAAB 0BBAF3 
        000502 15ADAD 2B5B5B 27DC44 
        14FCFD 021DB7 000603 09C5FA 
        19840C 29421F 1EDB00 11269E 
        03723C 000603 0ACEDF 16FB29 
        232773 1E4865 13AF82 09169F 
        000703 06DE24 100AEA 1937B0 
        1FF2E8 17F62E 0FF974 07FCBA 
        000904 00FB2A 07DF2A 0EC32B 
        15A72C 1C8B2D 168B85 108BDE 
        0A8C37 048C8F 000B05 000000 
        054865 0A90CA 0FD930 152195 
        1806AA 136D56 0ED401 0A3AAD 
        05A159 010805 000C06 00F669 
        04F21B 08EDCD 0CE97E 10E530 
        14E0E2 1314ED 0F9D3B 0C2589 
        08ADD7 053625 01BE73 000D06 
        025904 055FC5 086687 0B6D49 
        0E740A 117ACC 11B130 0F0EB9 
        0C6C42 09C9CC 072755 0484DE 
        01E267 000F07 0123CC 036ED6 
        05B9DF 0804E9 0A4FF2 0C9AFC 
        0EE605 0FF85D 0DF951 0BFA46 
        09FB3A 07FC2E 05FD23 03FE17 
        01FF0C 001208 007E2E 023949 
        03F464 05AF7E 076A99 0925B4 
        0AE0CE 0C9BE9 0E5704 0CD545 
        0B5387 09D1C8 085009 06CE4B 
        054C8C 03CACD 02490F 00C750 
        00150A 000000 015135 02A269 
        03F39E 0544D2 069607 07E73B 
        093870 0A89A5 0BDAD9 0BFB34 
        0AD5A6 09B018 088A8B 0764FD 
        063F6F 0519E1 03F453 02CEC5 
        01A937 0083A9 00180B 007B73 
        017AE1 027A50 0379BE 04792C 
        05789A 067808 077776 0876E4 
        097652 0A75C0 0A6DAE 098F51 
        08B0F3 07D296 06F439 0615DB 
        05377E 045921 037AC3 029C66 
        01BE08 00DFAB 00014E 001B0D 
        006A88 012BB2 01ECDD 02AE08 
        036F32 04305D 04F188 05B2B2 
        0673DD 073507 07F632 08B75D 
        097887 08D27C 082A53 07822A 
        06DA00 0631D7 0589AE 04E184 
        04395B 039132 02E909 0240DF 
        0198B6 00F08D 004864 001E0E 
        0091E0 01249D 01B759 024A15 
        02DCD2 036F8E 04024B 049507 
        0527C3 05BA80 064D3C 06DFF8 
        0772B5 080571 07FBDB 077C1D 
        06FC60 067CA2 05FCE4 057D27 
        04FD69 047DAB 03FDEE 037E30 
        02FE72 027EB4 01FEF7 017F39 
        00FF7B 007FBE 

0x0024BC	svvMhXGg6YLuQup0JozVUptgFow3ZPt7QUfwvn+VcXI=
        000002 4A3327 14664D 000003 
        62EC51 34165B 054065 000003 
        5BCC7F 3306A0 0A40C2 000003 
        656E4B 41EF9A 1E70E9 000004 
        7B99B3 5CB346 3DCCD9 1EE66D 
        000005 7FFFFF 651993 4A3327 
        2F4CBA 14664D 000006 7A574C 
        62EC51 4B8156 34165B 1CAB60 
        054065 000006 702F6E 5BCC7F 
        476990 3306A0 1EA3B1 0A40C2 
        000007 772DA4 656E4B 53AEF3 
        41EF9A 303042 1E70E9 0CB191 
        000008 7B99B3 6C267C 5CB346 
        4D4010 3DCCD9 2E59A3 1EE66D 
        0F7336 00000A 7FFFFF 728CCA 
        651993 57A65D 4A3327 3CBFF0 
        2F4CBA 21D984 14664D 06F317 
        00000B 7A574C 6EA1CF 62EC51 
        5736D3 4B8156 3FCBD8 34165B 
        2860DD 1CAB60 10F5E2 054065 
        00000D 7A60E5 702F6E 65FDF6 
        5BCC7F 519B07 476990 3D3818 
        3306A0 28D529 1EA3B1 14723A 
        0A40C2 000F4B 00000E 772DA4 
        6E4DF8 656E4B 5C8E9F 53AEF3 
        4ACF46 41EF9A 390FEE 303042 
        275095 1E70E9 15913D 0CB191 
        03D1E4 

0x002529	BVL8zAnELJF3v5lDQvU5uESaZU8dhgTW/vvLd16xjFI=
        000002 000000 000014 04526A 
        00000A 03526A 

0x00252F	$M.oms270.mode.wide_band.object
        000081 00001E 001DD6 002529 
        000014 00001E 00001B 000017 
        00001A 010000 666666 533333 
        5D5555 0023C0 0031F1 0031B7 
        0031D1 000344 00000E 000010 
        0023DE 0024BC 0017D0 

0x002546	$M.CVC.data.CurParams
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0026FA	$M.CVC.data.sndoms_G
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x00277B	$M.CVC.data.sndoms_state
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0027F7	$message.queue
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x002865	$M.CVC.data.oms270snd_obj
        00252F 000000 000080 000001 
        000001 000001 0000F0 000AD1 
        00094E FF394E 001490 0009CF 
        FF39CF FF0000 0010A1 0026FA 
        001129 00277B 0004E8 04B60C 
        FF13DE FEEB01 39999A 666666 
        7FFFFF 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 

0x0028D0	$message.long_message_data
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x002928	$M.adc_in.sidetone_resample_op
0x002928	$M.adc_in.sidetone_resample_op.prev_op
        FF5ABE 

0x002929	$M.adc_in.sidetone_resample_op.next_op
        FFFFFF 

0x00292A	$M.adc_in.sidetone_resample_op.func
        FF5C74 

0x00292B	$M.adc_in.sidetone_resample_op.param
        000003 000002 000000 FFFFF8 
        000008 001F80 000078 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x002975	$M.dac_out_resample.right_op.prev_op
0x002975	$M.dac_out_resample.right_op
        FF5B23 

0x002976	$M.dac_out_resample.right_op.next_op
        002B14 

0x002977	$M.dac_out_resample.right_op.func
        FF5C74 

0x002978	$M.dac_out_resample.right_op.param
        000001 000005 000000 FFFFF8 
        000008 FF5200 00012C 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x0029C2	$sbc.sbc_common_data_array
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000FA1 001308 001399 FF30A0 
        00144B 00145B 00146B 00147B 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x002A07	$M.system_config.data.full_proc_funcs
        00146A FF5C0C 000000 00156D 
        FF4DFE 000000 00156D 002C78 
        000000 000808 FF4021 000000 
        0025BF FF30D0 000400 0025BF 
        FF31A0 000400 0025BF FF3FE4 
        000080 0025BF FF3FF2 000080 
        0025BF FF3F7F 000100 0025BF 
        FF3F99 000100 002607 FF5ADD 
        002A75 00260D FF5ADD 002A75 
        00156D FF5C7A 000000 00156D 
        002C7A 000000 0013CB FF5C0C 
        000000 000000 

0x002A35	$M.system_config.data.UserEqCoefsB
        000000 000001 400000 000000 
        000000 400000 000000 000000 
        000000 000000 400000 000000 
        000000 000000 000000 400000 
        000000 000000 000000 000000 
        400000 000000 000000 000000 
        000000 400000 000000 000000 
        000001 000001 000001 000001 
        000001 

0x002A56	$M.CVC.data.FilterResetTable
        00356E FF4000 000000 00356E 
        FF31E9 000000 00356E FF5B34 
        000000 00356E FF3FB3 000000 
        003579 FF30D0 000000 003579 
        FF31A0 000000 003579 FF3FE4 
        000000 003579 FF3FF2 000000 
        003579 FF3F7F 000000 003579 
        FF3F99 000000 000000 

0x002A75	$M.system_config.data.cmpd100_obj_48kHz
        000040 000020 002B61 FF5B70 
        002B61 FF5B70 080000 002C86 
        800000 080000 F9B037 FA0541 
        FE56CB FF8070 100000 080000 
        015555 00CCCD 000000 000000 
        000000 3E4859 02D026 3E4859 
        00D9BA 5E4273 009150 7B6F09 
        006D0B 020000 

0x002A93	$M.system_config.data.StandBy_proc_funcs
        00146A FF5C0C 000000 00156D 
        FF4DFE 000000 00156D 002C78 
        000000 00153E 00005D 000000 
        00153E 00006D 000000 00156D 
        FF5C7A 000000 00156D 002C7A 
        000000 0013CB FF5C0C 000000 
        000000 

0x002AAC	$cbuffer.read_port_offset_addr
0x002AAC	$cbuffer.port_offset_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x002AB8	$cbuffer.write_port_offset_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x002AC4	$M.CVC.data.snd_agc400_dm
        000000 001000 000000 0026D6 
        FF5B8A FF5B8A 002C0F 7FFFFF 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 

0x002ADB	$M.CVC.data.vad_peq_parameters_wb
        000003 000001 400000 36E574 
        8C1FF4 3D7BB6 34B609 8C24F0 
        374152 89FA7C 400000 378A46 
        8A008D 3EF708 854B59 400000 
        3EAC63 859CA9 000001 000001 
        000001 

0x002AF0	$M.dac_out.auxillary_mix_left_op.prev_op
0x002AF0	$M.dac_out.auxillary_mix_left_op
        FF4DEC 

0x002AF1	$M.dac_out.auxillary_mix_left_op.next_op
        FF59A0 

0x002AF2	$M.dac_out.auxillary_mix_left_op.func
        002C6D 

0x002AF3	$M.dac_out.auxillary_mix_left_op.param
        000000 000000 946003 002C4C 
        000000 FFFF80 080000 080000 
        008000 7FFFFF 7FFFFF 040000 
        000000 7FFFFF 000000 

0x002B02	$M.CVC.app.config.CVC_config_struct
        0026CF 00272D 000000 00258C 
        000001 000001 000002 000004 
        000000 0001B3 002546 D00000 
        00E102 003E80 000000 E0007B 
        002AF3 00269B 

0x002B14	$M.dac_out_resample.sw_rate_right_op.mtu_next
0x002B14	$M.dac_out_resample.sw_rate_right_op
        002975 

0x002B15	$M.dac_out_resample.sw_rate_right_op.main_next
        FFFFFF 

0x002B16	$M.dac_out_resample.sw_rate_right_op.func
        002C67 

0x002B17	$M.dac_out_resample.sw_rate_right_op.param
        000005 000003 000000 000000 
        FF3F01 000080 000080 FF5A3E 
        000000 000000 000000 000000 
        000000 000000 

0x002B25	$M.tone_in.copy_op_left.prev_op
0x002B25	$M.tone_in.copy_op_left
        FF5BF4 

0x002B26	$M.tone_in.copy_op_left.next_op
        FF51FB 

0x002B27	$M.tone_in.copy_op_left.func
        FF5C77 

0x002B28	$M.tone_in.copy_op_left.param
        000003 000001 FF3F01 FF4FFF 
        002C80 000050 000000 000000 
        000000 000000 000000 000000 
        000000 

0x002B35	$M.ConfigureSystem.cvc_bandwidth_param_wb
        003E80 000078 000081 0000F0 
        000000 00252F FFFFFC 0FE040 
        000000 002ADB 002BD1 0017ED 
        0017ED 0017ED 000008 000000 

0x002B45	$M.system_config.data.MeloD_Expansion_coefficients
        B1AA81 571F3E C3ECED 400000 
        84DA2F 3B3194 400000 D53FA4 
        FEA000 400000 81543A 3EB7E0 
        400000 BB3B4C 24BC7F 

0x002B54	$M.system_config.data.stream_map_left_in
        FF5C5F 000000 000000 0000A0 
        000BB8 001608 001598 000000 
        000000 000000 000000 000000 
        000000 

0x002B61	$M.system_config.data.stream_map_left_out
        002C4F 000000 000000 0000A0 
        000BB8 0015B2 00147E 000000 
        000000 000000 000000 000000 
        000000 

0x002B6E	$M.CVC.data.wnr_obj
        003428 002671 0014B4 0014BC 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x002B7B	$M.CVC.data.stream_map_sndin
        002C49 000000 000000 000078 
        0001F4 001608 001598 000000 
        000000 000000 000000 000000 
        000000 

0x002B88	$M.dac_out_resample.copy_struc
        FF4FE4 002C08 002B14 000002 
        002C4F FF5C53 000002 002C52 
        FF5C56 000002 002C46 FF5C4A 

0x002B94	$M.tone_in.copy_struc
        FF4FE4 002BE2 FF43F0 000001 
        946003 000002 002C4C FF5C50 
        000002 002C46 FF5C4A 

0x002B9F	$M.dac_out.audio_out_volume_left.mtu_next
0x002B9F	$M.dac_out.audio_out_volume_left
        001FF8 

0x002BA0	$M.dac_out.audio_out_volume_left.main_next
        FF5BA3 

0x002BA1	$M.dac_out.audio_out_volume_left.func
        002C70 

0x002BA2	$M.dac_out.audio_out_volume_left.param
        000000 000000 7FFFFF 000000 
        000000 FFFFFB 0147AE 000000 

0x002BAA	$M.ConfigureSystem.TxFuncMips_data_block
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x002BB4	$M.back_end.DecoderMips_data_block
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x002BBE	$kal_filter_coef_lib.__db2lin.constants
        000082 C0A8C1 000074 BBFFCB 
        000078 CC9A78 00007C EC8E69 
        000080 800000 

0x002BC8	$M.system_config.data.BoostEqCoefsA
        000001 000001 400000 000000 
        000000 400000 000000 000000 
        000001 

0x002BD1	$M.CVC.data.dcblock_parameters_wb
        000001 000001 400000 3E5572 
        83551C 3E5572 3CB600 836037 
        000001 

0x002BDA	$M.A2DP_OUT.codec_out_copy_struc
        FF4FE4 FF5C11 FF5C11 000001 
        FF5C5C 000001 80000C 000000 

0x002BE2	$M.tone_in.deinterleave_mix_op.mtu_next
0x002BE2	$M.tone_in.deinterleave_mix_op
        FFFFFF 

0x002BE3	$M.tone_in.deinterleave_mix_op.main_next
        FF5BF4 

0x002BE4	$M.tone_in.deinterleave_mix_op.func
        002C73 

0x002BE5	$M.tone_in.deinterleave_mix_op.param
        000000 000003 000004 000000 

0x002BE9	$M.CVC_MODULES_STAMP.ModulesStamp
0x002BE9	$M.CVC_MODULES_STAMP.s1
        00FEEB 

0x002BEA	$M.CVC_MODULES_STAMP.s2
        00FEEB 

0x002BEB	$M.CVC_MODULES_STAMP.s3
        00FEEB 

0x002BEC	$M.CVC_MODULES_STAMP.CompConfig
        07F7F0 

0x002BED	$M.CVC_MODULES_STAMP.s4
        00FEEB 

0x002BEE	$M.CVC_MODULES_STAMP.s5
        00FEEB 

0x002BEF	$M.CVC_MODULES_STAMP.s6
        00FEEB 

0x002BF0	$M.tone_in.shift_op_right
0x002BF0	$M.tone_in.shift_op_right.prev_op
        002B25 

0x002BF1	$M.tone_in.shift_op_right.next_op
        FF43F0 

0x002BF2	$M.tone_in.shift_op_right.func
        FF5C65 

0x002BF3	$M.tone_in.shift_op_right.param
        000004 000004 000008 

0x002BF6	$M.dac_out.insert_op_right
0x002BF6	$M.dac_out.insert_op_right.prev_op
        FF5BCC 

0x002BF7	$M.dac_out.insert_op_right.next_op
        FF4DEC 

0x002BF8	$M.dac_out.insert_op_right.func
        FF5C71 

0x002BF9	$M.dac_out.insert_op_right.param
        000001 000000 000000 

0x002BFC	$M.system_config.data.BoostEqDefnTable
        000001 000001 FF3FE4 FF3FF2 
        002BC8 FF5BD5 

0x002C02	$sbcenc.pre_post_proc_struc
        000000 000000 000000 000000 
        000000 000000 

0x002C08	$M.dac_out_resample.sync_op.prev_op
0x002C08	$M.dac_out_resample.sync_op
        FFFFFF 

0x002C09	$M.dac_out_resample.sync_op.next_op
        FF5953 

0x002C0A	$M.dac_out_resample.sync_op.func
        FF5C6B 

0x002C0B	$M.dac_out_resample.sync_op.param
        000000 000001 

0x002C0D	$M.CVC.data.vad_hold
        0014BC 0014B4 000000 0026E4 
        000000 

0x002C12	$M.A2DP_IN.codec_in_copy_op
0x002C12	$M.A2DP_IN.codec_in_copy_op.prev_op
        FFFFFF 

0x002C13	$M.A2DP_IN.codec_in_copy_op.next_op
        FFFFFF 

0x002C14	$M.A2DP_IN.codec_in_copy_op.func
        002C61 

0x002C15	$M.A2DP_IN.codec_in_copy_op.param
        000000 000001 

0x002C17	$M.main.set_dac_rate_message_struc
        000000 000000 000000 000000 

0x002C1B	$M.main.set_tone_rate_message_struc
        000000 000000 000000 000000 

0x002C1F	$M.main.set_user_eq_param_message_struct
        000000 000000 000000 000000 

0x002C23	$M.main.set_user_eq_group_param_message_struct
        000000 000000 000000 000000 

0x002C27	$M.system_config.data.mode_table
        002A93 002A07 002A07 002A07 

0x002C2B	$M.CVC.data.ModeProcTableSnd
        FF5AFB FF5AFB 0021C2 FF5AFB 

0x002C2F	$cbuffer.configure_port_message_struc
        000000 000000 000000 000000 

0x002C33	$M.message.send_ready_wait_for_go.go_from_vm_message_struc
        000000 000000 000000 000000 

0x002C37	$pskey.result_fail_message_struc
        000000 000000 000000 000000 

0x002C3B	$sbcenc.set_bitpool_message_struc
        000000 000000 000000 000000 

0x002C3F	$sbcdec.convert_mono_message_struc
        000000 000000 000000 000000 

0x002C43	$M.sra_calcrate.mode_funtion_table
        000609 00060F 000621 

0x002C46	$cbops.scratch.cbuffer_struc1
        000078 FF4080 FF4080 

0x002C49	$M.adc_in.audio_in_left_cbuffer_struc
        000140 FF4E00 FF4E00 

0x002C4C	$M.tone_in.left_cbuffer_struc
        0000C0 FF4100 FF4100 

0x002C4F	$M.dac_out_resample.left_cbuffer_struc
        0001C0 FF4200 FF4200 

0x002C52	$M.dac_out.left_cbuffer_struc
        0001C0 FF4C00 FF4C00 

0x002C55	$M.dac_out.Reference.cbuffer_struc
        000140 001E00 001E00 

0x002C58	$M.CVC.data.vad_peq_output
        FF5C59 0004E8 000000 

0x002C5B	$M.A2DP_OUT.encoder_in_cbuffer_struc
        0003E8 FF4800 FF4800 

0x002C5E	$M.A2DP_IN.decoder_out_right_cbuffer_struc
        000140 002000 002000 

0x002C61	$cbops.copy_op
        000000 0015D6 0012C3 

0x002C64	$cbops.dither_and_shift
        000000 0015D6 0009A8 

0x002C67	$cbops.rate_adjustment_and_shift
        000000 001511 00068E 

0x002C6A	$cbops.sidetone_filter_op
        000000 0015D6 000BAE 

0x002C6D	$cbops.aux_audio_mix_op
        000000 0015D6 000949 

0x002C70	$cbops.volume
        002750 0015D6 002402 

0x002C73	$cbops.deinterleave_mix
        000000 001452 000B27 

0x002C76	$M.sra_tagtimes.mode_funtion_table
        000534 000543 

0x002C78	$M.system_config.data.pcmin_r_pk_dtct
        FF5B63 000000 

0x002C7A	$M.system_config.data.dac_r_pk_dtct
        FF5B70 000000 

0x002C7C	$M.CVC.data.sco_out_pk_dtct
        FF5B8A 000000 

0x002C7E	$M.set_dac_rate.max_clock_mismatch
        000000 

0x002C7F	$M.tone_in.aux_input_stream_available
        000000 

0x002C80	$M.dac_out.current_dac_sampling_rate
        00BB80 

0x002C81	$sra_resamp_adjust_int
        000001 

0x002C82	$M.detect_end_of_aux_stream.last_write_address
        FF4100 

0x002C83	$M.Sleep.TotalTime
        000000 

0x002C84	$M.Sleep.Mips
        000000 

0x002C85	$M.system_config.data.SpkrEqParams
        002547 

0x002C86	$cmpd_gain
        000000 

0x002C87	$M.ConfigureSystem.PeakMipsTxFunc
        000000 

0x002C88	$pblock_key
        0000E9 

0x002C89	$M.CVC.data.MinusOne
        FFFFFF 

0x002C8A	$app_config.io
        FFFFFF 

0x002C8B	$M.set_plugin.codec_config
        FFFFFF 

0x002C8C	$M.set_codec_rate.current_voice_codec_sampling_rate
        000000 

0x002C8D	$M.back_end.codec_reset_needed
        000001 

0x002C8E	$M.back_end.PeakMipsDecoder
        000000 

0x002C8F	$M.codec_copy_handler.glob_counter_removeframe
        000000 

0x002C90	$M.codec_copy_handler.frame_proc_num_samples
        0000A0 

0x002C91	$M.mips_profile.evalinterval_us
        0186A0 

0x002C92	$cbuffer.write_port_disconnect_address
        000000 

0x002C93	$cbuffer.read_port_disconnect_address
        000000 

0x002C94	$error.handler
        000000 

0x002C95	$interrupt.block_count
        000000 

0x002C96	$message.last_addr
        FFFFFF 

0x002C97	$message.queue_write_ptr
        000000 

0x002C98	$message.long_message_size
        000000 

0x002C99	$pskey.request_in_progress
        000000 

0x002C9A	$timer.id
        000001 

0x002C9B	$M.codec_av_decode.data_ptr
        000000 

0x002C9C	$M.codec_av_encode.data_ptr
        000000 

0x002C9D	$frame_sync.sync_flag
        000000 

0x002C9E	$M.cmpd100.analysis.MusicComp_Peak
        000000 

0x002C9F	$M.cmpd100.analysis.region
        000000 

0x002CA0	$M.cmpd100.applygain.lin_gain
        000000 

0x002CA1	$M.cmpd100.applygain.remaninder_samples
        000000 

0x002CA2	$math.rand_num
        005555 


------------------------------------------------------------------------
Region: DM2_REGION
------------------------------------------------------------------------
0xFF3000	$sbcdec.synthesis_vch1
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF30A0	$sbc.loudness_offset_ram
0xFF30A0	$sbc.loudness_offset_m4_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF30B0	$sbc.loudness_offset_m8_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF30D0	$M.system_config.data.spkr_eq_left_dm2
        002B61 002B61 00000A FF59ED 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF30F9	$M.system_config.data.user_eq_bank_select
        000000 002578 00258E 0025A4 
        0025BA 0025D0 0025E6 

0xFF3100	$sbcdec.synthesis_vch2
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF31A0	$M.system_config.data.spkr_eq_right_dm2
        FF5B70 FF5B70 00000A FF59ED 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF31C9	$sbcenc.analysis_coefs_m4_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF31E9	$M.CVC.data.snd_peq_dm2
        FF5B8A FF5B8A 000005 002679 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF31FF	$M.set_dac_rate.audio_if_mode
        000000 

0xFF3200	$sbcenc.analysis_xch1
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3250	$sbcdec.synthesis_coefs_m4_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3270	$sbcenc.level_coefs_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3280	$sbcenc.analysis_xch2
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF32D0	$M.CVC.data.RcvBuf_imag
0xFF32D0	$M.CVC.data.block?1
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF33D2	$M.CVC.data.Ga_real
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF34D4	$M.CVC.data.L2absGr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3514	$M.CVC.data.Gr_real
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3554	$M.CVC.data.LPwrD
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3594	$M.CVC.data.BExp_X_buf
        000000 000000 000000 

0xFF3597	$M.CVC.data.LpZ_nz
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF3618	$M.CVC.data.LPwrX1
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF3699	$M.dm2_scratch
0xFF3699	$M.CVC.data.Exp_Mts_adapt
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 

0xFF379C	$M.CVC.data.scratch_extra_dm2
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF394E	$M.CVC.data.D_imag
0xFF394E	$M.CVC.data.FFT_DM2
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF39CF	$M.CVC.data.E_imag
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF3A50	$M.CVC.data.X_imag
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF3AD1	$M.CVC.data.fft_circ
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3BD1	$M.CVC.data.bufx_inp
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3CC1	$stack.buffer
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3D81	$fft.twiddle_imag
        000000 800000 A57D86 A57D86 
        CF043B 89BE51 89BE51 CF043B 
        E70748 8275A1 959267 B8E313 
        B8E313 959267 8275A1 E70748 
        F3742D 809DC9 9D0DFE AECC33 
        C3A946 8F1D34 8582FB DAD7F4 
        DAD7F4 8582FB 8F1D34 C3A946 
        AECC33 9D0DFE 809DC9 F3742D 
        F9B827 802778 A12883 AA0A5B 
        C945E0 8C4A14 877B7C D4E0CB 
        E0E607 83D604 9235F3 BE31E2 
        B3C020 99307F 8162AA ED37F0 
        ED37F0 8162AA 99307F B3C020 
        BE31E2 9235F3 83D604 E0E607 
        D4E0CB 877B7C 8C4A14 C945E0 
        AA0A5B A12883 802778 F9B827 
        FCDBD5 8009DE A34BDF A7BD23 
        CC210D 8AFB2D 8893B1 D1EEF6 
        E3F47E 831C31 93DBD7 BB8533 
        B64BEB 975961 81E26C EA1DEC 
        F054D9 80F66E 9B1777 B14017 
        C0E8B6 90A0FD 84A2FC DDDC5B 
        D7D947 8675DC 8DAAD3 C67323 
        AC64D5 9F13C8 8058C9 F69570 
        F69570 8058C9 9F13C8 AC64D5 
        C67323 8DAAD3 8675DC D7D947 
        DDDC5B 84A2FC 90A0FD C0E8B6 
        B14017 9B1777 80F66E F054D9 
        EA1DEC 81E26C 975961 B64BEB 
        BB8533 93DBD7 831C31 E3F47E 
        D1EEF6 8893B1 8AFB2D CC210D 
        A7BD23 A34BDF 8009DE FCDBD5 

0xFF3E01	$sbcenc.analysis_coefs_m8_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3E81	$sbcdec.synthesis_coefs_m8_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3F01	$sra_coeffs
        77886E 76B443 750EB9 729D5E 
        6F6866 6B7A8E 66E0EC 61AAB9 
        5BE912 55AEB0 4F0F9C 4820DE 
        40F827 39AB7B 3250D9 2AFDE5 
        23C798 1CC1F0 15FFA5 0F91EA 
        098834 03F003 FED4C1 FA3F9E 
        F63781 F2C100 EFDE5A ED8F8D 
        EBD263 EAA293 E9F9EB E9D079 
        EA1CC2 EAD3F9 EBEA40 ED52E4 
        EF00A2 F0E5E4 F2F503 F52088 
        F75B60 F99918 FBCE0A FDEF88 
        FFF403 01D324 0385E3 050696 
        0650F6 076222 083891 08D40B 
        093591 095F45 09544B 0918AB 
        08B129 082324 077469 06AB14 
        05CD5F 04E18A 03EDAC 02F79D 
        0204D5 011A53 003C8C FF6F57 
        FEB5E5 FE12BA FD87A8 FD15D1 
        FCBDB0 FC7F1F FC5965 FC4B43 
        FC5308 FC6EA2 FC9BB4 FCD7A6 
        FD1FBF FD7133 FDC93A FE2522 
        FE825B FEDE87 FF3786 FF8B7B 
        FFD8DA 001E64 005B2E 008E9E 
        00B867 00D889 00EF44 00FD15 
        0102AB 0100DE 00F8A5 00EB0C 
        00D928 00C411 00ACD8 00947E 
        007BEE 0063F8 004D4E 00387E 
        0025F5 0015FD 0008BA FFFE36 
        FFF65B FFF0FA FFEDD3 FFEC94 
        FFECE4 FFEE64 FFF0B3 FFF37A 
        FFF665 FFF92F FFFBA2 FFFD97 
        FFFEF8 FFFFC2 

0xFF3F7F	$M.system_config.data.user_eq_left_dm2
        002B61 002B61 000005 FF5A9D 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF3F99	$M.system_config.data.user_eq_right_dm2
        FF5B70 FF5B70 000005 FF5A9D 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF3FB3	$M.CVC.data.snd_vad_peq
        FF5B8A 002C58 000003 002ADB 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF3FC4	$sbcdec.bitmask_lookup_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF3FD5	$sbcdec.levelrecip_coefs_ram
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 

0xFF3FE4	$M.system_config.data.boost_eq_left_dm2
        002B61 002B61 000001 002BC8 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF3FF2	$M.system_config.data.boost_eq_right_dm2
        FF5B70 FF5B70 000001 002BC8 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF4000	$M.CVC.data.adc_dc_block_dm1
        002B7B 002B7B 000001 002BD1 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF400D	$scratch.t
0xFF400D	$scratch.t0
        000000 

0xFF400E	$scratch.t1
        000000 

0xFF400F	$scratch.t2
        000000 

0xFF4010	$scratch.t3
        000000 

0xFF4011	$scratch.t4
        000000 

0xFF4012	$scratch.t5
        000000 

0xFF4013	$scratch.t6
        000000 

0xFF4014	$scratch.t7
        000000 

0xFF4015	$scratch.t8
        000000 

0xFF4016	$scratch.t9
        000000 

0xFF4017	$M.CVC.data.SndSynthesisBank
        0017ED FF5B8A 000C39 001490 
        0009CF FF39CF 000000 000000 
        000000 000000 

0xFF4021	$M.system_config.data.MeloD_Expansion_struct
        002B54 FF5B63 002B61 FF5B70 
        002546 000040 000000 FF5B11 
        002B45 

0xFF402A	7r7QAlveenuSp01gZGBHKBVjpUiwmOpvk6hd9e4z87k=
        45E430 AE5D7D 45580B D37E72 
        0EE9D5 000000 000000 

0xFF4031	X9Gkc3D9XnTVTI8waBTe2KZDyPKqGk6DN2QeXsGHsSY=
        FE8D2F FF79F6 004647 043253 
        004510 FE5DAC F946D5 03EAF1 
        0702B8 00F96E EBE55D ED1295 
        7FFFFF 5E4D6D 2C305E 

0xFF4040	$M.wbs.decoder.frame_buffer
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF405E	Npxh07UDcEg73LjPbN3di9ece/63jVOFtU915Kfnzmc=
        015BC2 0083AF 001C03 000000 
        0D45EA 088B2B 0523F7 02D393 
        2FF068 24EF4C 1B69BC 13864F 
        6250EF 55F40E 48FC95 3C1D07 
        7FFFFF 7CB3E9 7656B0 6D580D 

0xFF4072	OeCVYCyTwSpFzM0DctjLBpa3Qdasc0WftdgrgZfMcDU=
        0BE279 2DC44C 517658 6F2863 
        7FFFFF 

0xFF4077	$M.dac_out.dither_left_op
0xFF4077	$M.dac_out.dither_left_op.prev_op
        FF5BA3 

0xFF4078	$M.dac_out.dither_left_op.next_op
        FF5BCC 

0xFF4079	$M.dac_out.dither_left_op.func
        002C64 

0xFF407A	$M.dac_out.dither_left_op.param
        000000 000003 FFFFF8 000000 
        000090 000000 

0xFF4080	$cbops.scratch.mem1
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF40F8	$M.A2DP_IN.codec_in_copy_struc
        FF4FE4 002C12 002C12 000001 
        8C0002 000001 FF5C62 000000 

0xFF4100	$M.tone_in.left_mem
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF41C0	QDqRUfA00BT2jc/+AkLUqqMiY0H6Rq/wVxxzPYUJSmI=
        002D83 007554 00A5E9 00C270 
        00CE4C 00CCE3 00C17C 00AF1E 
        00987C 007FE4 00673A 004FF5 
        003B20 002966 001B1A 001040 
        0008A0 0003CD 000135 00002E 
        000000 FE2E6C FB11F8 F8A2C3 
        F6D640 F59F18 F4EDD2 F4B176 
        F4D832 F54FF9 F6070F F6EC87 
        F7F0B0 F90565 FA1E4B FB30F8 
        FC3500 FD23F6 FDF952 FEB24D 
        FF4DB4 FFCBAF 7FFFFF 7EC8AD 
        7C60AF 78D51B 743918 6EA54C 
        683727 611005 595441 512A2D 
        48B907 4027F1 379CEA 2F3BE0 
        2725DC 1F7845 184C53 11B69D 
        0BC6DC 0687CE 01FF49 

0xFF41FF	$M.set_dac_rate.long_term_mismatch
        000000 

0xFF4200	$M.dac_out_resample.dac_out_left
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF43C0	a4MPDUCsnVTLVIazwGpYC1FlU3whna25Fc0fj8hHEAg=
0xFF43C0	$M.iir_resamplev2.Up_160_Down_441.filter
        000002 

0xFF43C1	4sfHd7WZletGviFSeE4otutNnxP1gjI3HbHXOxub3Sg=
        60CCCD 

0xFF43C2	+1RjLYW5VMHYP0I1yRj+OKFhTCBPBsUFkhUZKiqIiVA=
        000000 

0xFF43C3	xBbj3lcdzCQg9FcvLV7qiXGSLDwBFIxhLIw5vH5xHvY=
        433333 

0xFF43C4	6cVE7wGYBl8jyiDO0qazlHCapp1VnzTtfSGMZ9KOEsM=
        001048 

0xFF43C5	rA+nXdJ2wQc63SN0XtIUpLmnak2ZLFtId5P+48z2PdE=
        000006 

0xFF43C6	e0nUDSMPP1fBEGi+NJXVCXVkKEiZVe0KvvzdhgkNgl0=
        000000 

0xFF43C7	HUf6Wwxk4AbS9jb35q7ihlXgmrH4EF/Ilk0r1PvawD0=
        000028 

0xFF43C8	eCdo/UUThLIXuvJHeU5yiKBrbqdvQ+wFFCV9Jr+tS9s=
        000007 

0xFF43C9	OzyWmqaeJC1+qXMw247dIs7hqJMJInR/D/n3A5n7Lw8=
        FF4F40 

0xFF43CA	cBMQs69/GOoXBwuIJgp5X1JWmPqOD+6q6t1EiUOWktk=
        433334 

0xFF43CB	EPNGyzuYk2fVoDcrOGp6hDNzGbt4N2Kry0LpbIZh62g=
        000A8D 

0xFF43CC	nSz8gxY2c9PLRc2NTA4MGiSnajTQoJpb8SRSy/bW2gw=
        00000A 

0xFF43CD	lBsTWEB/8ZEbddEWorkV7RuFZw/Q1yG0j2n3lyUQz7A=
        000013 

0xFF43CE	G44KsdjoJuHrZt8y8GiIn6pl0szdW9mhl5yBinBph24=
        000004 

0xFF43CF	rOEIFK8AGum3xy+oC7zl1OOvWp92BKAUY32IG6QMqDY=
        FFFFF9 

0xFF43D0	5IEXdYC6jNfAPnvexC0iaSxRUckGqjC/ziUzEaai9uk=
        FFFFF7 

0xFF43D1	K5xUlFyyQcsdPeht5L3wdg5/8Q2X4Iwqt2t/p0TGAEg=
        FF405E 

0xFF43D2	RXxSsR//JY1HPyYELm4Rk4q99IQI5AvRIkZ9LNzHmec=
        200001 

0xFF43D3	MtJ/EI4XvGt50Rgs7WxhbjIVi9o6rGMf2YvrqLgLqJg=
        000005 

0xFF43D4	/OfzQeqNMOVpK9v7oF5beUmTAFMPjJqrWsYC7FOqk0c=
        0012DE 

0xFF43D5	Nl/AKv5cbXgg+T/7p4v+tiq5HRk0H6FXMCXV3DZEfEo=
        009B81 000000 F99795 1ECC8B 
        C24807 406964 DCF04B 

0xFF43DC	PVYMN7QR4vfFZ3tWwZ+NddMoKb3wsRBhLqEHJa25lg8=
        000004 

0xFF43DD	dGBCvs2quQtCqgbx/ZeHlXTaMUJJ6ex57Jjz7C3sXkw=
        002BC1 000000 0D4594 CD13C2 
        4DC209 C838F0 

0xFF43E3	u0Pr1Mn5gQKk1hjEEWcmm3eqanlBHS6ldnAyNSyvchs=
        000003 

0xFF43E4	V2nZzOX56RjD68hRNhhFYHa8of5imP/ABg5FeLrtU7w=
        003730 0CB7AF CDA8A7 4E1DAD 
        C7A73C 

0xFF43E9	7htcXpJzKjbSOOvmFgvDcDllVF5O8r4a2PoJLjmg50w=
        000003 

0xFF43EA	5+enw6hFyMl4NHLXO1MdYyBqRBjaRZ//7IdxWwHUijg=
        004A14 0C47D1 CE01E5 4EBC1C 
        C7054E 

0xFF43EF	XYou/dWOVCJ4PmzU9p3bz6R7VDd3UGjeg/KfmfaQ67o=
        000003 

0xFF43F0	$M.tone_in.copy_op_right.prev_op
0xFF43F0	$M.tone_in.copy_op_right
        002BF0 

0xFF43F1	$M.tone_in.copy_op_right.next_op
        FFFFFF 

0xFF43F2	$M.tone_in.copy_op_right.func
        FF5C77 

0xFF43F3	$M.tone_in.copy_op_right.param
        000004 000002 FF3F01 FF4FFF 
        002C80 000060 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF4400	$M.A2DP_OUT.codec_out
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF47E8	$cbuffer.read_port_buffer_size
0xFF47E8	$cbuffer.port_buffer_size
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF47F4	$cbuffer.write_port_buffer_size
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF4800	$M.A2DP_OUT.encoder_in
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF4BE8	$cbuffer.port_limit_addr
0xFF4BE8	$cbuffer.read_port_limit_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF4BF4	$cbuffer.write_port_limit_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF4C00	$M.dac_out.dac_out_left
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF4DC0	$M.iir_resamplev2.Up_160_Down_147_low_mips.filter
0xFF4DC0	yVcFGLOocZqbXZh0RAL0cx0k5jOg9m7CDIoU2rLMgUU=
        000000 

0xFF4DC1	6kwYhRJYnYNJzLQKVieu5agZnxx1A2OKcQ7DOXCb51Y=
        75999A 

0xFF4DC2	eCmZU/KkJOtMp3soeL9f6l2xB6ZdMmso+K0Af5Upwrg=
        000000 

0xFF4DC3	/Wgiey7CF1MLmn117bUcu5vOA9q7NPAJA00l1ZqkzGM=
        000000 

0xFF4DC4	5rzgV2+1WH+yJH2oAs9BEP+OHYyo6G5q+P63cGj1j2Y=
        000000 

0xFF4DC5	KCdaOT0dZUhgVEutH6wJpdSAY2LaCRsEew4gleZloaE=
        000DEC 

0xFF4DC6	Wu9mrrV3Yop0NZbvOaABsSeQBUR8ZUYBBgB4olu4gOI=
        00000A 

0xFF4DC7	2rEmQmvvOPWzWhJ4kVITNg7EqI8BFvTuuVIyq66Fs0E=
        000013 

0xFF4DC8	2awr0r7Y8N79ivEBDhWjapOtp/nvf7wD2sxi9Wsmfy0=
        0000A0 

0xFF4DC9	JWMfNMqn9/0n7PZ28lfuVe8WzkaHHUl68HahukgKhyA=
        000000 

0xFF4DCA	xsLKGjyn5LXLQPc+1GDKBrbmA8ZYLCouw3IpAQxGoCw=
        FFFFF9 

0xFF4DCB	4b+hvmG+ffaN14eTjYGfdY9ZvZ1EpCoEvYWxXMjfeEA=
        FF532C 

0xFF4DCC	qkTC6zEM8cQN413QBX2bvWQBMlHY1ZskR7c6v3phe84=
        75999B 

0xFF4DCD	5v5gF13afOvgOorPEeds8obKHCkK8MGVkIJ4v0qpb7s=
        000000 

0xFF4DCE	2qBb8Om5herl/ZdhRZ2PXu0CcW6vqw0zZZZR7LzhaZw=
        001287 

0xFF4DCF	UxxLLOR9AK572bQ213wzlCccRhqADFVmosdVp1jbrSs=
        55F8B0 084F66 09C229 0F6491 
        14762E 

0xFF4DD4	uXKgUN5a6r5KJJ5pIC+NRiUkwa7+CNURvY06Y+OUeJg=
        000003 

0xFF4DD5	9NmVn7LIOTQ48J8af96vn48A3gIIlU2R6ulVqL0KztM=
        643917 0E04CF 04D464 07FB8E 
        125C2A 

0xFF4DDA	BtrVWiTXD8YkoGuHtej8dptV4ggCeYJOS0smE6M0buc=
        000002 

0xFF4DDB	wiImVNnmD7hoZFfC78FVWIryqN5/0LC5YnSLBbT5DSw=
        78F8CF 188DC1 F2E5FD 002F31 
        F8058D 

0xFF4DE0	xSSmUNS+jceARGSQNvaPgo18u9f89N5WQVLRKFGuSPY=
        000001 

0xFF4DE1	DBy9A+fN0+vh3PFVL0ddhubG7VZacKsE75L2mNwzOdM=
        7CB29A 0B3487 EFBE3E 083CC1 
        E73EB4 

0xFF4DE6	ZF1wMf0ZfCg3QJiF/7UzGC9nWVal+1vUQCrFg32zNPA=
        000002 

0xFF4DE7	pBsmSkHNN5i0rC+mFQ5dJ7IG8h2wBw7nARjbrN3/beg=
        7BEE22 C7D160 3952BE B618DA 

0xFF4DEB	U/htIUg8t6zXTK1agFRsX8RNY9I3paae3o8E8yTbdMU=
        000000 

0xFF4DEC	$M.dac_out.auxillary_mix_right_op.prev_op
0xFF4DEC	$M.dac_out.auxillary_mix_right_op
        FFFFFF 

0xFF4DED	$M.dac_out.auxillary_mix_right_op.next_op
        002AF0 

0xFF4DEE	$M.dac_out.auxillary_mix_right_op.func
        002C6D 

0xFF4DEF	$M.dac_out.auxillary_mix_right_op.param
        000001 000001 946003 FF5C50 
        000000 FFFF80 080000 080000 
        008000 7FFFFF 7FFFFF 040000 
        000000 7FFFFF 000000 

0xFF4DFE	$M.system_config.data.pcmin_l_pk_dtct
        002B54 000000 

0xFF4E00	$M.adc_in.audio_in_left
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF4F40	OU+uCOpqrZ6wKTo/7/vPeOBEOR6oy93DYupuN1awUcw=
        00192B 0045FD 006BC5 008AE8 
        00A3D9 00B70E 00C503 00CE37 
        00D329 00D459 00D241 00CD5B 
        00C61B 00BCEE 00B23D 00A668 
        0099C8 008CAE 007F61 007223 
        00652B 0058A9 004CC4 00419D 
        00374C 002DE3 00256D 001DEF 
        001769 0011D7 000D2D 00095F 
        00065C 00040F 000263 000140 
        00008C 00002C 000007 000000 
        FF052E FD3502 FB9622 FA2780 
        F8E7CC F7D575 F6EEB4 F63190 
        F59BE4 F52B67 F4DDB2 F4B048 
        F4A09A F4AC0F F4D00A F509EF 
        F5572A F5B532 F62191 F699E4 
        F71BE2 F7A55F F8344D F8C6C3 
        F95AF8 F9EF4A FA823E FB1280 
        FB9EE0 FC2659 FCA809 FD2335 
        FD9744 FE03C2 FE6858 FEC4D1 
        FF1912 FF6519 FFA900 FFE4F1 
        7FFFFF 7FAA20 7EFEE4 7DFF4D 
        7CACD9 7B0985 7917C1 76DA72 
        7454E8 718AD7 6E8051 6B39BE 
        67BBD2 640B83 602E00 5C28A8 
        5800FD 53BC9B 4F612C 4AF460 
        467BDF 41FD40 3D7E00 39037A 
        3492D8 303111 2BE2DD 27ACB0 
        2392B3 1F98BE 1BC253 18129B 
        148C63 113217 0E05C6 0B091B 
        083D64 05A38E 033C28 010769 

0xFF4FB8	d/PucvzPedpMmpDQX8hEgTWHybvuf2NgG4L03mfLAn4=
0xFF4FB8	$M.iir_resamplev2.Up_147_Down_160_low_mips.filter
        000001 

0xFF4FB9	lx5ZqCQYjbsipNbP4+zA+SCYWFeTiDYtRq6/x7/ozLQ=
        0B51DA 

0xFF4FBA	K30oWwYO0si/0dDYgJMgN5vSgrgDEKab9uh5m/819rE=
        000000 

0xFF4FBB	yUmwCRMMzgZI1ECK/eaIjWJ3C44Der7mDQnQarcDyrE=
        000000 

0xFF4FBC	YuIPQMsS/DRu+MzRY5c2j9BQ+p/l0iax74g6m6uw+KQ=
        000000 

0xFF4FBD	iGp/7tyWDp8UjJrjo+ZCfUZJEIl99V/ZIYjVz7ckZaE=
        000A8D 

0xFF4FBE	wqCBy1RuDcKEWyaLH0waRcNgw0RHqS7wwHOp8rYd92M=
        00000A 

0xFF4FBF	BXF/SEIQaQFIW4BofMvzIjYnYQZFC7QUZ6T5c7pvK00=
        000013 

0xFF4FC0	all52KXtZqAY+Bsr+Di9/W5NoRNFCRFq1aX0byvedMc=
        000093 

0xFF4FC1	JDZJvulGt2QJqxBQpJrivRGKBQingbHGIaj8GL6ImkE=
        000000 

0xFF4FC2	3AU7zh5Z6RTwsZvX9AvEiIrr2ivOqYrOxhegpJWUzvc=
        FFFFFB 

0xFF4FC3	IkRXU9UhtWJXPcM8ZzqP4GLEaOKEwF3XfCQZV4aFmZw=
        FF564C 

0xFF4FC4	Rj5XrxB/U+7a9K0x+3yqgobhfb6Xi6ES1fqai7OdTm0=
        0B51DB 

0xFF4FC5	E4IYNgTPbzLezC0ZdWty+hhr6WK8aGF3cZpl2LiQFC8=
        000001 

0xFF4FC6	D6NQYsyJTl3BBXaD+wd/SOYrchkjbUa7ireIZfyb9gU=
        001287 

0xFF4FC7	VyUHspXi3peAijfrrtasVM3w+lRhc6wHasDwi0OXYv4=
        51AA00 10A35D 136A91 1E3DE5 
        287ACA 

0xFF4FCC	ebUbB9JP6brHLcnqRO3R1oUGV8K+7k0EkUykIe/itLI=
        000002 

0xFF4FCD	iOVUIZWAdnKARnBDrrS/10hCNrQGwRcJqoOJXc8H+hA=
        6013FA 37B0F8 13293F 1FBE21 
        46F352 

0xFF4FD2	o/a7JylIxD7QjsdzFdTj9UrDiT+Rw4lDvek6+hNxH/8=
        000000 

0xFF4FD3	+U1h0+CyPL6L24m/YxJQBf1gAyHBgOy5blr0xSgAYH8=
        40780C 186FCF F28671 01565D 
        F6A6F5 

0xFF4FD8	gE7yiblMQis8JPsSEEmM7tsL0XamqYEtGoYMUDOYko8=
        000001 

0xFF4FD9	fW7d55EA4WzxJqaIGFg+qWmdORUszAMxwaWI94vpGPk=
        41160B 0B3A23 EF56B9 092C8D 
        E69742 

0xFF4FDE	KjmXxtk/5ftxehfNr2Y7L3myuPDHi8Ez83y8irDZ8iw=
        000002 

0xFF4FDF	zs/Of/bg+rH+Xdynsh83K7EA8MJIMXfNmT3YR/RRImw=
        6B6674 F8EE1E 076C14 F67FDF 

0xFF4FE3	kY4WSRbKaeIMquN38g+SzpKCOb0YiLNoDiFSAptXlY0=
        000003 

0xFF4FE4	$cbops.scratch.BufferTable
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 

0xFF4FFF	$M.tone_in.current_tone_sampling_rate
        001F40 

0xFF5000	$M.A2DP_IN.decoder_out_left
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF5140	96jq1pr9wx3F+i3iBn7dQgv4tSGYf2UFPsciRmJlQb8=
        FF69FF FF7082 FF7879 FF8191 
        FF8B7B FF95F3 FFA0B8 FFAB92 
        FFB64F FFC0C0 FFCABF FFD428 
        FFDCDE FFE4C5 FFEBC9 FFF1D7 
        FFF6E0 FFFAD6 FFFDB2 FFFF6C 
        000000 03BF9F 032646 029BD1 
        021F73 01B05D 014DBF 00F6CC 
        00AAB9 0068BD 003014 000000 
        FFD7C6 FFB6B5 FF9C1F FF875F 
        FF77D9 FF6CF7 FF662C FF62F3 
        FF62D0 FF654D 22079B 1FBD31 
        1D87E8 1B6846 195EB8 176B8C 
        158EFB 13C920 1219FF 108185 
        0EFF88 0D93CA 0C3DF7 0AFDAA 
        09D26E 08BBBD 07B903 06C9A1 
        05ECEA 05222C 0468AA 5D268F 
        5A508D 576E4D 548206 518DE7 
        4E941C 4B96CA 489808 4599E4 
        429E5B 3FA75A 3CB6BB 39CE45 
        36EFA7 341C79 31563D 2E9E58 
        2BF617 295EA9 26D925 246681 
        7FFFFF 7FD3C8 7F7B83 7EF780 
        7E4838 7D6E4A 7C6A7D 7B3DBC 
        79E916 786DBD 76CD04 75085D 
        732157 71199E 6EF2F5 6CAF37 
        6A5052 67D847 654926 62A50D 
        5FEE20 

0xFF51A9	JfJFBYSw4w7GTIjwxXNNkKwlGIt5IY7AFbThOUd6jS0=
0xFF51A9	$M.iir_resamplev2.Up_441_Down_160.filter
        000000 

0xFF51AA	K+83SLn/RPNxMSPPBgacB+4t7c6I0YL64cJsR1QqbO0=
        2E709E 

0xFF51AB	EiQRJBk3+Zh62hDp4PH622REpT3XVYsZRT39erhgs/E=
        000000 

0xFF51AC	P75QyVRbMFQk9Ci/nVqL72Rip3f62iVd7CFtLIgYHvM=
        3CF3CF 

0xFF51AD	LCofPDvup0S6LxqHEUyZ08q4b77BuaDZM3b6hh/cu2I=
        001048 

0xFF51AE	hLAsKP0H3P0NA1zCNPiHKDz4f2Naj1f4Qqxk/l80FAU=
        000006 

0xFF51AF	glw4LV5EPu8ueK4etA44ZS+sdmF5Ie6g26hFWwuWnD8=
        000000 

0xFF51B0	OquiYzeMrpxJodKiw9N46BfmDrssjsmmD+1kp2dY+xs=
        000015 

0xFF51B1	ptTgM+y5TC1uCuXT3PLcQ91DWobPmTCNTz4erYpKDM4=
        000007 

0xFF51B2	sTTP37HY6H/xcGeq2ObKi0Z/eH/zVaByNp0yBykf9yg=
        FF41C0 

0xFF51B3	7/hws07Pp1fAVxEKOgLehEEQr7sGpSypQ2kyH/IL040=
        3CF3D0 

0xFF51B4	ddGXwE4BACCJqc4hUZOuTLftXL6jhOGFru+UN6+eSpk=
        000DEC 

0xFF51B5	bUSf7WQ278ilo/RHq2yKAl2gsfT0gBTRIuEMwpLUnmw=
        00000A 

0xFF51B6	jc+HWbcqTH0nYNkas8BgULDvvSBJQxIcJdZiB3J0Hvs=
        00000F 

0xFF51B7	P1Wk4UTuWxKYWCFtoi2vSqORzj8bK/5182cu9SvHrB4=
        000015 

0xFF51B8	pIIyJL0W8oA1hXZ5GCSwxxm4b/okz98XVOgiCPpwXoo=
        FFFFF9 

0xFF51B9	fuHv1k7KOdMz2uQIvGpuYdwfAJuRyQi7JorZ3VpQ+x4=
        FFFFF9 

0xFF51BA	nKyDoVBO9Hww3yQBR8MkOMaDvAhWwio7ZIxr6PLBXhY=
        FF5140 

0xFF51BB	p6Gu/2Ej4swSNZaC5i9ePt8VYq7Uh8nRrXhl0fkTkME=
        618619 

0xFF51BC	5LeSF2Dp3OOmcgapZT1u/c/qwvLlT74feODlxS6LpHg=
        000000 

0xFF51BD	t4HTOVxWOelTKTABtrkvmdWXrPmciyCDwZc6+l+xHWU=
        0013F7 

0xFF51BE	boy0DOUO5K1wogbPg1yNxIinl4D6gSH5uATkwojRfoM=
        0B6A70 043DED EAE08C 31263F 
        BBDB01 3B4FC8 E0DBA9 

0xFF51C5	7m413b0f83qHWF4dpbzWiussclrUpmKioDg3PxmUdTQ=
        000004 

0xFF51C6	iCdcZK3AFSOGYbuGfgB3W+OMFeGd/jKAN7Weuvwfmng=
        01CA86 F70BCC 25E520 B60E9A 
        522202 CBB779 

0xFF51CC	DGKdooFNkm5/gJuTjzs+CYp14Ic1DUue9DgPfazj27I=
        000003 

0xFF51CD	3fRkT8JgLlnMRVBkt25oxr1v/CD/cElz5gJ5jNBCcHg=
        022E26 134B43 BCED2E 68FE06 
        AB1AB0 

0xFF51D2	SNkrPcqvc0MMuiZA7fSnJpBuxr/0r4qW63ZDe9KgUAY=
        000002 

0xFF51D3	$M.iir_resamplev2.Up_1_Down_3.filter
0xFF51D3	GHYHA5azukVre2J4m4hY8fFbKs63UGlIUNO7gYKwEvk=
        000003 

0xFF51D4	ovjywe7YEvq3HZWJcOLK6iSK0nnt64G1fNyTnfK8448=
        000000 

0xFF51D5	MS4vUjBN1VGgpAeT6UuZ/q460NrzBJiVlwjuXFETSqg=
        000000 

0xFF51D6	cctFmnsTzEJKbZa85g4I0Hpvbuyssx3KLeWWpUl3QM8=
        000000 

0xFF51D7	3k0ICObHaP+I6ig/j7Z6WBVyotkplxuXpGruth47h6k=
        000000 

0xFF51D8	r+KLR4dPoajPNym/uhFeJbZRwqKCM+R72hAD5GGWCdM=
        000A8D 

0xFF51D9	kV3KNHPnEoCuJFJfBzdeSLUGbLqwxXqWXrPFno4nYHg=
        00000A 

0xFF51DA	EX4gfl14X//DDS2qLL1HkmEexx+SFMMxsC1uk4tAxVQ=
        000013 

0xFF51DB	xlyOgervBRR1GVFtgGgRvxBI+vZgU5MdWHtBUYbPVM0=
        000001 

0xFF51DC	jj68LFRbK7QUOHPhJFucymipTosV+htbd1moaz7XSUw=
        000000 

0xFF51DD	46bTxlxdQ5g7O2FBQX46gLdZGrLgnWY1qTfMlblrbgE=
        FFFFFA 

0xFF51DE	3rXRWPMS7CVcvu52BJ3yMoY6g2CiMJfFwhgA121u9bo=
        FF4072 

0xFF51DF	7dtDGbK31/0diKzHh1dkoTMasxNssg/eWk5byVBK6yk=
        000000 

0xFF51E0	ypMUyN0vZhvR47qKWNPDSkAFY19LdflCr7Jtgi2aSG0=
        000003 

0xFF51E1	5DeJho9aPtk+aD7nzlxg8kbXxBc7yOVjDpAjhfAFj9o=
        001331 

0xFF51E2	EEOmNDgLRdiCvCcD5sqwkwusdlB0DqhRsxKtVPU4Ib4=
        00A070 FDA52D 0D9A4C DB00B8 
        3CD7BA BECFDE 2D9EE4 EC8839 

0xFF51EA	LrwlJkgV56orBmuJRwc2VcqwktoW3o3wQHmY5SFh/qM=
        000005 

0xFF51EB	3JSJBRqAYUFxilIKfm3spAmmozZd+DeYsid1Gjhuv4M=
        0013CF 04EB12 E763CB 396614 
        B15F84 42C01E DE81E9 

0xFF51F2	UkVIEoQtRCDiiq/zlVzBh9qKn8/YTGnzDhMoDEx2WHc=
        000004 

0xFF51F3	sME8aOKgv194x9xqrvoblnVPL16nNKQqdDCq4GBdDzE=
        005D50 047CA2 E7CCBC 3ADF0A 
        AD5F50 46A388 DCEA05 

0xFF51FA	zOyvwUOUzVFWlnusXJ3tVfBAmH1DXSeg+E2lNPZ+aVA=
        000004 

0xFF51FB	$M.tone_in.copy_left_to_right.prev_op
0xFF51FB	$M.tone_in.copy_left_to_right
        002B25 

0xFF51FC	$M.tone_in.copy_left_to_right.next_op
        FFFFFF 

0xFF51FD	$M.tone_in.copy_left_to_right.func
        002C61 

0xFF51FE	$M.tone_in.copy_left_to_right.param
        000001 000002 

0xFF5200	$cbops.scratch.mem3
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF532C	IsNxNLVsChmtresT92nEGrTvqNzTgw314bsh8fYR/AA=
        00A455 00A266 00A073 009E7D 
        009C85 009A8A 00988C 00968C 
        00948B 009287 009082 008E7D 
        008C76 008A6E 008866 00865E 
        008456 00824D 008045 007E3E 
        007C38 007A32 00782E 00762B 
        007429 007229 00702B 006E2F 
        006C35 006A3D 006848 006656 
        006466 00627A 006090 005EAA 
        005CC7 005AE7 00590B 005733 
        00555F 00538E 0051C2 004FFA 
        004E36 004C76 004ABB 004904 
        004752 0045A5 0043FC 004258 
        0040BA 003F20 003D8B 003BFB 
        003A71 0038EC 00376C 0035F1 
        00347C 00330C 0031A2 00303D 
        002EDE 002D84 002C2F 002AE1 
        002998 002854 002717 0025DE 
        0024AC 00237F 002258 002137 
        00201B 001F05 001DF4 001CE9 
        001BE4 001AE5 0019EB 0018F6 
        001807 00171E 00163A 00155C 
        001483 0013AF 0012E1 001218 
        001155 001096 000FDD 000F29 
        000E7B 000DD1 000D2C 000C8C 
        000BF2 000B5C 000ACA 000A3E 
        0009B6 000933 0008B5 00083A 
        0007C5 000753 0006E6 00067E 
        000619 0005B8 00055C 000503 
        0004AE 00045D 000410 0003C6 
        000380 00033D 0002FD 0002C1 
        000288 000253 000220 0001F0 
        0001C3 000199 000172 00014D 
        00012A 00010B 0000ED 0000D2 
        0000B9 0000A2 00008D 00007A 
        000068 000059 00004B 00003F 
        000034 00002A 000022 00001B 
        000015 00000F 00000B 000008 
        000005 000003 000002 000001 
        000000 000000 000000 000000 
        FD5E79 FD6FE4 FD8124 FD9238 
        FDA321 FDB3DE FDC46E FDD4D2 
        FDE508 FDF512 FE04EE FE149C 
        FE241C FE336E FE4291 FE5186 
        FE604C FE6EE4 FE7D4C FE8B85 
        FE998F FEA769 FEB514 FEC28F 
        FECFDB FEDCF7 FEE9E4 FEF6A1 
        FF032E FF0F8B FF1BB9 FF27B7 
        FF3386 FF3F25 FF4A95 FF55D5 
        FF60E6 FF6BC8 FF767B FF80FF 
        FF8B54 FF957B FF9F73 FFA93C 
        FFB2D8 FFBC45 FFC585 FFCE97 
        FFD77C FFE034 FFE8BE FFF11C 
        FFF94E 000153 00092D 0010DA 
        00185D 001FB4 0026E0 002DE2 
        0034BA 003B68 0041EC 004847 
        004E79 005483 005A64 00601D 
        0065AF 006B19 00705D 00757A 
        007A71 007F42 0083EE 008875 
        008CD7 009115 00952F 009926 
        009CFA 00A0AB 00A43A 00A7A8 
        00AAF3 00AE1E 00B128 00B412 
        00B6DD 00B988 00BC14 00BE82 
        00C0D2 00C304 00C519 00C711 
        00C8ED 00CAAC 00CC51 00CDDA 
        00CF49 00D09E 00D1D9 00D2FB 
        00D404 00D4F4 00D5CC 00D68D 
        00D737 00D7CA 00D847 00D8AD 
        00D8FF 00D93B 00D963 00D976 
        00D976 00D963 00D93D 00D904 
        00D8B9 00D85C 00D7EE 00D76F 
        00D6E0 00D641 00D592 00D4D4 
        00D407 00D32B 00D242 00D14B 
        00D046 00CF35 00CE16 00CCEC 
        00CBB6 00CA75 00C928 00C7D1 
        00C66F 00C503 00C38E 00C210 
        00C088 00BEF8 00BD5F 00BBBF 
        00BA17 00B867 00B6B1 00B4F4 
        00B330 00B167 00AF98 00ADC3 
        00ABE9 00AA0B 00A828 00A640 
        F5CA8C F5B4C7 F59FDD F58BCB 
        F5788F F56628 F55493 F543CF 
        F533D9 F524AF F5164F F508B7 
        F4FBE5 F4EFD7 F4E48A F4D9FD 
        F4D02D F4C718 F4BEBC F4B717 
        F4B026 F4A9E8 F4A459 F49F79 
        F49B44 F497B9 F494D4 F49295 
        F490F9 F48FFD F48F9F F48FDD 
        F490B5 F49224 F49429 F496C0 
        F499E9 F49D9F F4A1E2 F4A6AF 
        F4AC03 F4B1DD F4B83A F4BF18 
        F4C674 F4CE4D F4D6A0 F4DF6B 
        F4E8AC F4F260 F4FC86 F5071B 
        F5121C F51D88 F5295D F53598 
        F54237 F54F38 F55C99 F56A57 
        F57871 F586E4 F595AF F5A4CE 
        F5B441 F5C405 F5D417 F5E476 
        F5F520 F60612 F6174B F628C9 
        F63A89 F64C8A F65EC9 F67145 
        F683FC F696EB F6AA12 F6BD6D 
        F6D0FB F6E4BA F6F8A9 F70CC4 
        F7210C F7357D F74A16 F75ED5 
        F773B8 F788BF F79DE5 F7B32B 
        F7C88F F7DE0E F7F3A7 F80959 
        F81F21 F834FF F84AF0 F860F3 
        F87707 F88D29 F8A359 F8B994 
        F8CFDA F8E629 F8FC7F F912DB 
        F9293C F93FA0 F95605 F96C6B 
        F982D1 F99934 F9AF93 F9C5EE 
        F9DC42 F9F290 FA08D5 FA1F10 
        FA3540 FA4B64 FA617B FA7784 
        FA8D7D FAA366 FAB93E FACF02 
        FAE4B3 FAFA50 FB0FD7 FB2547 
        FB3AA0 FB4FE0 FB6507 FB7A14 
        FB8F06 FBA3DC FBB895 FBCD30 
        FBE1AE FBF60C FC0A4A FC1E67 
        FC3264 FC463E FC59F6 FC6D8A 
        FC80FA FC9446 FCA76C FCBA6D 
        FCCD47 FCDFFB FCF287 FD04EB 
        FD1727 FD293A FD3B23 FD4CE3 
        368070 35D643 352C63 3482D4 
        33D99A 3330BB 328839 31E019 
        31385E 30910E 2FEA2C 2F43BC 
        2E9DC1 2DF841 2D533D 2CAEBC 
        2C0ABF 2B674C 2AC465 2A220F 
        29804C 28DF21 283E91 279EA0 
        26FF51 2660A8 25C2A8 252553 
        2488AF 23ECBD 235182 22B700 
        221D3A 218434 20EBF0 205472 
        1FBDBC 1F27D2 1E92B7 1DFE6C 
        1D6AF5 1CD855 1C468F 1BB5A4 
        1B2599 1A966E 1A0827 197AC6 
        18EE4D 1862C0 17D820 174E6F 
        16C5B0 163DE4 15B70F 153132 
        14AC4F 142868 13A57F 132396 
        12A2AE 1222CA 11A3EB 112614 
        10A944 102D7F 0FB2C6 0F3919 
        0EC07B 0E48EE 0DD271 0D5D07 
        0CE8B2 0C7571 0C0346 0B9233 
        0B2238 0AB356 0A458F 09D8E3 
        096D53 0902E0 08998B 083154 
        07CA3C 076444 06FF6C 069BB5 
        063920 05D7AC 05775A 05182A 
        04BA1D 045D34 04016D 03A6CA 
        034D4B 02F4EE 029DB6 0247A1 
        01F2B0 019EE2 014C37 00FAB0 
        00AA4B 005B09 000CE9 FFBFEB 
        FF740F FF2954 FEDFB9 FE973F 
        FE4FE4 FE09A8 FDC48A FD808A 
        FD3DA7 FCFBE0 FCBB34 FC7BA3 
        FC3D2C FBFFCE FBC387 FB8857 
        FB4E3E FB1539 FADD48 FAA669 
        FA709D FA3BE0 FA0833 F9D594 
        F9A401 F9737A F943FD F91589 
        F8E81C F8BBB5 F89052 F865F2 
        F83C94 F81436 F7ECD6 F7C673 
        F7A10C F77C9D F75927 F736A7 
        F7151C F6F483 F6D4DC F6B624 
        F69859 F67B7A F65F85 F64478 
        F62A51 F6110E F5F8AE F5E12E 
        7FFFFF 7FFE11 7FFA34 7FF46A 
        7FECB1 7FE30B 7FD778 7FC9F7 
        7FBA8A 7FA932 7F95ED 7F80BF 
        7F69A6 7F50A4 7F35B9 7F18E8 
        7EFA2F 7ED992 7EB710 7E92AA 
        7E6C63 7E443B 7E1A34 7DEE4F 
        7DC08E 7D90F2 7D5F7C 7D2C2F 
        7CF70C 7CC015 7C874C 7C4CB2 
        7C104A 7BD216 7B9217 7B5051 
        7B0CC4 7AC774 7A8062 7A3792 
        79ED05 79A0BE 7952BF 79030C 
        78B1A7 785E92 7809D0 77B364 
        775B51 77019A 76A642 76494C 
        75EABA 758A91 7528D3 74C584 
        7460A6 73FA3D 73924D 7328D8 
        72BDE3 725170 71E384 717422 
        71034E 70910B 701D5C 6FA847 
        6F31CE 6EB9F5 6E40C1 6DC635 
        6D4A56 6CCD26 6C4EAB 6BCEE8 
        6B4DE2 6ACB9C 6A481A 69C362 
        693D77 68B65E 682E1A 67A4B0 
        671A25 668E7D 6601BC 6573E7 
        64E502 645512 63C41B 633222 
        629F2C 620B3C 617658 60E084 
        6049C6 5FB220 5F1999 5E8036 
        5DE5F9 5D4AEA 5CAF0B 5C1263 
        5B74F5 5AD6C7 5A37DE 59983E 
        58F7EB 5856EC 57B545 5712FA 
        567011 55CC8E 552877 5483D0 
        53DE9E 5338E6 5292AC 51EBF7 
        5144CA 509D2B 4FF51F 4F4CA9 
        4EA3D0 4DFA99 4D5107 4CA720 
        4BFCE9 4B5267 4AA79E 49FC94 
        49514D 48A5CE 47FA1C 474E3B 
        46A232 45F603 4549B5 449D4C 
        43F0CC 43443B 42979D 41EAF6 
        413E4C 4091A3 3FE500 3F3868 
        3E8BDE 3DDF68 3D330B 3C86CA 
        3BDAAA 3B2EB0 3A82E0 39D73F 
        392BD1 38809B 37D5A0 372AE6 

0xFF564C	AA9fCd/dXJADngr6Vf24ndgxwRztTy+LuEDVhvkybLk=
        007175 007147 00710B 0070C4 
        00706F 00700F 006FA3 006F2C 
        006EAA 006E1D 006D85 006CE4 
        006C39 006B85 006AC7 006A01 
        006933 00685C 00677E 006698 
        0065AC 0064B8 0063BE 0062BD 
        0061B7 0060AA 005F99 005E82 
        005D66 005C46 005B22 0059F9 
        0058CD 00579D 005669 005533 
        0053FA 0052BE 005180 00503F 
        004EFD 004DB9 004C74 004B2D 
        0049E6 00489D 004754 00460A 
        0044C1 004377 00422D 0040E3 
        003F9A 003E52 003D0B 003BC4 
        003A7F 00393A 0037F8 0036B7 
        003577 00343A 0032FE 0031C5 
        00308E 002F59 002E27 002CF8 
        002BCB 002AA1 00297A 002857 
        002736 002619 0024FF 0023E8 
        0022D5 0021C6 0020BA 001FB2 
        001EAE 001DAE 001CB1 001BB9 
        001AC5 0019D5 0018E9 001801 
        00171E 00163F 001564 00148E 
        0013BC 0012EE 001225 001160 
        0010A0 000FE5 000F2E 000E7B 
        000DCD 000D23 000C7E 000BDE 
        000B42 000AAB 000A18 00098A 
        000900 00087A 0007F9 00077D 
        000705 000691 000621 0005B6 
        00054F 0004ED 00048E 000434 
        0003DE 00038C 00033E 0002F4 
        0002AD 00026B 00022C 0001F1 
        0001BA 000187 000157 00012A 
        000101 0000DC 0000B9 00009A 
        00007E 000065 00004F 00003C 
        00002B 00001E 000013 00000A 
        000005 000001 000000 FBAA94 
        FBBD0A FBCF6B FBE1B3 FBF3E4 
        FC05FB FC17F8 FC29DA FC3BA2 
        FC4D4C FC5EDB FC704B FC819D 
        FC92D1 FCA3E5 FCB4D9 FCC5AC 
        FCD65E FCE6EF FCF75D FD07A8 
        FD17D0 FD27D4 FD37B4 FD476F 
        FD5705 FD6675 FD75C0 FD84E4 
        FD93E2 FDA2B9 FDB168 FDBFF0 
        FDCE50 FDDC88 FDEA98 FDF87F 
        FE063D FE13D2 FE213E FE2E80 
        FE3B99 FE4888 FE554D FE61E8 
        FE6E59 FE7AA0 FE86BC FE92AE 
        FE9E76 FEAA13 FEB586 FEC0CF 
        FECBED FED6E0 FEE1A9 FEEC48 
        FEF6BC FF0106 FF0B26 FF151C 
        FF1EE8 FF2889 FF3201 FF3B50 
        FF4474 FF4D70 FF5642 FF5EEB 
        FF676B FF6FC2 FF77F1 FF7FF7 
        FF87D5 FF8F8C FF971A FF9E81 
        FFA5C1 FFACDA FFB3CD FFBA98 
        FFC13E FFC7BE FFCE18 FFD44D 
        FFDA5C FFE047 FFE60E FFEBB0 
        FFF12E FFF68A FFFBC1 0000D6 
        0005C9 000A99 000F48 0013D5 
        001841 001C8C 0020B7 0024C2 
        0028AD 002C79 003026 0033B5 
        003725 003A78 003DAD 0040C5 
        0043C0 0046A0 004963 004C0B 
        004E98 00510A 005362 0055A0 
        0057C5 0059D0 005BC3 005D9E 
        005F60 00610C 0062A0 00641D 
        006584 0066D6 006811 006938 
        006A4A 006B47 006C31 006D07 
        006DCA 006E7B 006F19 006FA5 
        00701F 007089 0070E1 007129 
        007161 007189 0071A2 0071AC 
        0071A8 007195 F9F68B F9CE2D 
        F9A6CD F98069 F95AFF F9368E 
        F91314 F8F090 F8CEFE F8AE5E 
        F88EAD F86FEA F85212 F83524 
        F8191D F7FDFC F7E3BE F7CA62 
        F7B1E5 F79A46 F78382 F76D97 
        F75883 F74444 F730D7 F71E3B 
        F70C6E F6FB6C F6EB35 F6DBC5 
        F6CD1A F6BF33 F6B20D F6A5A6 
        F699FB F68F0A F684D1 F67B4D 
        F6727D F66A5E F662EE F65C2A 
        F65610 F6509D F64BD0 F647A6 
        F6441D F64132 F63EE4 F63D2F 
        F63C11 F63B89 F63B93 F63C2E 
        F63D56 F63F0A F64148 F6440D 
        F64757 F64B22 F64F6F F65438 
        F6597E F65F3C F66572 F66C1C 
        F67338 F67AC5 F682BF F68B25 
        F693F4 F69D2A F6A6C5 F6B0C3 
        F6BB21 F6C5DD F6D0F6 F6DC68 
        F6E832 F6F451 F700C4 F70D88 
        F71A9B F727FB F735A6 F7439A 
        F751D5 F76054 F76F16 F77E19 
        F78D5B F79CD9 F7AC92 F7BC84 
        F7CCAC F7DD0A F7ED9A F7FE5C 
        F80F4C F8206A F831B4 F84327 
        F854C3 F86684 F87869 F88A72 
        F89C9B F8AEE3 F8C149 F8D3CA 
        F8E666 F8F91A F90BE5 F91EC5 
        F931B8 F944BE F957D5 F96AFA 
        F97E2E F9916D F9A4B7 F9B80A 
        F9CB65 F9DEC6 F9F22C FA0596 
        FA1902 FA2C6F FA3FDC FA5347 
        FA66AF FA7A14 FA8D73 FAA0CB 
        FAB41C FAC764 FADAA3 FAEDD6 
        FB00FD FB1417 FB2723 FB3A1F 
        FB4D0C FB5FE7 FB72AF FB8565 
        FB9807 3D9A5E 3CECA4 3C3F13 
        3B91AF 3AE47C 3A3780 398ABF 
        38DE3D 383200 37860B 36DA64 
        362F0E 35840F 34D96B 342F25 
        338543 32DBC9 3232BA 318A1C 
        30E1F3 303A42 2F930D 2EEC5A 
        2E462B 2DA086 2CFB6D 2C56E5 
        2BB2F2 2B0F97 2A6CD8 29CAB9 
        29293E 28886B 27E842 2748C8 
        26AA00 260BEE 256E94 24D1F7 
        24361A 239AFF 2300AB 226720 
        21CE62 213673 209F57 200910 
        1F73A3 1EDF10 1E4B5C 1DB889 
        1D269A 1C9591 1C0571 1B763E 
        1AE7F8 1A5AA3 19CE41 1942D5 
        18B860 182EE6 17A668 171EE8 
        169869 1612ED 158E75 150B03 
        14889B 14073C 1386EA 1307A5 
        128970 120C4B 11903A 11153D 
        109B55 102285 0FAACD 0F342E 
        0EBEAB 0E4A44 0DD6FA 0D64CE 
        0CF3C2 0C83D7 0C150D 0BA765 
        0B3AE0 0ACF7F 0A6543 09FC2C 
        09943B 092D70 08C7CD 086351 
        07FFFD 079DD1 073CCD 06DCF3 
        067E42 0620BA 05C45B 056926 
        050F1A 04B638 045E7F 0407F0 
        03B28A 035E4C 030B38 02B94C 
        026888 0218EB 01CA76 017D28 
        013100 00E5FD 009C20 005367 
        000BD2 FFC560 FF8010 FF3BE2 
        FEF8D4 FEB6E6 FE7617 FE3665 
        FDF7D1 FDBA58 FD7DFA FD42B5 
        FD0889 FCCF74 FC9775 FC608B 
        FC2AB4 FBF5EF FBC23B FB8F97 
        FB5E00 FB2D76 FAFDF7 FACF81 
        FAA213 FA75AC FA4A49 FA1FEA 
        7FFFFF 7FFDFD 7FF9F9 7FF3F4 
        7FEBED 7FE1E5 7FD5DC 7FC7D2 
        7FB7C9 7FA5C1 7F91B9 7F7BB4 
        7F63B2 7F49B3 7F2DB9 7F0FC5 
        7EEFD7 7ECDF1 7EAA14 7E8442 
        7E5C7B 7E32C2 7E0717 7DD97C 
        7DA9F3 7D787E 7D451E 7D0FD5 
        7CD8A6 7C9F91 7C6499 7C27C1 
        7BE90A 7BA876 7B6608 7B21C3 
        7ADBA8 7A93BB 7A49FD 79FE71 
        79B11A 7961FC 791117 78BE70 
        786A0A 7813E7 77BC0A 776276 
        77072F 76AA38 764B95 75EB47 
        758953 7525BD 74C087 7459B6 
        73F14C 73874E 731BBF 72AEA3 
        723FFE 71CFD3 715E27 70EAFD 
        70765A 700041 6F88B6 6F0FBE 
        6E955D 6E1997 6D9C70 6D1DED 
        6C9E12 6C1CE2 6B9A64 6B169A 
        6A918A 6A0B39 6983A9 68FAE2 
        6870E5 67E5BA 675964 66CBE7 
        663D49 65AD8F 651CBD 648AD8 
        63F7E5 6363E9 62CEE8 6238E8 
        61A1EE 6109FE 60711E 5FD753 
        5F3CA1 5EA10E 5E049F 5D6759 
        5CC940 5C2A5B 5B8AAE 5AEA3E 
        5A4911 59A72C 590493 58614D 
        57BD5D 5718CB 56739A 55CDD0 
        552772 548085 53D90F 533115 
        52889B 51DFA8 513641 508C6A 
        4FE229 4F3784 4E8C7E 4DE11F 
        4D356A 4C8965 4BDD15 4B3080 
        4A83AA 49D698 492951 487BD8 
        47CE34 472069 46727B 45C472 
        451650 44681C 43B9DB 430B91 
        425D43 41AEF7 4100B1 405277 
        3FA44C 3EF637 3E483B 

0xFF592B	Xw4b/Oj4tjJa9IVeuYT01M7CfLPBhcW0d98digfSb8Q=
0xFF592B	$M.iir_resamplev2.Up_3_Down_1.filter
        000000 

0xFF592C	fRADdCgmNHBLMD6oZy0MuY7KYKum00mBsTkTcqX8dk4=
        2AAAAA 

0xFF592D	vujxbeKYFjs51G12n2bq1NfJipiRY6ZvkK8sEWpQlHs=
        000000 

0xFF592E	yBdnj8gYx1+GjB5FwC9vAVf6DTfyFTKmX4X/kkz9iwU=
        000000 

0xFF592F	urnGcGIkieRAu2GikxNzQkyEy0SSJeoqn/2H0EYB7xQ=
        000000 

0xFF5930	BDkwYZwmSgJTcfd0aOygZu2hH4SGNvK06iPVyIXzns8=
        000DEC 

0xFF5931	40N/7idw3BZ/SETdiXk/z+NSeb65YjHvyRq5Q76l3Oo=
        00000A 

0xFF5932	8fEc7NcCATfpY/5SpF2q+DS3XqHtaSm3kyieFoU1dUc=
        000013 

0xFF5933	TJxHrzON2BJB5F+kc8HLazUw/z2c4RP+rhsuZfujRNQ=
        000003 

0xFF5934	yJ42fdAzXJJtMrIQ026KPFbL0INwL275qvEG5fBV174=
        000000 

0xFF5935	7wBWF0TznOzUWsgGtHdmu/jzI/8VEjIJj6cNs4ohVu4=
        FFFFF9 

0xFF5936	6SdzDVGvT36Sq9GFb/0eWICYfCMZoMb+60pwoKnXJTg=
        FF4031 

0xFF5937	LvpbJJBfLvZpkR/dq8j50HLEsPx3+XKFCJuBPyicjNE=
        2AAAAC 

0xFF5938	eQpcsRhTG6Z7aj7YOqmHGWP+iNrEWLQjjs9vvTSZ1BQ=
        000000 

0xFF5939	+Gqo/Q6TiCbqR/7QfW7TvTlJfMGei/yROk6tBHXWYzA=
        001331 

0xFF593A	fvQY/igYLTV1Drn8Uji1vvRL+zNfAkKBiHJH7uCSCvE=
        01D0BF FDA0AE 0DEAC7 D9D456 
        3F01E9 BC83FF 2F0233 EC2249 

0xFF5942	WuQ5RKM4mw6VhJaGZAJ0dsKbLpO3lSuDMSXx3auvx6Y=
        000005 

0xFF5943	i2hx+UQvJiUi3VGNxE19rlLnfJiiT0O/rCVAu0UGRYs=
        00320F 04E927 E6F590 3AF29B 
        AEF1B1 44AE60 DDCC80 

0xFF594A	mkO55ZUNrqoSjQiWXaUD4QSUWNV3IweZv6h7mlSjK4I=
        000004 

0xFF594B	DFs34JYYMtRbaWC3DR8SxkSYpLgq0aSq+edy/M9lsyk=
        002858 048911 E72FCB 3CD517 
        AA724C 48E472 DC297B 

0xFF5952	6KGfDpIYNTripbxkrxh+fnr6ROdLXMwYWMsA57WSXCU=
        000004 

0xFF5953	$M.dac_out_resample.left_op
0xFF5953	$M.dac_out_resample.left_op.prev_op
        002C08 

0xFF5954	$M.dac_out_resample.left_op.next_op
        FF5B23 

0xFF5955	$M.dac_out_resample.left_op.func
        FF5C74 

0xFF5956	$M.dac_out_resample.left_op.param
        000000 000004 000000 FFFFF8 
        000008 FF5200 00012C 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF59A0	$M.dac_out.reference_op
0xFF59A0	$M.dac_out.reference_op.prev_op
        002AF0 

0xFF59A1	$M.dac_out.reference_op.next_op
        001FF8 

0xFF59A2	$M.dac_out.reference_op.func
        FF5C74 

0xFF59A3	$M.dac_out.reference_op.param
        000000 000005 000000 FFFFF8 
        000008 FF5200 00012C 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF59ED	$M.system_config.data.SpkrEqCoefsA
        00000A 000001 400000 000000 
        000000 400000 000000 000000 
        000000 000000 400000 000000 
        000000 000000 000000 400000 
        000000 000000 000000 000000 
        400000 000000 000000 000000 
        000000 400000 000000 000000 
        000000 000000 400000 000000 
        000000 000000 000000 400000 
        000000 000000 000000 000000 
        400000 000000 000000 000000 
        000000 400000 000000 000000 
        000000 000000 400000 000000 
        000000 000001 000001 000001 
        000001 000001 000001 000001 
        000001 000001 000001 

0xFF5A2C	$sra_struct
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF5A69	$M.CVC.data.ReInitializeTable
        0035D2 FF5BB8 00148B 0035E4 
        FF5BB8 FF4017 003284 002865 
        002B6E 0031F8 0013C1 0012AA 
        003547 FF4000 000000 003547 
        FF31E9 000000 003547 FF5B34 
        000000 0035AC 0014AD 000000 
        003547 FF3FB3 000000 0035AC 
        0014B5 000000 003389 000000 
        002AC4 0035F4 FF4021 000000 
        001B22 FF5C00 002C85 001B22 
        002BFC FF5C85 001B02 FF5C06 
        FF30F9 002601 FF5ADD 002A75 
        001316 FF5AC1 000000 000000 

0xFF5A9D	$M.system_config.data.UserEqCoefsA
        000000 000001 400000 000000 
        000000 400000 000000 000000 
        000000 000000 400000 000000 
        000000 000000 000000 400000 
        000000 000000 000000 000000 
        400000 000000 000000 000000 
        000000 400000 000000 000000 
        000001 000001 000001 000001 
        000001 

0xFF5ABE	$M.adc_in.sidetone_copy_op
0xFF5ABE	$M.adc_in.sidetone_copy_op.prev_op
        FF5BEE 

0xFF5ABF	$M.adc_in.sidetone_copy_op.next_op
        002928 

0xFF5AC0	$M.adc_in.sidetone_copy_op.func
        002C6A 

0xFF5AC1	$M.adc_in.sidetone_copy_op.param
        000001 000003 000010 0026AB 
        000000 000000 FF5C88 000000 
        002AFB 000000 000000 000000 
        000000 000003 0026B2 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF5ADD	$M.system_config.data.cmpd100_obj_44kHz
        000040 000020 002B61 FF5B70 
        002B61 FF5B70 080000 002C86 
        800000 080000 F9B037 FA0541 
        FE56CB FF8070 100000 080000 
        015555 00CCCD 000000 000000 
        000000 420B8C 030F11 420B8C 
        00ECE9 62032E 009E22 7C997B 
        0076AC 020000 

0xFF5AFB	$M.CVC.data.copy_proc_funcsSnd
        00146A E000AE 000000 000E29 
        FF4000 000000 0030DB FF5C2E 
        000000 00156D FF5C7C 000000 
        000E9E 00004A 000000 00156D 
        002C7C 000000 0013CB E000AE 
        000000 000000 

0xFF5B11	$M.system_config.data.MeloD_Expansion_filter_data
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF5B23	$M.dac_out_resample.sw_rate_left_op
0xFF5B23	$M.dac_out_resample.sw_rate_left_op.mtu_next
        FF5953 

0xFF5B24	$M.dac_out_resample.sw_rate_left_op.main_next
        002975 

0xFF5B25	$M.dac_out_resample.sw_rate_left_op.func
        002C67 

0xFF5B26	$M.dac_out_resample.sw_rate_left_op.param
        000004 000002 000000 000000 
        FF3F01 000070 000070 FF5A3E 
        000000 000000 000000 000000 
        000000 000000 

0xFF5B34	$M.CVC.data.rcv_vad_peq
        FF5B7D 002C58 000003 002ADB 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF5B45	$flash.code.address
	-------- [0x000C octets]

0xFF5B49	$flash.data16.address
	-------- [0x000C octets]

0xFF5B4D	$flash.data24.address
	-------- [0x000C octets]

0xFF5B51	$flash.windowed_data16.address
	-------- [0x000C octets]

0xFF5B55	$kal_filter_coef_lib.__warp.constants
        000081 C90FDB 00007D BE76C9 
        80007D E24DD3 80007D AC0831 
        00007F 8624DD 00007D EB851F 
        000080 800000 

0xFF5B63	$M.system_config.data.stream_map_right_in
        002C5E 000000 000000 0000A0 
        000BB8 001608 001598 000000 
        000000 000000 000000 000000 
        000000 

0xFF5B70	$M.system_config.data.stream_map_right_out
        FF5C53 000000 000000 0000A0 
        000BB8 0015B2 00147E 000000 
        000000 000000 000000 000000 
        000000 

0xFF5B7D	$M.CVC.data.stream_map_refin
        002C55 000000 000000 000078 
        000064 00161F 001397 002B7B 
        000001 000000 000000 000000 
        000000 

0xFF5B8A	$M.CVC.data.stream_map_sndout
        002C5B 000000 000000 000078 
        0003E8 0015B2 00147E 000000 
        000000 000000 000000 000000 
        000000 

0xFF5B97	$M.dac_out.copy_struc
        FF4FE4 FF5BFA FF5BFA 000003 
        002C52 FF5C56 FF5C4D 000003 
        800011 800012 002C55 000000 

0xFF5BA3	$M.dac_out.audio_out_volume_right
0xFF5BA3	$M.dac_out.audio_out_volume_right.mtu_next
        002B9F 

0xFF5BA4	$M.dac_out.audio_out_volume_right.main_next
        FF4077 

0xFF5BA5	$M.dac_out.audio_out_volume_right.func
        002C70 

0xFF5BA6	$M.dac_out.audio_out_volume_right.param
        000001 000001 7FFFFF 000000 
        000000 FFFFFB 0147AE 000000 

0xFF5BAE	$M.receive_process.RxFuncMips_data_block
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF5BB8	$M.CVC.data.fft_obj
        000000 0004E8 0005E8 FF3AD1 
        C5AE7F 0015C0 000000 000000 
        000000 000000 

0xFF5BC2	$M.back_end.EncoderMips_data_block
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF5BCC	$M.dac_out.dither_right_op
0xFF5BCC	$M.dac_out.dither_right_op.prev_op
        FF4077 

0xFF5BCD	$M.dac_out.dither_right_op.next_op
        FFFFFF 

0xFF5BCE	$M.dac_out.dither_right_op.func
        002C64 

0xFF5BCF	$M.dac_out.dither_right_op.param
        000001 000004 FFFFF8 000000 
        000098 000000 

0xFF5BD5	$M.system_config.data.BoostEqCoefsB
        000001 000001 400000 000000 
        000000 400000 000000 000000 
        000001 

0xFF5BDE	$interrupt.isr_call_table
        00137F 0035D7 000C75 0035D7 
        0035D7 0035D7 0035D7 0035D7 
        0035D7 

0xFF5BE7	$calc_actual_samples_struc
        800011 000000 001A0A 000FA0 
        000000 000000 000000 

0xFF5BEE	$M.adc_in.left_shift_op.prev_op
0xFF5BEE	$M.adc_in.left_shift_op
        FFFFFF 

0xFF5BEF	$M.adc_in.left_shift_op.next_op
        FF5ABE 

0xFF5BF0	$M.adc_in.left_shift_op.func
        FF5C65 

0xFF5BF1	$M.adc_in.left_shift_op.param
        000000 000001 000008 

0xFF5BF4	$M.tone_in.shift_op_left.prev_op
0xFF5BF4	$M.tone_in.shift_op_left
        002BE2 

0xFF5BF5	$M.tone_in.shift_op_left.next_op
        002B25 

0xFF5BF6	$M.tone_in.shift_op_left.func
        FF5C65 

0xFF5BF7	$M.tone_in.shift_op_left.param
        000003 000003 000008 

0xFF5BFA	$M.dac_out.insert_op_left
0xFF5BFA	$M.dac_out.insert_op_left.prev_op
        002BF6 

0xFF5BFB	$M.dac_out.insert_op_left.next_op
        002BF6 

0xFF5BFC	$M.dac_out.insert_op_left.func
        FF5C71 

0xFF5BFD	$M.dac_out.insert_op_left.param
        000000 000000 000000 

0xFF5C00	$M.system_config.data.SpkrEqDefnTable
        000001 00000A FF30D0 FF31A0 
        FF59ED 001F40 

0xFF5C06	$M.system_config.data.UserEqDefnTable
        000006 000005 FF3F7F FF3F99 
        FF5A9D 002A35 

0xFF5C0C	$M.system_config.data.rcv_process_streams
        002B54 FF5B63 002B61 FF5B70 
        000000 

0xFF5C11	$M.A2DP_OUT.codec_out_copy_op.prev_op
0xFF5C11	$M.A2DP_OUT.codec_out_copy_op
        FFFFFF 

0xFF5C12	$M.A2DP_OUT.codec_out_copy_op.next_op
        FFFFFF 

0xFF5C13	$M.A2DP_OUT.codec_out_copy_op.func
        002C61 

0xFF5C14	$M.A2DP_OUT.codec_out_copy_op.param
        000000 000001 

0xFF5C16	$M.calc_actual_samples.state_tab
        002397 00239C 0023A5 0023B0 

0xFF5C1A	$M.main.set_plugin_message_struc
        000000 000000 000000 000000 

0xFF5C1E	$M.main.set_codec_rate_message_struc
        000000 000000 000000 000000 

0xFF5C22	$M.main.set_eq_bank_message_struc
        000000 000000 000000 000000 

0xFF5C26	$M.main.get_user_eq_param_message_struct
        000000 000000 000000 000000 

0xFF5C2A	$M.main.get_user_eq_group_param_message_struct
        000000 000000 000000 000000 

0xFF5C2E	$M.CVC.data.ModeControl
        000000 000000 000000 000000 

0xFF5C32	$M.A2DP_IN.codec_timer_struc
        000000 000000 000000 000000 

0xFF5C36	$message.reattempt_timer_struc
        000000 000000 000000 000000 

0xFF5C3A	$pskey.result_pass_message_struc
        000000 000000 000000 000000 

0xFF5C3E	$pskey.reattempt_timer_struc
        000000 000000 000000 000000 

0xFF5C42	$sbcenc.set_encoder_params_message_struc
        000000 000000 000000 000000 

0xFF5C46	gEDisbKyIC06AoXOIhyHY1s3eIoPSEUloAw2H/FyII4=
        000B49 000B4E 000B55 000B60 

0xFF5C4A	$cbops.scratch.cbuffer_struc2
        000078 001F80 001F80 

0xFF5C4D	$M.adc_in.sidetone_cbuffer_struc
        0000C0 001500 001500 

0xFF5C50	$M.tone_in.right_cbuffer_struc
        0000C0 002200 002200 

0xFF5C53	$M.dac_out_resample.right_cbuffer_struc
        0001C0 001600 001600 

0xFF5C56	$M.dac_out.right_cbuffer_struc
        0001C0 001C00 001C00 

0xFF5C59	$M.CVC.data.vad_peq_output_cbuffer_struc
        000000 000000 000000 

0xFF5C5C	$M.A2DP_OUT.codec_out_cbuffer_struc
        0003E8 FF4400 FF4400 

0xFF5C5F	$M.A2DP_IN.decoder_out_left_cbuffer_struc
        000140 FF5000 FF5000 

0xFF5C62	$M.A2DP_IN.decoder_in_cbuffer_struc
        0003E8 001800 001800 

0xFF5C65	$cbops.shift
        000000 0015D6 001368 

0xFF5C68	Uumj6aqomP13RKA66Nv9aCcbEZtHQoYEtcBVxLl4Yhg=
        0009C3 0009CB 0009DA 

0xFF5C6B	$cbops.stereo_sync_op
        000000 0015A5 000000 

0xFF5C6E	$cbops.sidetone_mix_op
        000000 0015D6 000DB4 

0xFF5C71	$cbops.insert_op
        000000 001242 00124B 

0xFF5C74	$cbops_iir_resamplev2
        000000 000FF4 000B6A 

0xFF5C77	$cbops.fir_resample
        000000 000F6B 000794 

0xFF5C7A	$M.system_config.data.dac_l_pk_dtct
        002B61 000000 

0xFF5C7C	$M.CVC.data.mic_in_pk_dtct
        002B7B 000000 

0xFF5C7E	$cbuffer.tmp
        000000 000000 

0xFF5C80	$M.dac_out.dac_sr_flag
        000000 

0xFF5C81	$sra_resamp_adjust_frac
        000000 

0xFF5C82	$M.detect_end_of_aux_stream.write_move_counter
        000000 

0xFF5C83	$M.Sleep.LastUpdateTm
        000000 

0xFF5C84	$M.system_config.data.dithertype
        000000 

0xFF5C85	$M.system_config.data.BoostEqParams
        002571 

0xFF5C86	$M.receive_process.PeakMipsRxFunc
        000000 

0xFF5C87	$cvc_fftbins
        000081 

0xFF5C88	$M.CVC.data.ZeroValue
        000000 

0xFF5C89	$M.CVC.data.TwoValue
        000002 

0xFF5C8A	$M.set_plugin.codec_type
        FFFFFF 

0xFF5C8B	$M.set_codec_rate.current_codec_sampling_rate
        00BB80 

0xFF5C8C	$M.A2DP_IN.codec_sr_flag
        000000 

0xFF5C8D	$M.back_end.monitor_level
        000144 

0xFF5C8E	$M.back_end.PeakMipsEncoder
        000000 

0xFF5C8F	$M.codec_copy_handler.packet_size_obtained
        000000 

0xFF5C90	$M.codec_copy_handler.initial_write_pos
        000000 

0xFF5C91	$cbuffer.write_port_connect_address
        000000 

0xFF5C92	$cbuffer.read_port_connect_address
        000000 

0xFF5C93	$cbuffer.auto_mcu_message
        000001 000000 

0xFF5C95	$interrupt.total_time
        000000 

0xFF5C96	$message.queue_read_ptr
        000000 

0xFF5C97	$message.last_seq_sent
        000000 

0xFF5C98	$M.message.send_ready_wait_for_go.go_from_vm
        000000 

0xFF5C99	$pskey.last_addr
        FFFFFF 

0xFF5C9A	$timer.last_addr
        FFFFFF 

0xFF5C9B	$master_reset_needed
        000001 

0xFF5C9C	$M.codec_av_encode.WritePointer
        000000 

0xFF5C9D	$M.frame_sync.handlers.LOOP_COUNT
        000000 

0xFF5C9E	$M.cmpd100.analysis.MusicComp_Peak_log
        000000 

0xFF5C9F	$M.cmpd100.analysis.inst_gain
        000000 

0xFF5CA0	$M.cmpd100.applygain.old_lin_gain
        000000 

0xFF5CA1	$M.spi_comm.last_addr
        FFFFFF 

0xFF5CA2	8YKUUc+Da6haybqV0Qg2St0QqVTDzri9nt9RiVrAhLU=
        005555 


------------------------------------------------------------------------
Region: flash.data16
------------------------------------------------------------------------
0xD00000	$M.CVC.data.DefaultParameters_wb
        000003 00E000 000000 000000 
        000000 00000D 000000 006000 
        000000 000016 00A000 00000D 
        000000 00C000 000000 000016 
        00A000 00000D 000001 007700 
        000000 000016 00A000 00000D 
        000002 00EE00 000000 000016 
        00A000 00000D 000005 00DC00 
        000000 000016 00A000 00000D 
        00000B 00B800 000000 000016 
        00A000 00000D 000017 007000 
        000000 000016 00A000 00000D 
        00002E 00E000 000000 000016 
        00A000 00000D 00005D 00C000 
        000000 000016 00A000 00000D 
        0000BB 008000 000000 000016 
        00A000 000001 000000 000000 
        00000A 000004 00B000 000000 
        00000B 005000 000006 000000 
        000500 000000 000000 000D00 
        00012C 000000 000000 000B50 
        000000 000D00 0003B1 000000 
        000000 000B50 000000 000D00 
        000BB8 000000 000000 000B50 
        000000 000D00 0024EA 000000 
        000000 000B50 000000 000D00 
        007530 000000 000000 000B50 
        000000 000500 000000 000000 
        000D00 00012C 000000 000000 
        000B50 000000 000D00 0003B1 
        000000 000000 000B50 000000 
        000D00 000BB8 000000 000000 
        000B50 000000 000D00 0024EA 
        000000 000000 000B50 000000 
        000D00 007530 000000 000000 
        000B50 000000 000500 000000 
        000000 000D00 00012C 000000 
        000000 000B50 000000 000D00 
        0003B1 000000 000000 000B50 
        000000 000D00 000BB8 000000 
        000000 000B50 000000 000D00 
        0024EA 000000 000000 000B50 
        000000 000D00 007530 000000 
        000000 000B50 000000 000500 
        000000 000000 000D00 00012C 
        000000 000000 000B50 000000 
        000D00 0003B1 000000 000000 
        000B50 000000 000D00 000BB8 
        000000 000000 000B50 000000 
        000D00 0024EA 000000 000000 
        000B50 000000 000D00 007530 
        000000 000000 000B50 000000 
        000500 000000 000000 000D00 
        00012C 000000 000000 000B50 
        000000 000D00 0003B1 000000 
        000000 000B50 000000 000D00 
        000BB8 000000 000000 000B50 
        000000 000D00 0024EA 000000 
        000000 000B50 000000 000D00 
        007530 000000 000000 000B50 
        000000 000500 000000 000000 
        000D00 00012C 000000 000000 
        000B50 000000 000D00 0003B1 
        000000 000000 000B50 000000 
        000D00 000BB8 000000 000000 
        000B50 000000 000D00 0024EA 
        000000 000000 000B50 000000 
        000D00 007530 000000 000000 
        000B50 000000 000000 00000F 
        000000 000F00 000010 000003 
        000609 000C0F 001215 00181B 
        001E21 002427 002A2D 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000306 00090C 000F12 
        001518 001B1E 002124 00272A 
        002D00 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 001000 
        000306 00090C 000F12 001518 
        001B1E 002124 00272A 002D00 
        000000 000000 000000 000310 
        000000 002000 000000 000042 
        000000 004220 000000 000000 
        0050B1 00AA81 00571F 003EC3 
        00ECED 004000 000084 00DA2F 
        003B31 009440 000000 00D53F 
        00A4FE 00A000 004000 000081 
        00543A 003EB7 00E040 000000 
        00BB3B 004C24 00BC7F 00F9B0 
        0037FA 000542 00FE56 00CCFF 
        008071 001000 000008 000000 
        000155 005500 00CCCC 00420B 
        008B03 000F10 00420B 008B00 
        00ECE9 006203 002E00 009E21 
        007C99 007B00 0076AB 000800 
        0000F9 00B037 00FA05 0042FE 
        0056CC 00FF80 007110 000000 
        000800 000001 005555 0000CC 
        00CC3E 004859 0002D0 00253E 
        004859 0000D9 00BA5E 004272 
        000091 004F7B 006F08 00006D 
        000B08 000000 000000 000000 
        0003E0 000003 00E000 0003E0 
        000003 00E000 0003E0 000003 
        00E000 0003E0 000003 00E000 
        0003E0 000003 00E000 00E216 
        007999 009979 009999 000000 
        00017F 00FFFF 00FFFF 00D000 
        000000 001009 00B900 000001 
        004000 000000 000000 000000 
        00CF00 000000 000000 000140 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000858 
        00E9FA 003B6C 00D42C 009003 
        001DC8 007A16 00558D 000EED 
        004A0B 003190 00077B 002E05 
        009C2F 0003F8 00BD02 00CFCC 
        0001FD 009401 0068C1 0000FF 
        006500 00B4CE 000080 00007F 
        00FFFF 000080 000000 000000 
        000000 000000 000000 000000 
        000020 000000 000000 000300 
        000001 004000 000037 003CC8 
        009186 006F37 003CC8 002FAE 
        002692 00BB03 00373C 00C891 
        00866F 00373C 00C82F 00AE26 
        0092BB 000337 003CC8 009186 
        006F37 003CC8 002FAE 002692 
        00BB03 000000 000100 000001 
        000000 000140 000000 000000 
        000140 000000 000000 000100 
        000010 000000 00CF00 0051D1 
        000051 00D11A 00BE60 000000 
        001A40 000000 000080 0000FD 
        004000 000050 000000 00003C 
        000200 00000C 00CCCC 00093F 
        00B304 00B60B 00007A 00A600 
        007AA6 000B3F 00305A 009DF6 
        004000 000065 00AC8B 001800 
        000034 00CE07 00DA9D 00F800 
        00A1E8 000000 001400 0051D1 
        000051 00D11A 00BE60 000000 
        001A40 000000 000080 0000FD 
        004000 000050 000000 00003C 
        007F9B 00CE00 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 


------------------------------------------------------------------------
Region: flash.data24
------------------------------------------------------------------------
0xE00000	$M.CVC.data.ParameterMap
        002674 0012C3 002675 0012F4 
        002676 0012C5 002677 0012C8 
        00266D 0012C9 00266D 002866 
        002670 002869 00266D 002AC4 
        0026EE 0013C4 002662 FF5C84 
        002631 002B45 002632 002B46 
        002633 002B47 002634 002B48 
        002635 002B49 002636 002B4A 
        002637 002B4B 002638 002B4C 
        002639 002B4D 00263A 002B4E 
        00263B 002B4F 00263C 002B50 
        00263D 002B51 00263E 002B52 
        00263F 002B53 002546 FF5ADD 
        002546 002A75 002640 FF5AE7 
        002641 FF5AE8 002642 FF5AE9 
        002643 FF5AEA 002644 FF5AEB 
        002645 FF5AEC 002646 FF5AED 
        002647 FF5AEE 002648 FF5AF2 
        002649 FF5AF3 00264A FF5AF4 
        00264B FF5AF5 00264C FF5AF6 
        00264D FF5AF7 00264E FF5AF8 
        00264F FF5AF9 002650 FF5AE3 
        002651 002A7F 002652 002A80 
        002653 002A81 002654 002A82 
        002655 002A83 002656 002A84 
        002657 002A85 002658 002A86 
        002659 002A8A 00265A 002A8B 
        00265B 002A8C 00265C 002A8D 
        00265D 002A8E 00265E 002A8F 
        00265F 002A90 002660 002A91 
        002661 002A7B 000000 

0xE0007B	$M.CVC.data.StatisticsPtrs
        000029 E000A6 001DDB 0017F2 
        002C87 002C8E FF4DFF 002C79 
        FF5C7B 002C7B FF5C88 001DEB 
        002546 002BEC 002C89 FF5C8A 
        FF5C8B FF5C89 FF5C88 FF5C88 
        FF5C88 FF5C88 FF5C88 FF31FF 
        FF5C88 FF5C88 FF5C8B 001DEA 
        001DED FF5C7D 002C7D 002C84 
        FF5C88 FF5ACA FF5C88 001DEE 
        FF5ACB 002ACD 002AD5 001305 
        FF5C88 001DE7 001DE9 

0xE000A6	$M.CVC.data.StatisticsClrPtrs
        FF5C7D 002C7D FF4DFF 002C79 
        FF5C7B 002C7B FF5ACB 000000 

0xE000AE	$M.CVC.data.snd_process_streams
        002B7B FF5B7D FF5B8A 000000 


------------------------------------------------------------------------
Region: flash.windowed_data16
------------------------------------------------------------------------
0x000000	$M.AEC_500.wb_constants.nzShapeTables
        000000 000000 000000 000000 
        000000 000000 000000 000050 
        0007CD 0042B1 002B39 002A25 
        003204 00E02C 00761D 002803 
        00E624 0060A3 002158 00951E 
        00C7EC 001C95 00121A 00AD44 
        001902 007017 0089D3 00163B 
        000E15 000F87 001401 00F313 
        000E0C 001230 005111 0065DE 
        0010AC 004A10 00018F 000F63 
        00F60E 00D209 000E4A 00890D 
        00CC61 000D56 00A20C 00E87C 
        000C81 00380C 002036 000BC4 
        00E90B 006ED4 000B1D 00870A 
        00D09F 000A87 00C30A 0042A4 
        000A00 00F909 00C283 000987 
        000609 004E4D 000918 002808 
        00E46C 0008B2 00EF08 00838D 
        000856 002508 002A97 000800 
        00C707 00D89B 0007B1 00FB07 
        008CCF 000769 000407 004687 
        000725 004407 00052D 0006E6 
        003006 00C841 0006AB 005106 
        008F54 000674 003E06 005A04 
        000640 009C06 0027FC 000610 
        001B05 00F8F0 0005E2 007405 
        00CC9F 0005B7 006A05 00A2CD 
        00058E 00C305 007B46 000568 
        004F05 0055DA 000543 00E105 
        003260 000521 005205 0010B2 
        000500 007C04 00F0AD 0004E1 
        004104 00D234 0004C3 008304 
        00B52A 0004A7 002604 009975 
        00048C 001404 007F00 000472 
        003604 0065B4 000459 007704 
        004D7E 000441 00C604 00364E 
        00042B 001204 002012 000415 
        004B04 000ABC 000400 006303 
        00F63F 0003EC 004D03 00E28D 
        0003D8 00FD03 00CF9C 0003C6 
        006703 00BD5F 0003B4 008203 
        00ABCE 0003A3 004303 009ADF 
        000392 00A203 008A8A 000382 
        009603 007AC6 000373 001803 
        006B8C 000364 002003 005CD5 
        000355 00A803 004E9A 000347 
        00AA03 0040D6 00033A 001F03 
        003383 00032D 000203 00269B 
        000320 004E00 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000062 003BC0 
        0059AC 00A753 0005BB 004DA9 
        000B49 003807 004576 002542 
        003A9C 003F68 00CE3C 00EBF9 
        003AB4 00A838 00B70F 0036EA 
        000535 004648 0033C6 000732 
        006486 00311D 00E02F 00EED8 
        002ED4 00B82D 00CD33 002CD6 
        00532B 00EE6A 002B14 00042A 
        0045DE 002982 00DD28 00CA09 
        00281A 008627 007394 0026D4 
        008526 003CBF 0025AB 00B925 
        0020F5 00249C 000324 001C7F 
        0023A2 000C23 002C57 0022BB 
        001222 004DF9 0021E4 00CC21 
        007F50 00211D 004E20 00BE95 
        002062 00F820 000A4A 001FB4 
        00671F 006127 001F10 006A1E 
        00C211 001E75 00FC1E 002C12 
        001DE4 00371D 009E55 001D5A 
        00541D 00181F 001CD7 00A21C 
        0098CB 001C5B 00871C 001FC7 
        001BE5 007B1B 00AC93 001B75 
        00021B 003EBB 001B09 00B01A 
        00D5D7 001AA3 00241A 00718C 
        001A41 00051A 001185 0019E3 
        000319 00B577 001988 00D819 
        005D1F 001932 004319 00083D 
        0018DF 000718 00B69A 00188E 
        00F018 006802 001841 00CB18 
        001C45 0017F7 006C17 00D339 
        0017AF 00A917 008CB6 00176A 
        005C17 004896 001727 006117 
        0006B9 0016E6 009916 00C6FE 
        0016A7 00E516 00894A 00166B 
        002916 004D80 001630 004C16 
        001389 0015F7 003515 00DB4D 
        0015BF 00CE15 00A4B6 00158A 
        000215 006FB0 001555 00BE15 
        003C29 001522 00EF15 000A0E 
        0014F1 008414 00D950 0014C1 
        006E14 00A9DE 001492 009E14 
        007BAB 001465 000414 004EA8 
        001438 009514 0022C9 00140D 
        004313 00F802 0013E3 000313 
        00CE46 0013B9 00CA13 00A58C 
        001391 008D13 007DCA 00136A 
        004200 000000 000000 000000 
        000000 000000 000000 000000 
        000000 00000C 009998 000DCD 
        00760E 00E893 000FF0 001710 
        00E797 0011D1 00AE12 00B055 
        001385 001214 00511E 001515 
        007415 00D2E5 00168A 001F17 
        003BB4 0017E8 002318 008FD8 
        001933 003119 00D281 001A6E 
        00111B 000622 001B9A 00ED1C 
        002CA7 001CBB 007E1D 00479C 
        001DD1 00271E 005844 001EDD 
        00101F 005FAB 001FE0 002F20 
        005EB5 0020DB 005321 005620 
        0021CF 002F22 004692 0022BC 
        005B23 00309A 0023A3 005D24 
        0014B4 002484 00AA24 00F34E 
        002560 00AA25 00CCCA 002637 
        00B826 00A17E 00270A 002527 
        0071B7 0027D8 003B28 003DBA 
        0028A2 003C29 0005C8 002968 
        006429 00CA18 002A2A 00E92A 
        008ADE 002AE9 00FC2B 004849 
        002BA5 00CB2C 000286 002C5E 
        007F2C 00B9BB 002D14 003F2D 
        006E0E 002DC7 002C2E 001F9F 
        002E77 00692E 00CE8F 002F25 
        00142F 007AFA 002FD0 004730 
        0024FC 003079 001E30 00CCAE 
        00311F 00B131 007227 0031C4 
        001632 00157E 003266 006332 
        00B6C6 003306 00AB33 005614 
        0033A5 000333 00F379 003441 
        007A34 008F07 0034DC 002335 
        0028CE 003575 000C35 00C0DD 
        00360C 004436 005743 0036A1 
        00DA36 00EC0C 003735 00DB37 
        007F47 0037C8 005338 0010FF 
        003859 004E38 00A141 0038E8 
        00D839 003016 003976 00FC39 
        00BD8A 003A03 00C33A 0049A7 
        003A8F 00383A 00D476 003B19 
        00633B 005E01 003BA2 004F3B 
        00E64F 003C2A 00033C 006D6B 
        003CB0 00883C 00F35B 003D35 
        00E53D 007827 003DBA 00213D 
        00FBD6 003E3D 00453E 007E70 
        003EBF 00573E 00FFFB 003F40 
        005E3F 00807F 003FC0 005F00 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000003 000B45 0003A7 002004 
        0042FB 0004DE 00D505 007AB0 
        000616 008B06 00B266 00074E 
        004007 00EA1B 000885 00F609 
        0021D1 0009BD 00AB0A 005986 
        000AF5 00610B 00913B 000C2D 
        00160C 00C8F1 000D64 00CC0E 
        0000A6 000E9C 00810F 00385C 
        000FD4 003710 007011 00110B 
        00EC11 00A7C7 001243 00A212 
        00DF7C 00137B 005714 001732 
        0014B3 000C15 004EE7 0015EA 
        00C216 00869D 001722 007717 
        00BE52 00185A 002D18 00F608 
        001991 00E21A 002DBD 001AC9 
        00981B 006573 001C01 004D1C 
        009D28 001D39 00031D 00D4DD 
        001E70 00B81F 000C93 001FA8 
        006E20 004448 0020E0 002321 
        007BFE 002217 00D922 00B3B3 
        00234F 008E23 00EB69 002487 
        004425 00231E 0025BE 00F926 
        005AD4 0026F6 00AE27 009289 
        00282E 006428 00CA3F 002966 
        00192A 0001F4 002A9D 00CF2B 
        0039AA 002BD5 00842C 00715F 
        002D0D 003A2D 00A915 002E44 
        00EF2E 00E0CA 002F7C 00A530 
        00187F 0030B4 005A31 005035 
        0031EC 001032 0087EA 003323 
        00C533 00BFA0 00345B 007B34 
        00F755 003593 003036 002F0B 
        0036CA 00E637 0066C0 003802 
        009B38 009E76 00393A 005039 
        00D62B 003A72 00063B 000DE1 
        003BA9 00BB3C 004596 003CE1 
        00713D 007D4C 003E19 00263E 
        00B501 003F50 00DC3F 00ECB7 
        004088 009141 00246C 0041C0 
        004742 005C22 0042F7 00FC43 
        0093D7 00442F 00B244 00CB8C 
        004567 006746 000342 00469F 
        001D47 003AF7 0047D6 00D248 
        0072AD 00490E 008849 00AA62 
        004A46 003D4A 00E218 004B7D 
        00F34C 0019CD 004CB5 00A84D 
        005183 004DED 005D00 000000 

0x00030C	$sbcdec.synthesis_coefs_m8
        005A82 007AA5 007D86 00A57D 
        00865A 00827A 005A82 007AA5 
        007D86 00A57D 00865A 00827A 
        00471C 00ED82 0075A1 0018F8 
        00B86A 006D99 009592 0067E7 
        000748 007D8A 005FB8 00E313 
        0030FB 00C589 00BE51 007641 
        00AFCF 00043B 00CF04 003B76 
        0041AF 0089BE 005130 00FBC5 
        0018F8 00B8B8 00E313 006A6D 
        009982 0075A1 007D8A 005F95 
        009267 00471C 00EDE7 000748 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        00E707 004847 001CED 009592 
        00677D 008A5F 008275 00A16A 
        006D99 00B8E3 001318 00F8B8 
        00CF04 003B76 0041AF 0089BE 
        005130 00FBC5 0030FB 00C589 
        00BE51 007641 00AFCF 00043B 
        00B8E3 00137D 008A5F 00E707 
        004895 009267 006A6D 009918 
        00F8B8 008275 00A147 001CED 
        00A57D 00865A 00827A 005A82 
        007AA5 007D86 00A57D 00865A 
        00827A 005A82 007AA5 007D86 
        009592 006718 00F8B8 007D8A 
        005F47 001CED 00B8E3 001382 
        0075A1 00E707 00486A 006D99 
        0089BE 0051CF 00043B 0030FB 
        00C576 0041AF 007641 00AF30 
        00FBC5 00CF04 003B89 00BE51 
        008275 00A195 009267 00B8E3 
        0013E7 000748 0018F8 00B847 
        001CED 006A6D 00997D 008A5F 
        008000 000080 000000 008000 
        000080 000000 008000 000080 
        000000 008000 000080 000000 
        008275 00A195 009267 00B8E3 
        0013E7 000748 0018F8 00B847 
        001CED 006A6D 00997D 008A5F 
        0089BE 0051CF 00043B 0030FB 
        00C576 0041AF 007641 00AF30 
        00FBC5 00CF04 003B89 00BE51 
        009592 006718 00F8B8 007D8A 
        005F47 001CED 00B8E3 001382 
        0075A1 00E707 00486A 006D99 

0x0003CC	$sbcenc.analysis_coefs_m8
        005A82 007A6A 006D99 007641 
        00AF7D 008A5F 007FFF 00FF7D 
        008A5F 007641 00AF6A 006D99 
        005A82 007A47 001CED 0030FB 
        00C518 00F8B8 000000 0000E7 
        000748 00CF04 003BB8 00E313 
        00A57D 0086E7 000748 0030FB 
        00C56A 006D99 007FFF 00FF6A 
        006D99 0030FB 00C5E7 000748 
        00A57D 008682 0075A1 0089BE 
        0051B8 00E313 000000 000047 
        001CED 007641 00AF7D 008A5F 
        00A57D 008682 0075A1 00CF04 
        003B47 001CED 007FFF 00FF47 
        001CED 00CF04 003B82 0075A1 
        00A57D 008618 00F8B8 007641 
        00AF6A 006D99 000000 000095 
        009267 0089BE 0051E7 000748 
        005A82 007AB8 00E313 0089BE 
        005118 00F8B8 007FFF 00FF18 
        00F8B8 0089BE 0051B8 00E313 
        005A82 007A6A 006D99 00CF04 
        003B82 0075A1 000000 00007D 
        008A5F 0030FB 00C595 009267 
        005A82 007A47 001CED 0089BE 
        0051E7 000748 007FFF 00FFE7 
        000748 0089BE 005147 001CED 
        005A82 007A95 009267 00CF04 
        003B7D 008A5F 000000 000082 
        0075A1 0030FB 00C56A 006D99 
        00A57D 00867D 008A5F 00CF04 
        003BB8 00E313 007FFF 00FFB8 
        00E313 00CF04 003B7D 008A5F 
        00A57D 0086E7 000748 007641 
        00AF95 009267 000000 00006A 
        006D99 0089BE 005118 00F8B8 
        00A57D 008618 00F8B8 0030FB 
        00C595 009267 007FFF 00FF95 
        009267 0030FB 00C518 00F8B8 
        00A57D 00867D 008A5F 0089BE 
        005147 001CED 000000 0000B8 
        00E313 007641 00AF82 0075A1 
        005A82 007A95 009267 007641 
        00AF82 0075A1 007FFF 00FF82 
        0075A1 007641 00AF95 009267 
        005A82 007AB8 00E313 0030FB 
        00C5E7 000748 000000 000018 
        00F8B8 00CF04 003B47 001CED 

0x00048C	$sbc.win_coefs_m8
        000000 000000 001486 00002C 
        00FE00 0048B2 00006B 00FE00 
        00956A 0000C1 008400 00E9CC 
        000107 00B201 0013BD 000105 
        006E00 00D3E3 000076 003FFF 
        00E890 00FF27 00C4FE 00359E 
        0002E5 00CD04 001C6E 00055A 
        00CF06 0086CE 000780 008908 
        0024A4 00084E 001907 00D7D1 
        00069F 00B404 0088FB 00017F 
        0044FD 007BAE 00F881 000DF2 
        00A1BA 00EBFE 0058E4 00C4A2 
        0022D0 00C22A 007CFA 0031F5 
        006738 00EEC6 003F1C 008844 
        003B3C 004810 00D84A 00708A 
        004B3D 00B24A 00708A 004810 
        00D844 003B3C 003F1C 008838 
        00EEC6 0031F5 00672A 007CFA 
        00DD2F 003EE4 00C4A2 00EBFE 
        0058F2 00A1BA 00F881 000DFD 
        007BAE 00017F 004404 0088FB 
        00069F 00B407 00D7D1 00084E 
        001908 0024A4 000780 008906 
        0086CE 00055A 00CF04 001C6E 
        00FD1A 0033FE 00359E 00FF27 
        00C4FF 00E890 000076 003F00 
        00D3E3 000105 006E01 0013BD 
        000107 00B200 00E9CC 0000C1 
        008400 00956A 00006B 00FE00 
        0048B2 00002C 00FE00 001486 

0x000504	$sbc.win_coefs_m4
        000000 000000 00232A 000061 
        00C600 00B328 0000FB 007A00 
        00FF12 00007A 0047FF 003774 
        0002CB 003F05 003B75 000764 
        006708 003DDD 00069F 00DC01 
        0091E5 00F89F 0024EC 001F5E 
        0022B6 003E31 00EAB9 003F23 
        009548 0025E5 004B58 004048 
        0025E5 003F23 009531 00EAB9 
        00DD49 00C2EC 001F5E 00F89F 
        002401 0091E5 00069F 00DC08 
        003DDD 000764 006705 003B75 
        00FD34 00C1FF 003774 00007A 
        004700 00FF12 0000FB 007A00 
        00B328 000061 00C600 00232A 

0x000540	$sbcdec.synthesis_coefs_m4
        005A82 007AA5 007D86 00A57D 
        00865A 00827A 0030FB 00C589 
        00BE51 007641 00AFCF 00043B 
        000000 000000 000000 000000 
        000000 000000 00CF04 003B76 
        0041AF 0089BE 005130 00FBC5 
        00A57D 00865A 00827A 005A82 
        007AA5 007D86 0089BE 0051CF 
        00043B 0030FB 00C576 0041AF 
        008000 000080 000000 008000 
        000080 000000 0089BE 0051CF 
        00043B 0030FB 00C576 0041AF 

0x000570	$sbc.loudness_offset_m4
0x000570	$sbc.loudness_offset
        FFFFFF 000000 000000 000000 
        FFFFFE 000000 000000 000001 
        FFFFFE 000000 000000 000001 
        FFFFFE 000000 000000 000001 

0x000580	$sbc.loudness_offset_m8
        FFFFFE 000000 000000 000000 
        000000 000000 000000 000001 
        FFFFFD 000000 000000 000000 
        000000 000000 000001 000002 
        FFFFFC 000000 000000 000000 
        000000 000000 000001 000002 
        FFFFFC 000000 000000 000000 
        000000 000000 000001 000002 

0x0005A0	$sbcenc.analysis_coefs_m4
        005A82 007A76 0041AF 007FFF 
        00FF76 0041AF 005A82 007A30 
        00FBC5 000000 0000CF 00043B 
        00A57D 008630 00FBC5 007FFF 
        00FF30 00FBC5 00A57D 008689 
        00BE51 000000 000076 0041AF 
        00A57D 0086CF 00043B 007FFF 
        00FFCF 00043B 00A57D 008676 
        0041AF 000000 000089 00BE51 
        005A82 007A89 00BE51 007FFF 
        00FF89 00BE51 005A82 007ACF 
        00043B 000000 000030 00FBC5 

0x0005D0	$sbcdec.bitmask_lookup
        000000 000000 000001 000000 
        000300 000007 000000 000F00 
        00001F 000000 003F00 00007F 
        000000 00FF00 0001FF 000003 
        00FF00 0007FF 00000F 00FF00 
        001FFF 00003F 00FF00 007FFF 
        0000FF 00FF00 

0x0005EA	$sbcenc.level_coefs
        000000 008000 000180 000003 
        008000 000780 00000F 008000 
        001F80 00003F 008000 007F80 
        0000FF 008001 00FF80 0003FF 
        008007 00FF80 000FFF 00801F 
        00FF80 003FFF 00807F 00FF80 

0x000602	$sbcdec.levelrecip_coefs
        00AAAA 00AB92 004925 008888 
        008984 002108 008208 002181 
        000204 008080 008180 004020 
        008020 000880 001002 008008 
        000180 000400 008002 000080 
        000100 008000 008000 

========================================================================
memusage
========================================================================
DATA:
  DM1_REGION: 11427 of 32768 words used, 21341 words available in 1 blocks
  DM2_REGION: 11427 of 32768 words used, 21341 words available in 1 blocks
  flash.data16: 653 of 1048576 words used, 1047923 words available in 1 blocks
  flash.data24: 178 of 1048576 words used, 1048398 words available in 1 blocks
  flash.windowed_data16: 1561 of 16777216 words used, 16775655 words available in 1 blocks
TOTAL: 25246 of 18939904 words used, 18914658 words available in 5 blocks

CODE:
  PM_REGION: 10444 of 11264 words used, 820 words available in 1 blocks
  flash.code: 1529 of 16764928 words used, 16763399 words available in 1 blocks
TOTAL: 11973 of 16776192 words used, 16764219 words available in 2 blocks

